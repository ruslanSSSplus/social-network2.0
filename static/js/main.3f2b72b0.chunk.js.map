{"version":3,"sources":["components/ProfileGena/GenaProfileInfo/GenaProfileInfo.module.css","components/Diallogs/Eachdialog/Eachdialog.module.css","components/Paginator/Paginator.module.css","components/Friends/All/Friend/Friend.module.css","components/Diallogs/Eachmessage/Eachmessage.module.css","pages/Chat/ChatPage.module.css","redux/musicReducer.ts","components/News/News.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","api/api.ts","reportWebVitals.js","api/user-api.ts","redux/friendsReducer.ts","components/Friends/All/Friend/Friend.tsx","components/Friends/All/All.tsx","hoc/withAuthRedirect.tsx","components/Friends/All/AllContainerHook.tsx","components/Friends/Friends.tsx","components/ProfileGena/GenaPosts/GenaPosts.jsx","components/ProfileGena/GenaProfileInfo/GenaProfileInfo.jsx","components/ProfileGena/GenaProfile.jsx","components/NikitaProfile.jsx","redux/dialogReducer.ts","components/Diallogs/Eachmessage/Eachmessage.tsx","components/Diallogs/Eachdialog/Eachdialog.tsx","components/Diallogs/Diallogs.tsx","components/Diallogs/DiallogsContainer.tsx","components/AddPostForm/AddPostForm.tsx","components/News/News.tsx","redux/newsReducer.ts","api/profile-api.ts","redux/profileReducer.ts","components/News/EachNew/EachNew.tsx","components/News/NewsContainer.tsx","assets/images/04de2e31234507.564a1d23645bf.gif","components/common/Preloder/Preloader.tsx","redux/friendsSelectors.ts","assets/images/DZIAss-5O_I.jpg","components/Users/EachUser.tsx","components/Paginator/Paginator.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","api/auth-api.ts","api/security-api.ts","redux/authReducer.ts","redux/appReducer.ts","redux/sideBarReducer.ts","api/chat-api.ts","redux/chatReducer.ts","api/film-api.ts","redux/filmReducer.ts","redux/mainTest.ts","api/books-api.ts","redux/books.ts","redux/reduxStore.ts","components/Login/LoginFormAuth.tsx","components/Login/Login.tsx","components/Header/Header.tsx","pages/Chat/ChatPage.tsx","components/Weather/Loading/Loading.tsx","components/Weather/Weather/Weather.tsx","api/weather-api.ts","components/Weather/WeatherContainer.tsx","components/Films/eachFilm.tsx","components/Films/Films.tsx","components/Films/FilmsContainer.tsx","components/TestRoute/mainPage.tsx","components/TestRoute/ProfilePage.tsx","components/Books/Search.jsx","components/Books/BookCard.jsx","components/Books/BookList.jsx","components/Books/Books.jsx","App.tsx","index.js","components/Profile/MyPosts/MyPosts.module.css","components/Users/users.module.css","components/Books/books.module.css","components/Films/Films.module.css","components/Login/Login.module.css","components/Weather/Weather.module.css","components/News/EachNew/EachNew.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Diallogs/Diallogs.module.css","components/Header/Header.module.css","components/TestRoute/mainAndProfilePages.module.css","components/Friends/All/All.module.css","App.module.css","components/ProfileGena/GenaPosts/GenaPosts.module.css"],"names":["module","exports","ADD_SONG","UPDATE_NEW_SONG_TEXT","initialState","songs","id","nameSong","newsongtext","count","songOnChangeActionCreator","text","type","newText","addSongActionCreator","musicReducer","state","action","newSong","ResultCodeEnum","ResultCodeWithCaptchaEnum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","term","friend","get","response","data","delete","post","ADD_USER","FRIEND_CHECK","FRIEND_REMOVE","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_ITEMS_COUNT","IS_FETCHING","SET_FILTER","friendDate","link","name","avatar","surname","friendsAlready","users","totalItemsCount","isFetching","isFriend","filter","actions","friendCheckAC","removeFriendAC","idToRemove","follow","userId","unfollow","setUsers","addUserAC","avatarPhoto","isFetchingDispatch","isFetchingBOOL","setTotalItemsCount","Count","setCurrentPage","p","setFilter","payload","getUsersThunkCreater","dispatch","a","items","totalCount","unfollowThunk","resultCode","friendsReducer","stateCopy","friendDateSet","friendsCollection","Set","newFriendUser","add","Array","from","item","map","u","followed","Friend","props","className","classes","alt","src","to","onClick","dropbtn","All","friendsAll","friends","el","name1","React","createRef","ava1","all","seacrh","textare","ref","but","current","value","addfriend","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","connect","compose","getUsersThunk","i","photos","large","useEffect","Friends","per","GenaPosts","MyPostsAll","CreateNewPost","button","GenaProfileInfo","wallpaper","description","GenaProfile","posts","NikitaProfile","ADD_MESSAGE","messages","message","dialogs","addMessageActionCreator","dialogReducer","newMessage","Eachmessage","massages","massage","Eachdialog","path","dialog","active","activeClassName","activeLink","initialValues","AddMessageForm","onSubmit","component","Diallogs","dialogsElements","messageElements","values","dialogsitem","massages1","AddPostFormik","validationSchema","Yup","new","required","max","pic","addPostActionCreator","fieldPosts","error","textarea","placeholder","News","newsElements","content","AddPostForm","time","user","picture","newsReducer","profileAPI","status","put","photoFile","formData","FormData","append","res","profile","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","SET_ERROR","SET_OWNER_PHOTO","countPosts","isError","photo","newsImport","deletePost","setUsersProfile","savePhotoSuccess","setErrorProfile","Error","setStatus","setOwnerAvatar","getProfileThunk","profileReducer","newPost","unshift","EachNew","news","newsName","ava","mes","Preloader","preLoader","getUsers","getAPageSize","getTotalCount","getCurrentPage","getisFetching","getUsersFilter","EachUser","newUsers","userInfo","small","photoAva","userPhoto","userInfoShort","fullname","country","city","buttons","followThunk","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","cn","selectedPage","pageNumber","usersSearchValidation","UsersSearchForm","memo","useSelector","enableReinitialize","String","validate","setSubmitting","onFilterChanged","isSubmitting","as","disabled","Users","useDispatch","history","useHistory","parsed","queryString","location","search","substr","actualPage","actualFilter","page","Number","query","pathname","unfollowThunk1","followThunk1","UsersPage","ProfileStatusWithHooks","editMode1","setEditMode1","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatusThunk","autoFocus","ProfileDataForm","info","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","editButton","fullName","aboutMe","contactTitle","ContactValue","lookingForAJob","lookingForAJobDescription","Contact","ProfileInfo","savePhoto","saveProfile","editMode","setEditMode","target","files","length","Post","MyPosts","postDate","MyPostsContainer","Profile","ProfileContainer","match","params","AuthorizedUserId","getStatusThunk","refreshProfile","prevProps","prevState","file","getState","Promise","reject","withRouter","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATE","SET_USER_AVATAR","GET_CAPTCHA_URL_SUCCESS","login","userAva","captchaUrl","getAuthThunk","Success","gerCaptchaUtl","url","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","bestfriends","sideBarReducer","subscribers","ws","closeHandler","notifySubsAboutStatus","setTimeout","createChannel","onMessageHandler","JSON","parse","forEach","s","openHandler","errorHandler","console","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatApi","eventName","callback","send","SET_RECEIVED","STATUS_CHANGED","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","chatReducer","m","v1","index","array","filmAPI","movies","ADD_FILM","DELETE_FILM","LIKE_FILM","DISLIKE_FILM","films","isLoading","getFilmsThunkCreater","response2","obj","like","log","allFilms","deleteFilm","likeFilm","dislikeFilm","filmReducer","UPDATE_NEW_LOGIN_TEXT","UPDATE_NEW_PASSWORD_TEXT","IS_DISABLED","NEED_REDIRECT","newLogintext","newPasswordtext","isDisabled","needRedirect","mainTestReducer","booksAPI","smth","NEW_SEARCH","ADD_BOOKS","NEW_SORT","books","searchField","sort","ccleaner","book","volumeInfo","hasOwnProperty","thumbnail","imageLinks","searchBookThunkCreater","cleanBooks","addBooks","handleSearchAC","handleSort","booksReducer","rootReducer","combineReducers","musics","sideBar","app","chat","film","maintest","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","checkbox","LoginFormAuth","CaptchaIsRequired","field","Login","HeaderComponent","header","loginBlock","signIn","button1","userAvatar","ChatPage","Chat","Messages","messagesAnchorRef","useRef","autoScrollIsActive","SetAutoScrollIsActive","scrollIntoView","behavior","onScroll","element","abs","scrollHeight","scrollTop","clientHeight","Message","userName","AddMassageForm","setMessage","sendMessage","sendMessageThunk","onKeyDown","event","preventDefault","stopPropagation","Loading","loading","weatherOptions","Rain","iconName","gradient","title","subTitle","Snow","Drizzle","Thunderstorm","Dust","Mist","Smoke","Haze","Sand","Ash","Squall","Tornado","Clear","Clouds","Weather","temp","condition","halfContainer","style","backgroundImage","weatherAPI","latitude","longitude","WeatherContainer","setIsLoading","setTemp","setCondition","gerPosition","pos","crd","coords","getWeather","main","weather","getLocation","navigator","geolocation","getCurrentPosition","alert","round","EachFilm","d","undefined","genres","eachFilm","large_cover_image","png","rating","des","dislike","Films","filmsElements","description_full","FilmsContainer","MainPage","disabledChanger","pass","input","ProfilePage","Search","searchBook","form","handleSearch","defaultValue","BookCard","full","image","author","published","substring","BookList","fullAll","publisher","publishedDate","Books","sortedBooks","b","parseInt","Header","Layout","Content","Footer","Sider","MusicContainer","lazy","App","needWeather","initialiseApp","onerror","errorMsg","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","logo","logo1","theme","mode","defaultSelectedKeys","Item","icon","UserOutlined","VideoCameraOutlined","WechatOutlined","SearchOutlined","SoundOutlined","MessageOutlined","setState","CloudOutlined","padding","height","margin","minHeight","render","NewsContainer","fallback","DiallogsContainer","textAlign","AppContainer","AppAllTree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3f2b72b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"GenaProfileInfo_avatar__zIEQ_\",\"wallpaper\":\"GenaProfileInfo_wallpaper__VCGS4\",\"description\":\"GenaProfileInfo_description__pQC5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Eachdialog_dialog__1psZy\",\"activeLink\":\"Eachdialog_activeLink__VZA7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2-qx_\",\"pageNumber\":\"Paginator_pageNumber__yGoSK\",\"selectedPage\":\"Paginator_selectedPage__OLHGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__G3gcE\",\"name\":\"Friend_name__2DMx9\",\"dropbtn\":\"Friend_dropbtn__mqe2h\",\"dropdown\":\"Friend_dropdown__1Q3hE\",\"dropdowncontent\":\"Friend_dropdowncontent__3gsoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massages\":\"Eachmessage_massages__137J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ChatPage_ava__1F5tH\",\"messages\":\"ChatPage_messages__1z32o\"};","const ADD_SONG = 'ADD-SONG';\r\nconst UPDATE_NEW_SONG_TEXT = 'UPDATE-NEW-SONG-TEXT';\r\n\r\n\r\n\r\nexport type SongsType = {\r\n    id: number\r\n    nameSong: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n        songs: [\r\n            {\r\n                id: 1, nameSong: 'gachimuchi -' +\r\n                    ' А как насчёт ♂?♂'\r\n            },\r\n            {\r\n                id: 2, nameSong: 'GACHIMUCHI -' +\r\n                    ' Чудо (right version)'\r\n            },\r\n            {\r\n                id: 3, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Филипп Киркоров - Это не снег♂'\r\n            },\r\n            {\r\n                id: 4, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Спокойная ночь - Кино♂'\r\n            },\r\n            {\r\n                id: 5, nameSong: 'GachiMuchi -' +\r\n                    ' Я назову планету'\r\n            },\r\n        ] as Array<SongsType>,\r\n        newsongtext: \"\",\r\n    count: 7\r\n    }\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionTypes = SongOnChangeActionCreatorType | AddSongActionCreatorType\r\n\r\nconst musicReducer = (state = initialState, action: ActionTypes): initialStateType => {\r\n\r\n\r\n    switch (action.type){\r\n        case ADD_SONG: {\r\n            let newSong = {\r\n                id: state.count,\r\n                nameSong: state.newsongtext,\r\n\r\n            };\r\n            return {...state,\r\n                songs: [newSong, ...state.songs],\r\n                newsongtext: '',\r\n                count: state.count+1\r\n            };\r\n        }\r\n        case UPDATE_NEW_SONG_TEXT:\r\n            return  {...state,\r\n                newsongtext: action.newText\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\ntype SongOnChangeActionCreatorType = {\r\n    type: typeof UPDATE_NEW_SONG_TEXT,\r\n    newText: string\r\n}\r\nexport const songOnChangeActionCreator = (text: string): SongOnChangeActionCreatorType => ({\r\n    type: UPDATE_NEW_SONG_TEXT,\r\n    newText: text\r\n})\r\ntype AddSongActionCreatorType = {\r\n    type: typeof ADD_SONG,\r\n}\r\nexport const addSongActionCreator = (): AddSongActionCreatorType => ({type: ADD_SONG});\r\n\r\nexport default musicReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__1G3TA\",\"textarea\":\"News_textarea__3SkEi\",\"button\":\"News_button__2VTYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__DXWvy\",\"wallpaper\":\"ProfileInfo_wallpaper__2sqrq\",\"description\":\"ProfileInfo_description__2pVo3\",\"info\":\"ProfileInfo_info__39Vzn\",\"error\":\"ProfileInfo_error__2JVZX\",\"editButton\":\"ProfileInfo_editButton__3ZZnL\"};","import axios from \"axios\";\r\nimport {photosType} from \"../Types/Types\";\r\n\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '1c389392-606e-42a1-8d6e-0ba8e47b4434'\r\n    }\r\n});\r\nexport type itemsType = {\r\n    name: string\r\n    id: number\r\n    photos: photosType\r\n    status: string\r\n    followed: boolean\r\n}\r\nexport type getUsersType = {\r\n    items: Array<itemsType>\r\n    totalCount: number\r\n    error: null | any\r\n}\r\n\r\n\r\n\r\n\r\nexport enum ResultCodeEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\nexport enum ResultCodeWithCaptchaEnum  {\r\n        CaptchaIsRequired = 10\r\n}\r\n\r\nexport type getAuthType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\nexport type loginType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodeEnum | ResultCodeWithCaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\n\r\n\r\n\r\nexport type ThreeParamsType = {\r\n    data: {\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\nexport type savePhotoType = {\r\n    data:\r\n        {\r\n            photos: photosType\r\n        }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","    import {ProfileType} from \"../Types/Types\";\r\nimport {getUsersType, instance, ThreeParamsType} from \"./api\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage =1, pageSize = 10, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<getUsersType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? \"\" : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUsersFriends(){\r\n        return instance.get<getUsersType>(`users`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n\r\n    getProfilePhoto(){\r\n        return instance.get<ProfileType>(`profile/9`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUnfollow(id: number){\r\n        return instance.delete<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getFollow(id: number){\r\n        return instance.post<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}","\r\nimport { UserType} from \"../Types/Types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {usersAPI} from \"../api/user-api\";\r\n\r\nconst ADD_USER = 'ADD_USER';\r\nconst FRIEND_CHECK = 'FRIEND_CHECK'\r\nconst FRIEND_REMOVE = 'FRIEND_REMOVE'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_ITEMS_COUNT = 'SET_TOTAL_ITEMS_COUNT'\r\nconst IS_FETCHING = 'IS_FETCHING'\r\nconst SET_FILTER = 'SET_FILTER'\r\n\r\nexport type FriendDateType = {\r\n    id: number,\r\n    link: string,\r\n    name: string,\r\n    avatar: string,\r\n    surname: string,\r\n    friendsAlready: boolean,\r\n\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n    friendDate: [\r\n        {\r\n            id: 1111111,\r\n            link: '/https://vk.com/dank_af',\r\n            name: 'Геннадий',\r\n            avatar: 'https://meragor.com/files/styles//ava_800_800_wm/ava-241.jpg',\r\n            surname: 'Льянов',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 2222222,\r\n            link: 'https://vk.com/get_imba',\r\n            name: 'Тимур',\r\n            surname: 'Льянов',\r\n            avatar: 'https://i.pinimg.com/originals/d2/27/67/d22767e3ecd58f14c839092e1dfe3852.jpg',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 333333,\r\n            link: 'https://vk.com/evgeniasims',\r\n            name: 'Евгения',\r\n            surname: 'Хайретдинов',\r\n            avatar: 'http://sun9-67.userapi.com/s/v1/ig2/6JU7DbnLm46xuMVj9w2gHBOoagBCXOCkTilVO__oHcVOxVdwYVIxZAfEKG7R9_EnXUb-CLjsqkl-cuetoovsmwDU.jpg?size=200x0&quality=96&crop=1,1,1197,1197&ava=1',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 4444444,\r\n            link: 'https://vk.com/id153839551',\r\n            name: 'Кекс',\r\n            surname: 'Слесырев',\r\n            avatar: 'https://anime-fans.ru/wp-content/uploads/2021/01/Ochen-smeshnye-anime-avy_01.jpg',\r\n            friendsAlready: true,\r\n        },\r\n\r\n    ] as Array<FriendDateType> | any,\r\n\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalItemsCount: 222,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFriend: true,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    friendCheckAC :() => ({\r\n        type: FRIEND_CHECK,\r\n    } as const),\r\n    removeFriendAC:(idToRemove: number) => ({\r\n        type: FRIEND_REMOVE,\r\n        idToRemove: idToRemove\r\n    } as const),\r\n    follow:(userId: number) => ({\r\n        type: FOLLOW,\r\n        userId\r\n    } as const),\r\n    unfollow:(userId:number) => ({\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const),\r\n    setUsers:(users: Array<UserType>) => ({\r\n        type: SET_USERS,\r\n        users\r\n    } as const),\r\n    addUserAC:(id: number, avatarPhoto: string | null, name: string) => ({\r\n        type: ADD_USER,\r\n        id: id,\r\n        surname: null,\r\n        avatar: avatarPhoto,\r\n        name: name,\r\n    } as const),\r\n    isFetchingDispatch: (isFetchingBOOL: boolean)  => ({\r\n        type: IS_FETCHING,\r\n        isFetchingBOOL,\r\n    } as const),\r\n    setTotalItemsCount :(Count: number) => ({\r\n        type: SET_TOTAL_ITEMS_COUNT,\r\n        Count,\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n    setFilter: (filter: FilterType) => ({\r\n        type: SET_FILTER,\r\n        payload: filter\r\n    } as const),\r\n}\r\n\r\n\r\nconst friendsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_USER:\r\n            let stateCopy = {...state}\r\n            let friendDateSet = [...stateCopy.friendDate]\r\n            let friendsCollection = new Set(friendDateSet)\r\n            let newFriendUser = {\r\n                id: action.id,\r\n                name: action.name,\r\n                surname: action.surname,\r\n                avatar: action.avatar,\r\n                link: '/profile/' + action.id,\r\n                friendsAlready: true\r\n            };\r\n            friendsCollection.add(newFriendUser)\r\n            return {\r\n                ...state,\r\n                friendDate: Array.from(friendsCollection)\r\n            };\r\n\r\n        case FRIEND_CHECK:\r\n            return {\r\n                ...state,\r\n                isFriend: false\r\n            }\r\n        case FRIEND_REMOVE:\r\n            return {\r\n                ...state,\r\n                friendDate: state.friendDate.filter((item: any) => item.id !== action.idToRemove)\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        case SET_TOTAL_ITEMS_COUNT: {\r\n            return {...state, totalItemsCount: action.Count}\r\n        }\r\n        case IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetchingBOOL}\r\n        }\r\n        case SET_FILTER: {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type ThunkType = BaseThunkType<ActionsType>\r\n\r\nexport const getUsersThunkCreater = (currentPage: number,\r\n                                     pageSize: number,\r\n                                     filter: FilterType): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.isFetchingDispatch(true))\r\n        dispatch(actions.setCurrentPage(currentPage))\r\n        dispatch(actions.setFilter(filter))\r\n        let response = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend)\r\n            dispatch(actions.isFetchingDispatch(false))\r\n            dispatch(actions.setUsers(response.items))\r\n            dispatch(actions.setTotalItemsCount(response.totalCount))\r\n    }\r\n}\r\nexport const getUsersThunk = (isFriend: boolean): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getUsersFriends()\r\n    for (let i = 0; i < 10; i++) {\r\n        if (response.items[i].followed === true && isFriend) {\r\n            dispatch(actions.addUserAC(response.items[i].id, response.items[i].photos.large != null ?\r\n                response.items[i].photos.large : 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', response.items[i].name,))\r\n        }\r\n    }\r\n    dispatch(actions.friendCheckAC())\r\n}\r\nexport const unfollowThunk = (id: number): ThunkType => async (dispatch) => {\r\n    if (id > 100000) {\r\n        dispatch(actions.removeFriendAC(id))\r\n    } else {\r\n        let response = await usersAPI.getUnfollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(actions.unfollow(id))\r\n            dispatch(actions.removeFriendAC(id))\r\n        }\r\n    }\r\n}\r\n    export const followThunk = (id: number, photo: string | null, name: string): ThunkType => async (dispatch ) => {\r\n    let response = await usersAPI.getFollow(id)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actions.follow(id))\r\n        photo != null\r\n            ? dispatch(actions.addUserAC(id, photo, name)) :\r\n            dispatch(actions.addUserAC(id, 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', name))\r\n    }\r\n}\r\n\r\nexport default friendsReducer;","import React from 'react';\r\nimport classes from './Friend.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n  key: number\r\n  id: number\r\n  link: string\r\n  name: string\r\n  surname: string\r\n  avatar: string\r\n  unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst Friend: React.FC<PropsType>  = (props) => {\r\n\r\n  let unfollowing = (id: number) => {\r\n      props.unfollowThunk(id)\r\n\r\n  }\r\n\r\n  return <div>\r\n\r\n    <div className={classes.item}>\r\n      <img alt={'ku'} src={props.avatar} />\r\n      <NavLink to={props.link}> {props.name} {props.surname} </NavLink>\r\n      <button onClick={() =>{unfollowing(props.id)}} className={classes.dropbtn}>Удалить из друзей</button>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport classes from './All.module.css'\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nimport {FriendDateType} from \"../../../redux/friendsReducer\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    addfriend: (id: number, avatarPhoto: string, name: string) => void\r\n    friends:  Array<FriendDateType>\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst All: React.FC<PropsType> =(props) => {\r\n\r\n    let friendsAll= props.friends.map(el =>  <Friend key={el.id} id={el.id} link = {el.link} name = {el.name} surname= {el.surname} avatar={el.avatar} unfollowThunk={props.unfollowThunk}/>)\r\n    let name1: any = React.createRef()\r\n    let ava1: any = React.createRef()\r\n\r\n    let addFriend = () => {\r\n\r\n        ava1.current.value ===\"\" ?   props.addfriend(888888, 'https://sun1-93.userapi.com/s/v1/ig2/i3174V5HMNQgKMxXm43MBqaBeqvf9lPbnq34n_NTXqwUY7XMzkok7XT1gZSQjBqJbxhns3gHCZx93ppb6zlqA5wL.jpg?size=200x200&quality=96&crop=53,33,478,478&ava=1', name1.current.value)\r\n        : props.addfriend(888888, ava1.current.value, name1.current.value)\r\n        name1.current.value = '';\r\n        ava1.current.value = '';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        < div className={classes.all}>\r\n            <div className={classes.seacrh}>\r\n                name\r\n                <textarea className={classes.textare} ref={name1} >   </textarea>\r\n                ava\r\n                <textarea className={classes.textare} ref={ava1}> </textarea>\r\n                <button className={classes.but} onClick={addFriend}> Add New Friend </button>\r\n            </div>\r\n            {friendsAll}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default All;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n    class RedirectComponent extends React.Component<mapStateToPropsForRedirectType> {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {actions, FriendDateType, getUsersThunk, unfollowThunk} from \"../../../redux/friendsReducer\";\r\nimport All from \"./All\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    friends: Array<FriendDateType>\r\n    isFriend: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersThunk: (isFriend: boolean) => void\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    addUserAC: (id: number, avatarPhoto: string, name: string) => void\r\n\r\n}\r\n\r\ntype all = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\n\r\nconst AllContainerHook: React.FC<all> =(props)=> {\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( ()=>{\r\n        props.getUsersThunk(props.isFriend)\r\n    }, [])\r\n\r\n\r\n        return <All\r\n                addfriend={props.addUserAC}\r\n                friends={props.friends}\r\n                unfollowThunk={props.unfollowThunk}\r\n            />\r\n}\r\nlet mapStateToProps =(state: AppStateType) => {\r\n\r\n    return {\r\n        friends: state.friends.friendDate,\r\n        isFriend: state.friends.isFriend,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {unfollowThunk, getUsersThunk, ...actions}),\r\n    withAuthRedirect,\r\n)(AllContainerHook)\r\n\r\n","import React from 'react';\r\nimport classes from './Friends.module.css'\r\n\r\nimport AllContainerHook from \"./All/AllContainerHook\";\r\n\r\n\r\n\r\n\r\n\r\nconst Friends =() => {\r\n    return (<div className={classes.per}>\r\n            {/*<FriendsControl />*/}\r\n            <AllContainerHook />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport classes from './GenaPosts.module.css'\r\n\r\n\r\n\r\nconst GenaPosts = (props) => {\r\n\r\n\r\n\r\n  return <div className={classes.MyPostsAll}>\r\n    <h3> My posts </h3>\r\n    \r\n    <div className={classes.CreateNewPost} >\r\n      Create New Post\r\n    </div>\r\n    <div>\r\n      <div>\r\n                <textarea className={classes.text} />\r\n      </div>\r\n      <div>\r\n        <button className={classes.button} >Send</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default GenaPosts;","import React from 'react';\r\n\r\nimport classes from './GenaProfileInfo.module.css'\r\n\r\nconst GenaProfileInfo = () => {\r\n    return <div>\r\n        <div className={classes.wallpaper}>\r\n            <img\r\n                src=\"https://sun9-78.userapi.com/impg/NrSWcMzkCka2yzSn3A9lmLm2c6Jg5QGPOKYM_A/aZTfjfpwHRo.jpg?size=1600x648&quality=96&sign=2e39caafd67c569a65eca8d1d40f223a&type=album\"/>\r\n        </div>\r\n      <div className={classes.description}>\r\n        <div className={classes.avatar}>\r\n            <img src=\"https://sun9-74.userapi.com/impg/K_kf_03-X8lP2uixO9tzjxIjrNyUztz0yAMcdw/cBvjDD8FRDs.jpg?size=640x640&quality=96&sign=cc6043c92263a14c75dc8e5517f59cf8&type=album\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfileInfo;","import React from 'react';\r\nimport GenaPosts from './GenaPosts/GenaPosts';\r\n\r\nimport GenaProfileInfo from \"./GenaProfileInfo/GenaProfileInfo\";\r\n\r\n\r\nconst GenaProfile = (props) => {\r\n\r\n    return <div>\r\n        <GenaProfileInfo/>\r\n\r\n        <GenaPosts posts={props.posts} dispatch={props.dispatch}/>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfile;","import React from 'react';\r\n\r\n\r\nconst NikitaProfile = (props) => {\r\n\r\n    return <div>\r\n    <img src='https://sun9-59.userapi.com/impg/-0uRmUFYMzw1edpnx6Zf26nyDK5C9k8lfa1ZNA/mY7HJSdsAJU.jpg?size=537x645&quality=96&sign=ebb93117806db9e5e54a3de35211efc0&type=album' />\r\n    </div>\r\n}\r\n\r\nexport default NikitaProfile;","import {InferActionsTypes} from \"./reduxStore\";\r\n\r\n\r\nconst ADD_MESSAGE = 'DIALOGS/ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n        messages: [\r\n            {id: 1, message: 'loh gena loh'},\r\n            {id: 2, message: 'loh misha loh'},\r\n            {id: 3, message: 'loh pasha loh'},\r\n            {id: 4, message: 'loh nikita loh'},\r\n            {id: 5, message: 'loh tima loh'},\r\n        ] as Array<MessageType>,\r\n        dialogs: [\r\n            {id: 1, name: 'gena'},\r\n            {id: 2, name: 'misha'},\r\n            {id: 3, name: 'pasha'},\r\n            {id: 4, name: 'nikita'},\r\n            {id: 5, name: 'tima'},\r\n        ] as Array<DialogType>,\r\n    count: 6,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst dialogReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: state.count,\r\n                message: action.message,\r\n            };\r\n\r\n            return {...state,\r\n                messages: [newMessage, ...state.messages],\r\n                count: state.count+1\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addMessageActionCreator: (message: string) => ({\r\n        type: ADD_MESSAGE,\r\n        message\r\n    }as const)\r\n}\r\n\r\n\r\nexport default dialogReducer;","import React from 'react';\r\nimport classes from './Eachmessage.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    message: string\r\n}\r\n\r\n\r\nconst Eachmessage: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.massages}>\r\n                <div className={classes.massage}> {props.message}  </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Eachmessage;","import React from 'react';\r\nimport classes from './Eachdialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst Eachdialog: React.FC<PropsType> = (props) => {\r\n\r\n    let path = \"/diallogs/\" + props.id;\r\n    return (\r\n        < div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path} activeClassName={classes.activeLink}> {props.name}</NavLink>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Eachdialog;","import React from 'react';\r\nimport classes from './Diallogs.module.css'\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport Eachmessage from \"./Eachmessage/Eachmessage\";\r\nimport Eachdialog from \"./Eachdialog/Eachdialog\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogReducer\";\r\n\r\n\r\ntype MyFormValues = {\r\n    message: string;\r\n}\r\nconst initialValues: MyFormValues = {\r\n    message: 'wish',\r\n}\r\n\r\nexport type MapStatePropsType = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n}\r\nexport type MapDispatchPropsType = {\r\n    addMessageActionCreator: (newText: string) => void\r\n}\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\n\r\ntype OnSubmitType = {\r\n    onSubmit: (values: {message: string}) => void\r\n}\r\ntype all = PropsType & MyFormValues & OnSubmitType\r\n\r\nconst Diallogs: React.FC<all>  = (props) => {\r\n    let dialogsElements = props.dialogs.map(el => <Eachdialog key={el.id} id={el.id} name={el.name}/>)\r\n    let messageElements = props.messages.map(el => <Eachmessage key={el.id} message={el.message}/>)\r\n\r\n    const onSubmit = (values: {message: string}) =>{\r\n        props.addMessageActionCreator(values.message)\r\n    }\r\n\r\n    return (\r\n        < div>\r\n           <AddMessageForm onSubmit={onSubmit}/>\r\n            < div className={classes.dialogs}>\r\n\r\n                < div className={classes.dialogsitem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={classes.massages1}>\r\n                    {messageElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst AddMessageForm: React.FC<OnSubmitType> = (props) => {\r\n    return (<Formik initialValues={initialValues} onSubmit={props.onSubmit}>\r\n            <Form >\r\n                <div className={classes.seacrh}>\r\n                    <Field type='text' className={classes.text} name='message' component='textarea'/>\r\n                    <button className={classes.but} type='submit'> Add Message</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Diallogs;","import React from 'react';\r\n\r\nimport {actions } from \"../../redux/dialogReducer\";\r\nimport Diallogs, {MapDispatchPropsType, MapStatePropsType} from \"./Diallogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        messages: state.dialogs.messages,\r\n        dialogs: state.dialogs.dialogs\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {addMessageActionCreator: actions.addMessageActionCreator}),\r\n    withAuthRedirect\r\n)(Diallogs);","import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"../Profile/MyPosts/MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport * as Yup from 'yup'\r\n\r\n\r\ntype MyFormValues = {\r\n    new: string\r\n    pic: string\r\n}\r\ntype  PropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n}\r\n\r\n\r\n\r\nconst AddPostFormik: React.FC<PropsType> = (props) => {\r\n    const initialValues: MyFormValues = {\r\n        new: '',\r\n        pic: '',\r\n\r\n    }\r\n    const validationSchema = Yup.object({\r\n        new: Yup.string()\r\n            .required('Required')\r\n            .max(50, \"Too many symbols\"),\r\n        pic: Yup.string()\r\n            .required('Required')\r\n    })\r\n\r\n    const onSubmit = ( values: { new: string, pic: string }) => {\r\n        props.addPostActionCreator(values.new, values.pic)\r\n\r\n    }\r\n    return (<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        <Form>\r\n            <span className={classes.fieldPosts}>\r\n\r\n                <div className={classes.error}> <ErrorMessage name='new'/></div>\r\n                <div className={classes.error}><ErrorMessage name='pic'/></div>\r\n                <div> </div>\r\n                <Field className={classes.textarea} placeholder=\"ваша новость\" type='text' name='new'\r\n                      component='textarea'/>\r\n                <Field className={classes.textarea} placeholder=\"ваше картинка\" type='text' name='pic'\r\n                       component='textarea'/>\r\n <button className={classes.button}>Опубликовать</button>\r\n\r\n            </span>\r\n\r\n            </Form>\r\n    </Formik>)\r\n\r\n}\r\nexport default AddPostFormik","import React from 'react';\r\nimport classes from './News.module.css'\r\nimport AddPostFormik from \"../AddPostForm/AddPostForm\";\r\nimport {PostsType} from \"../../Types/Types\";\r\n\r\n\r\ntype PropsType = {\r\n    newsElements: Array<PostsType>\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n\r\n}\r\n\r\n\r\nconst News: React.FC<PropsType>  =(props) => {\r\n\r\n    let newsElements = props.newsElements\r\n\r\n    return (\r\n        < div className={classes.content}>\r\n           <div>\r\n\r\n                   <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n\r\n           </div>\r\n            {newsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import {PostsType} from \"../Types/Types\";\r\n\r\n\r\nlet initialState = {\r\n    new: [\r\n        {\r\n            id: 1,\r\n            time: 'сегодня в 11 утра',\r\n            post: 'Вчера посмотрел атаку титанов',\r\n            user: 'Timur Brat',\r\n            avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album',\r\n            picture: 'https://cdn.shazoo.ru/351151_Z0bYpFdK6E_8010ba67_497b_4038_9c6e_f9b0fa9c.jpg',\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня в 9 утра',\r\n            post: 'Посмотрел \"Твое Имя\", мне понравилось',\r\n            user: 'Gena Daun',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n            picture: 'https://www.mirf.ru/wp-content/uploads/2020/09/update_1___multi_sourced_4k__kimi_no_na_wa_by_assassinwarrior_dajydsn-fullview.jpg',\r\n        },\r\n        {\r\n            id: 3,\r\n            time: 'вчера в 12 ночи',\r\n            post: 'Всем привет',\r\n            user: 'Pavel Palov',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album',\r\n            picture: 'https://i.pinimg.com/originals/3c/8f/9a/3c8f9ad07c5f305354cdf087cf1d580c.jpg',\r\n        },\r\n        {\r\n            id: 4,\r\n            time: 'позавчера',\r\n            post: 'Я русский ',\r\n            user: 'Maks Voin',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album',\r\n            picture: 'https://cdni.rbth.com/rbthmedia/images/2020.07/original/5f1e888885600a2608563f65.jpg',\r\n        },\r\n        {\r\n            id: 5,\r\n            time: 'ну он просто лох',\r\n            post: 'я бабизян че тут сказать',\r\n            user: 'Sergey Ga4ibyan',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album',\r\n            picture: 'https://icdn.lenta.ru/images/2021/01/20/16/20210120164051128/wide_4_3_ad0a8dedf4f24c1002d87743b6451b83.jpg',\r\n        },\r\n    ] as Array<PostsType>\r\n\r\n}\r\nexport const getNewMassiv = () => { return initialState.new;}\r\ntype ActionTypes = null\r\n\r\nconst newsReducer = (state = initialState, action: ActionTypes) => {\r\n\r\n\r\n            return state;\r\n\r\n\r\n}\r\n\r\nexport default newsReducer;","import {ProfileType} from \"../Types/Types\";\r\nimport {instance, savePhotoType, ThreeParamsType} from \"./api\";\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number | null){\r\n        return instance.get<ProfileType>(`profile/`+ userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ThreeParamsType>(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile: File){\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put<savePhotoType>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res=>res.data)\r\n    },\r\n    saveProfile(profile: ProfileType){\r\n        return instance.put<ThreeParamsType>(`profile`, profile)\r\n    }\r\n}","import {getNewMassiv} from \"./newsReducer\";\r\n\r\nimport {photosType, PostsType, ProfileType} from \"../Types/Types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"./reduxStore\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_PHOTO = 'SET_PHOTO'\r\nconst SET_ERROR = 'profile/SET_ERROR';\r\nconst SET_OWNER_PHOTO = 'profile/SET_OWNER_PHOTO';\r\n\r\n\r\nlet initialState = {\r\n\r\n    posts: [\r\n\r\n        {\r\n            id: 1,\r\n            post: 'First Friend GEna',\r\n            user: 'Гена',\r\n            time: 'сегодня в 11 утра',\r\n            picture: 'https://sun9-35.userapi.com/impf/c846522/v846522118/18d9eb/E5pvZnPh9hU.jpg?size=1920x1080&quality=96&sign=028f51047f18db27b0be9c3f5f266980&type=album',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня',\r\n            post: ')))',\r\n            user: 'Gena',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n\r\n            picture: 'https://avatarko.ru/img/kartinka/1/Crazy_Frog.jpg',\r\n        },\r\n        {\r\n            id: 3,\r\n            post: '1111',\r\n            user: 'Pavel  -   ',\r\n            time: 'сегодня в ',\r\n            picture: 'https://99px.ru/sstorage/53/2020/12/mid_318736_308803.jpg',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album'\r\n        },\r\n\r\n        {\r\n            id: 4,\r\n            post: '222222222',\r\n            user: 'Maks  -   ',\r\n            time: 'сегодня в 11 ',\r\n            picture: 'https://oir.mobi/uploads/posts/2021-03/1616973116_8-p-fon-dlya-rabochego-stola-zhivie-oboi-9.jpg',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album'\r\n        },\r\n        {\r\n            id: 5,\r\n            post: '33333333333333',\r\n            user: 'Ga4ibyan  -   ',\r\n            time: 'сегодня в 11 утра',\r\n            picture: 'https://wallpapershome.ru/images/pages/ico_h/21906.jpg',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album'\r\n        }\r\n    ] as Array<PostsType>,\r\n\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    countPosts: 6,\r\n    isError: false,\r\n    photo: null as string | null\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nlet newsImport = getNewMassiv();\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.countPosts,\r\n                post: action.newText,\r\n                user: 'Вы  ',\r\n                avatar: \"https://n1s1.hsmedia.ru/30/a5/50/30a550ad429dc5b67118ec6c0a984137/620x440_1_61ebd8b8b757e8b7e6e0c8e6d9f2efbe@2055x1459_0xc0a839a2_12152610071478613656.jpeg\",\r\n                picture: action.pic,\r\n                time: 'сейчас',\r\n            };\r\n            debugger\r\n            newsImport.unshift(newPost)\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n\r\n                countPosts: state.countPosts + 1\r\n            };\r\n        }\r\n\r\n\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter((item) => item.id !== action.idToRemove)}\r\n        }\r\n        case SET_PHOTO: {\r\n\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType};\r\n        }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        case SET_OWNER_PHOTO:\r\n            return {\r\n                ...state,\r\n                photo: action.photo,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newText: string, pic: string) => ({\r\n        type: ADD_POST,\r\n        newText,\r\n        pic\r\n    } as const),\r\n    deletePost: (idToRemove: number) => ({\r\n        type: DELETE_POST,\r\n        idToRemove\r\n    }as const),\r\n    setUsersProfile: (profile: ProfileType) => ({\r\n        type: SET_USERS_PROFILE,\r\n        profile: profile,\r\n    }as const),\r\n    savePhotoSuccess :(photos: photosType)  => ({\r\n        type: SET_PHOTO,\r\n        photos\r\n    }as const),\r\n    setErrorProfile :(Error: boolean)  => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    setStatus: (status: string) => ({\r\n        type: SET_STATUS,\r\n        status\r\n    }as const),\r\n    setOwnerAvatar: (photo: string | null) => ({\r\n        type: SET_OWNER_PHOTO,\r\n        photo\r\n    }as const)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const  getProfileThunk = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setUsersProfile(response.data));\r\n}\r\nexport const  getOwnerAva = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setOwnerAvatar(response.data.photos.small));\r\n}\r\nexport const getStatusThunk = (userId: number):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(response.data));\r\n}\r\nexport const updateStatusThunk = (status: string):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.resultCode === 0){\r\n        debugger\r\n        dispatch(actions.savePhotoSuccess(response.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType):ThunkType => async (dispatch, getState) => {\r\n\r\n    const userId= getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0){\r\n        await dispatch(getProfileThunk(userId));\r\n        dispatch(actions.setErrorProfile(false))\r\n    }\r\n\r\n    else {\r\n        dispatch(actions.setErrorProfile(true))\r\n        return Promise.reject()\r\n    }\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport classes from './EachNew.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    post: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n}\r\n\r\nconst EachNew: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.news}>\r\n\r\n                <div className={classes.newsName}>\r\n\r\n                <img src={props.avatar} className={classes.ava} />\r\n                    <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={classes.content}>\r\n                        {props.post}\r\n                    </div>\r\n\r\n                <img src={props.picture} className={classes.picture}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachNew;","import React from 'react';\r\nimport News from \"./News\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {actions} from \"../../redux/profileReducer\";\r\nimport EachNew from \"./EachNew/EachNew\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        newsElements: state.news.new.map(el => <EachNew key={el.id} post={el.post} time={el.time} avatar={el.avatar} user={el.user}\r\n                                                        picture={el.picture}/>)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,{addPostActionCreator: actions.addPostActionCreator}),\r\n     withAuthRedirect\r\n)\r\n(News)\r\n","export default __webpack_public_path__ + \"static/media/04de2e31234507.564a1d23645bf.1cbc65b1.gif\";","import preLoader from \"../../../assets/images/04de2e31234507.564a1d23645bf.gif\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preLoader} alt={'loading'}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","\r\n\r\n\r\n\r\n// export  const getFriendsUsers =(state) =>{\r\n//     return state.friends.users\r\n// }\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\nexport  const getUsers =(state: AppStateType) =>{\r\n    return state.friends.users\r\n}\r\nexport  const getAPageSize =(state: AppStateType) =>{\r\n    return state.friends.pageSize\r\n}\r\nexport  const getTotalCount =(state: AppStateType) =>{\r\n    return state.friends.totalItemsCount\r\n}\r\nexport  const getCurrentPage =(state: AppStateType) =>{\r\n    return state.friends.currentPage\r\n}\r\nexport  const getisFetching =(state: AppStateType) =>{\r\n    return state.friends.isFetching\r\n}\r\nexport  const getUsersFilter =(state: AppStateType) =>{\r\n    return state.friends.filter\r\n}","export default __webpack_public_path__ + \"static/media/DZIAss-5O_I.d5bd3e11.jpg\";","import React from \"react\";\r\nimport classes from \"./users.module.css\";\r\nimport photoAva from \"../../assets/images/DZIAss-5O_I.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { UserType} from \"../../Types/Types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    key: number\r\n    unfollowThunk: (userId: number) => void\r\n    followThunk: (id: number, photo: string | null, name: string) => void\r\n}\r\n\r\nlet EachUser: React.FC<PropsType> = (props) => {\r\n    let user= props.user\r\n    return <div key={user.id} className={classes.newUsers}>\r\n                <div className={classes.userInfo}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img alt=\"avatar\" src={user.photos.small != null ? user.photos.small : photoAva} className={classes.userPhoto}/>\r\n                    </NavLink>\r\n                    <span className={classes.userInfoShort}>\r\n                <div className={classes.fullname}>\r\n                    {user.name}\r\n                </div>\r\n                <div className={classes.status}>\r\n                    {user.status != null ? user.status : 'я тут'}\r\n                </div>\r\n                 <div className={classes.country}>\r\n                    Russia\r\n                 </div>\r\n                <div className={classes.city}>\r\n                    Moscow\r\n                </div>\r\n            </span>\r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button onClick={() => { props.unfollowThunk(user.id) }} className={classes.buttons}> Удалить из друзей </button> :\r\n                        <button className={classes.buttons} onClick={() => { props.followThunk(user.id, user.photos.small, user.name)}}> Добавить в друзья </button>}\r\n                </div>\r\n\r\n            </div>\r\n}\r\n\r\nexport default EachUser","import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages:  Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber -1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={classes.paginator}>\r\n        {portionNumber >1 &&\r\n        <button onClick={()=> { setPortionNumber(portionNumber-1)}}> back </button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={cn ({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                }}> {p} </span>\r\n            })}\r\n        {portionCount> portionNumber &&\r\n        <button onClick={()=> {setPortionNumber(portionNumber + 1)}}> next </button>}\r\n        <button onClick={()=> {setPortionNumber(portionNumber=portionCount)}}> last </button>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/friendsReducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/friendsSelectors\";\r\n\r\n\r\nconst usersSearchValidation = (values: any)=> {\r\n    const errors = {}\r\n    return errors\r\n}\r\n type PropsType = {\r\n     onFilterChanged: (filter: FilterType) => void\r\n }\r\n\r\n type FriendFormType = 'true' | 'false' | 'null'\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n\r\n    const sumbit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n            validate={usersSearchValidation}\r\n            onSubmit={sumbit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" placeholder={'Find friend'}/>\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n})\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport EachUser from \"./EachUser\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\n\r\n\r\nimport {FilterType, followThunk, getUsersThunkCreater, unfollowThunk} from \"../../redux/friendsReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getAPageSize,\r\n    getCurrentPage,\r\n    getTotalCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/friendsSelectors\";\r\nimport {useHistory} from \"react-router\";\r\nimport * as queryString from \"querystring\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\n\r\ntype PropsType = {}\r\nexport type QueryType = {term?: string, page?: string, friend?: string}\r\n\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    const totalItemsCount = useSelector(getTotalCount)\r\n    const users = useSelector(getUsers)\r\n    const filter = useSelector(getUsersFilter)\r\n    const pageSize = useSelector(getAPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if(!!parsed.page) actualPage = Number(parsed.page)\r\n        if(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch (parsed.friend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null }\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true }\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false }\r\n                break;\r\n        }\r\n\r\n        dispatch(getUsersThunkCreater(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        const query: QueryType = {}\r\n\r\n       if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getUsersThunkCreater(pageNumber, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsersThunkCreater(1, pageSize, filter))\r\n    }\r\n    const unfollowThunk1 = (userId: number) => {\r\n        dispatch(unfollowThunk(userId))\r\n    }\r\n    const followThunk1 = (id: number, photo: string | null, name: string) => {\r\n        dispatch(followThunk(id, photo, name))\r\n    }\r\n\r\n    return <div>\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage}\r\n                   totalItemsCount={totalItemsCount}\r\n                   pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}\r\n                   portionSize={10}/>\r\n        <div>{\r\n            users.map(u => <EachUser user={u}\r\n                                     key={u.id}\r\n                                     unfollowThunk={unfollowThunk1}\r\n                                     followThunk={followThunk1}/>)\r\n        }</div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Preloader from \"../common/Preloder/Preloader\";\r\nimport {getisFetching} from \"../../redux/friendsSelectors\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n}\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n    const isFetching = useSelector(getisFetching)\r\n\r\n    return <>\r\n\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n\r\n\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\ntype all = PropsType\r\n\r\n\r\nconst ProfileStatusWithHooks : React.FC<all> =(props)=>{\r\n\r\n\r\n    let [editMode1, setEditMode1] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( ()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = ()=>{\r\n        setEditMode1(true)\r\n    }\r\n\r\n    const deactivateEditMode = ()=>{\r\n            setEditMode1(false)\r\n       props.updateStatusThunk(status)\r\n\r\n    }\r\n\r\n   const onStatusChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode1 &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n                </div>\r\n                }\r\n                {editMode1 &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport { Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {ProfileType} from \"../../../Types/Types\";\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n\r\n})\r\n\r\ntype PropsType = {\r\n    onSubmit: (values: any) => void\r\n    initialValues: ProfileType\r\n    profile: ProfileType\r\n    saveProfile: (profile: ProfileType) => any\r\n    isError: boolean\r\n}\r\n\r\n\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({initialValues, onSubmit, profile, isError}) =>{\r\n\r\n\r\n\r\n\r\n\r\n    return ( <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form>\r\n            {<div> <button >Save </button></div>}\r\n            <div className={classes.info}>\r\n                Name\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"ваше имя\" type='text' name='fullName'\r\n                   component='textarea'/>\r\n\r\n            <div className={classes.info}>\r\n                <b>Info</b>\r\n            </div>\r\n            <div >\r\n                <b>About me</b>:\r\n            </div>\r\n                <Field className={classes.textarea} placeholder=\"О вас\" type='text' name='aboutMe'\r\n                       component='textarea'/>\r\n            <div >\r\n              <b className={classes.info}> Contacts</b>\r\n                <div>{isError ? <span className={classes.error}> Wrong URL </span> : null} </div>\r\n                {Object.keys(profile.contacts).map(key=>{\r\n              return <div key={key} className={classes.info}>\r\n                <b> {key}: <Field  placeholder={key} type='text' name={\"contacts.\" + key}\r\n                                  component='input'/> </b>\r\n              </div>\r\n\r\n         })}\r\n         </div>\r\n\r\n\r\n            <div><b>lookingForAJob</b> </div>\r\n                <Field className={classes.textarea}  type='checkbox' name='lookingForAJob'/>\r\n\r\n            <div>\r\n                <b>My skills</b>\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"Ваши навыки\" type='text' name='lookingForAJobDescription'\r\n                    component='textarea'/>\r\n\r\n\r\n\r\n            {/*<div>userId - {profile.userId}</div>*/}\r\n            </Form>\r\n        </Formik>\r\n    )}\r\n\r\n\r\nexport default ProfileDataForm","import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloder/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {contactsType, ProfileType} from \"../../../Types/Types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile ,status, updateStatusThunk, isOwner, savePhoto, saveProfile, isError} ) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    if(!profile){\r\n        return <Preloader />}\r\n\r\n    const onSubmit = ( values: ProfileType) => {\r\n        saveProfile(values).then(\r\n            ()=>{\r\n                setEditMode(false)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>)=>{\r\n       if( e.target.files?.length){\r\n           // if (r.target.files && e.target.files.lenght){\r\n        savePhoto(e.target.files[0])\r\n       }\r\n    }\r\n\r\n\r\n    return <div>\r\n      <div className={classes.description}>\r\n        <div >\r\n            <img className={classes.avatar} alt=\"avatar\" src={ profile.photos.large === null ? 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png' : profile.photos.large }/>\r\n            {isOwner && <input onChange={mainPhotoSelected} type={'file'}/>}\r\n        </div>\r\n          <div className={classes.info}>\r\n              Status (дабл клик по статусу ниже и меняй)\r\n          </div>\r\n          <b><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk}/></b>\r\n          {editMode ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile} saveProfile={saveProfile} isError={isError}/> :\r\n          <ProfileData profile={profile} isOwner={isOwner} goToEditMode={()=> {setEditMode(true)}}/>}\r\n      </div>\r\n    </div>\r\n}\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, isOwner, goToEditMode}) =>{\r\n\r\n   return ( <div>\r\n           {isOwner && <div> <button className={classes.editButton} onClick={goToEditMode} >Edit Profile Info</button></div>}\r\n    <div className={classes.info}>\r\n        Name\r\n    </div>\r\n    <b>{profile.fullName}</b>\r\n\r\n    <div className={classes.info}>\r\n        <b>Info</b>\r\n    </div>\r\n    <div >\r\n        <b>About me</b>:  {profile.aboutMe}\r\n    </div>\r\n    <div >\r\n        <b className={classes.info}>Contacts</b>  :{Object.keys(profile.contacts).map((key)=>{\r\n        return <Contact key={key} contactTitle={key} ContactValue={profile.contacts[key as  keyof contactsType]}/>\r\n    })}\r\n    </div>\r\n\r\n    <div> <b>lookingForAJob</b>  {profile.lookingForAJob ? 'yes' : 'no'  }</div>\r\n    <div>{ profile.lookingForAJob &&\r\n    <div>\r\n        <b> My skills </b> -  {profile.lookingForAJobDescription}\r\n    </div>\r\n    }\r\n\r\n    </div>\r\n    </div>\r\n   )}\r\n\r\ntype ContactsPropsType = {\r\n    contactTitle: string\r\n    ContactValue: string\r\n}\r\nconst Contact: React.FC<ContactsPropsType> = ({contactTitle, ContactValue})=>{\r\n    return <div><b className={classes.info}>{contactTitle}</b>: {ContactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    new: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n    deletePost: ( id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n    let deletePost = ()=>{\r\n        props.deletePost(props.id)\r\n    }\r\n\r\n  return < div>\r\n\r\n    <div className={classes.news}>\r\n\r\n      <div className={classes.newsName}>\r\n\r\n        <img src={props.avatar} className={classes.ava}  alt=\"Avatar\"/>\r\n        <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        {props.new}\r\n      </div>\r\n    <div>\r\n      <img src={props.picture} className={classes.picture}  alt=\"avatar\"/>\r\n        <button onClick={deletePost}> delete post </button>\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport AddPostFormik from \"../../AddPostForm/AddPostForm\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostsType} from \"../../../Types/Types\";\r\n\r\nexport type MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n    deletePost: ( id: number) => void\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\nconst MyPosts: React.FC<PropsType> = (props)=> {\r\n\r\n    let postDate = props.posts.map(el => <Post key={el.id} id={el.id} new={el.post} time={el.time} avatar={el.avatar} user={el.user} picture={el.picture} deletePost={props.deletePost}/>)\r\n\r\n\r\n    return <div className={classes.MyPostsAll}>\r\n\r\n        <h1> My posts </h1>\r\n\r\n        <div className={classes.CreateNewPost}>\r\n            <h2>Create New Post </h2>\r\n        </div>\r\n        <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n        <div className={classes.posts}>\r\n            {postDate}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import MyPosts, {MapStatePropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {actions} from \"../../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        posts: state.profile.posts\r\n    } as MapStatePropsType\r\n}\r\n// let mapDispatchToProps: ThunkType =(dispatch) => {\r\n//     return {\r\n//         addPostActionCreator: (newText: string, pic: string) => {\r\n//             dispatch(addPostActionCreator(newText, pic))\r\n//         },\r\n//         deletePost: (id: number) =>{\r\n//             dispatch(deletePost(id))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n let MyPostsContainer = connect(mapStateToProps, {...actions } )(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../Types/Types\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo isError={props.isError}  saveProfile={props.saveProfile}  savePhoto={props.savePhoto} isOwner={props.isOwner}  profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk, getStatusThunk, savePhoto, saveProfile, updateStatusThunk} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {compose} from \"redux\";\r\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {ProfileType} from \"../../Types/Types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null,\r\n    status: string\r\n    AuthorizedUserId: number | null\r\n    isAuth: boolean\r\n    isError: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfileThunk: (userId: number | null) => void\r\n    savePhoto: (file: File) => void\r\n    getStatusThunk: (userId: number) => void\r\n    updateStatusThunk: (status: string) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\ntype PropsType = MapStatePropsType  & MapDispatchPropsType  & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType>{\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.AuthorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfileThunk(userId as number)\r\n        this.props.getStatusThunk(userId as number)\r\n    }\r\n\r\n\r\ncomponentDidMount()\r\n{\r\n    this.refreshProfile()\r\n}\r\n\r\ncomponentDidUpdate(prevProps: PropsType, prevState: AppStateType)\r\n{\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n    }\r\n\r\n}\r\n\r\nrender()\r\n{\r\n    return (\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                 updateStatusThunk={this.props.updateStatusThunk}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 savePhoto={this.props.savePhoto}\r\n                 isError={this.props.isError}\r\n                 saveProfile={this.props.saveProfile}\r\n        />\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType  => {\r\n    return {\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    AuthorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isError: state.profile.isError\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfileThunk, savePhoto, getStatusThunk, updateStatusThunk, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import {getAuthType, instance, loginType, ThreeParamsType} from \"./api\";\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get<getAuthType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email: string, password: string, rememberMe=false, captcha: null | string = null){\r\n        return instance.post<loginType>('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logOut(){\r\n        return instance.delete<ThreeParamsType>('auth/login')\r\n    }\r\n\r\n}","import {instance} from \"./api\";\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}","import {ResultCodeEnum, ResultCodeWithCaptchaEnum} from \"../api/api\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\nimport {usersAPI} from \"../api/user-api\";\r\nconst SET_USER_DATE = 'AUTH/SET_USER_DATE';\r\nconst SET_USER_AVATAR = 'AUTH/SET_USER_AVATAR';\r\nconst SET_ERROR = 'AUTH/SET_ERROR';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'AUTH/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    userAva: null as string | null,\r\n    isError: false,\r\n    captchaUrl: null as string | null,\r\n}\r\n\r\nexport type initialStateType= typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATE:\r\n         return {\r\n                ...state,\r\n             ...action.data,\r\n\r\n            }\r\n\r\n        case SET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                userAva: action.userAva,\r\n\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: SET_USER_DATE,\r\n        data: {\r\n            userId, email, login, isAuth\r\n        }} as const) ,\r\n    setUserAvatar : (avatar: string | null)  => ({\r\n        type: SET_USER_AVATAR,\r\n        userAva: avatar\r\n    }as const),\r\n    setError: (Error: boolean) => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string | null) => ({\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        captchaUrl\r\n    }as const)\r\n}\r\n\r\n\r\nexport const getAuthThunk = (): ThunkType =>async (dispatch) =>{\r\n      let response = await authAPI.getAuth()\r\n                if(response.resultCode === ResultCodeEnum.Success) {\r\n                    let {id, email, login} = response.data\r\n                    dispatch(actions.setAuthUserData(id, email, login, true))\r\n                    usersAPI.getProfilePhoto()\r\n                        .then(response => {\r\n                            dispatch(actions.setUserAvatar(response.photos.small))\r\n                         })\r\n                }\r\n    }\r\n\r\nexport const loginThunk = (email: string, password: string, rememberMe: boolean, captcha: string | null): ThunkType =>async (dispatch) =>{\r\n\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                  await  dispatch(getAuthThunk())\r\n                    dispatch(actions.setError(false))\r\n                    dispatch(actions.getCaptchaUrlSuccess(null))\r\n                }\r\n                 else  {\r\n                    if (response.data.resultCode === ResultCodeWithCaptchaEnum.CaptchaIsRequired){\r\n                        await  dispatch(gerCaptchaUtl())\r\n                    }\r\n                       dispatch(actions.setError(true))\r\n                }\r\n}\r\n\r\nexport const logOutThunk = (): ThunkType =>async (dispatch) =>{\r\n    let response = await authAPI.logOut()\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                    dispatch(actions.setAuthUserData(null, null, null, false))\r\n                }\r\n}\r\nexport const gerCaptchaUtl = (): ThunkType =>async (dispatch) =>{\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n        dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer;","import {getAuthThunk} from \"./authReducer\";\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({\r\n        type: INITIALIZED_SUCCESS,\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const initialiseApp = () =>{\r\n    return (dispatch: any) =>{\r\n      let promise =  dispatch(getAuthThunk())\r\n        promise.then( ()=> {\r\n            dispatch(actions.initializedSuccess())\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer;","\r\nexport type bestfriendsType ={\r\n    id: number,\r\n    name: string,\r\n    avatar: string\r\n    surname: string\r\n}\r\n\r\nlet initialState = {\r\n        bestfriends: [\r\n            {\r\n                id: 1,\r\n                name: 'Геннадий',\r\n                avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                surname: 'Льянов'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Тимур',\r\n                surname: 'Льянов',\r\n                avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Никита',\r\n                surname: 'кесырев',\r\n                avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album'\r\n            }\r\n        ] as Array<bestfriendsType>\r\n\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nconst sideBarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default sideBarReducer;","\r\n\r\nconst subscribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\n\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubsAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\n\r\nconst onMessageHandler = (e: MessageEvent)=> {\r\n    const newMessage = JSON.parse(e.data)\r\n    subscribers['messages-received'].forEach(s => s(newMessage))\r\n};\r\nconst openHandler = ()=> {\r\n    notifySubsAboutStatus('ready')\r\n};\r\nconst errorHandler = ()=> {\r\n    notifySubsAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n};\r\n\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', onMessageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\n\r\nconst notifySubsAboutStatus = (status: StatusType) => {\r\n    subscribers[\"status-changed\"].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n        ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubsAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', onMessageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\n\r\nexport const chatApi = {\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType |  StatusChangedSubscriberType) {\r\n        //@ts-ignore\r\n        subscribers[eventName].push(callback)\r\n        return () => {\r\n            //@ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    // тоже самое, что и ретурнит субскрайб, просто другой вариант\r\n    unSubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        //@ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n       ws?.send(message)\r\n    },\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop () {\r\n        subscribers['messages-received'] = []\r\n        subscribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type ChatMessageAPIType = {\r\n    userId: number,\r\n    userName: string,\r\n    message: string,\r\n    photo: string\r\n}\r\n\r\nexport type StatusType = 'pending' | 'ready' | 'error'\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void","import {v1} from 'uuid'\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {chatApi, ChatMessageAPIType, StatusType} from \"../api/chat-api\"\r\nimport {Dispatch} from \"redux\";\r\nconst SET_RECEIVED = 'CHAT/SET_RECEIVED';\r\nconst STATUS_CHANGED = 'CHAT/STATUS_CHANGED';\r\n\r\ntype ChatMessageType = ChatMessageAPIType & {id: string}\r\n\r\nlet initialState = {\r\n   messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n}\r\n\r\nexport type initialStateType= typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nconst chatReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_RECEIVED:\r\n\r\n         return {\r\n                ...state,\r\n            messages: [...state.messages, ...action.payload.messages.map(m => ({...m, id: v1() }))]\r\n                .filter((m, index, array) =>  index >= array.length - 100)\r\n            }\r\n        case STATUS_CHANGED:\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    messagesReceivedAC: (messages: ChatMessageAPIType[]) => ({\r\n        type: SET_RECEIVED,\r\n        payload: {messages}\r\n    }as const),\r\n    statusChanged: (status: StatusType) => ({\r\n        type: STATUS_CHANGED,\r\n        payload: {status}\r\n    }as const),\r\n\r\n}\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\nconst newMessageHandlerCreator= (dispatch: Dispatch) =>  {\r\n    if(_newMessageHandler === null) {\r\n        _newMessageHandler = (messages)=> {\r\n            dispatch(actions.messagesReceivedAC(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator= (dispatch: Dispatch) =>  {\r\n    if(_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status)=> {\r\n            dispatch(actions.statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesThunk = (): ThunkType =>async (dispatch) =>{\r\n    chatApi.start()\r\n    chatApi.subscribe('messages-received'  ,newMessageHandlerCreator(dispatch))\r\n    chatApi.subscribe('status-changed'  ,statusChangedHandlerCreator(dispatch))\r\n}\r\nexport const stopMessagesThunk = (): ThunkType =>async (dispatch) =>{\r\n    chatApi.unSubscribe('messages-received' , newMessageHandlerCreator(dispatch))\r\n    chatApi.unSubscribe('status-changed'  ,statusChangedHandlerCreator(dispatch))\r\n    chatApi.stop()\r\n}\r\nexport const sendMessageThunk = (message: string): ThunkType =>async (dispatch) =>{\r\n    chatApi.sendMessage(message)\r\n}\r\n\r\nexport default chatReducer;","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const filmAPI = {\r\n    getFilms(currentPage =1) {\r\n        return axios.get(`https://yts.mx/api/v2/list_movies.json?page=${currentPage}`).then(res=>res.data.data.movies)\r\n    },\r\n\r\n}","import {InferActionsTypes} from \"./reduxStore\";\r\nimport {filmAPI} from \"../api/film-api\";\r\nconst SET_CURRENT_PAGE = 'FILMS/SET_CURRENT_PAGE'\r\nconst ADD_FILM = 'FILMS/ADD_FILM';\r\nconst DELETE_FILM = 'FILMS/DELETE_FILM'\r\nconst LIKE_FILM = 'FILMS/LIKE_FILM'\r\nconst DISLIKE_FILM = 'FILMS/DISLIKE_FILM'\r\n\r\nexport type FilmType ={\r\n    background_image: string\r\n    background_image_original: string\r\n    date_uploaded: string\r\n    date_uploaded_unix: number\r\n    description_full: string\r\n    genres: Array<string>\r\n    id: number\r\n    imdb_code: string\r\n    language: string\r\n    large_cover_image: string\r\n    medium_cover_image: string\r\n    mpa_rating: string\r\n    rating: number\r\n    runtime: number\r\n    slug: string\r\n    small_cover_image:string\r\n    state: string\r\n    summary: string\r\n    synopsis: string\r\n    title: string\r\n    title_english: string\r\n    title_long: string\r\n    torrents: any\r\nurl: string\r\nyear: number\r\nyt_trailer_code: string\r\n    like?: boolean\r\n}\r\n\r\n\r\nlet initialState = {\r\n    films: [] as Array<FilmType> | any,\r\n    isLoading: true,\r\n    currentPage: 1\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst filmReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_FILM:\r\n            return {...state, films: action.films, isLoading: false}\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        case DELETE_FILM: {\r\n            return {...state, films: state.films.filter((item: FilmType) => item.id !== action.idToRemove)}\r\n        }\r\n        case LIKE_FILM: {\r\n            let stateCopy = {...state}\r\n            stateCopy.films = [...state.films]\r\n            state.films.map((item: FilmType) => {\r\n                if ( item.id === action.id)\r\n                {\r\n                    item.like = true\r\n                    return item\r\n                }return item})\r\n                return stateCopy\r\n\r\n\r\n        }\r\n        case DISLIKE_FILM: {\r\n            return {...state, films: state.films.filter((item: FilmType) => {\r\n                if ( item.id === action.id){\r\n                    item.like = false\r\n                    return item\r\n                }return item\r\n                })}\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getFilmsThunkCreater = (pageNumber: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(actions.setCurrentPage(pageNumber))\r\n        const response = await filmAPI.getFilms(pageNumber)\r\n        const response2 = response.map( (obj: FilmType) => {\r\n            obj.like = false;\r\n            return obj;\r\n        })\r\n        console.log(response2)\r\n        await dispatch(actions.allFilms(response2))\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport const actions = {\r\n    allFilms: (films: Array<FilmType>)  => ({\r\n        type: ADD_FILM,\r\n        films,\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n    deleteFilm: (idToRemove: number) => ({\r\n        type: DELETE_FILM,\r\n        idToRemove\r\n    }as const),\r\n    likeFilm: (id: number) => ({\r\n        type: LIKE_FILM,\r\n        id\r\n    }as const),\r\n    dislikeFilm: (id: number) => ({\r\n        type: DISLIKE_FILM,\r\n        id\r\n    }as const),\r\n}\r\n\r\n\r\nexport default filmReducer;","\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\n\r\nconst UPDATE_NEW_LOGIN_TEXT = 'MAINTEST/UPDATE_NEW_LOGIN_TEXT';\r\nconst UPDATE_NEW_PASSWORD_TEXT = 'MAINTEST/UPDATE_NEW_PASSWORD_TEXT';\r\nconst IS_DISABLED = 'MAINTEST/IS_DISABLED';\r\nconst NEED_REDIRECT = 'MAINTEST/NEED_REDIRECT';\r\n\r\nlet initialState = {\r\n    newLogintext: \"\",\r\n    newPasswordtext: \"\",\r\n    isDisabled: true,\r\n    needRedirect: false,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst mainTestReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case UPDATE_NEW_LOGIN_TEXT:\r\n            return  {...state,\r\n                newLogintext: action.newText\r\n            }\r\n        case UPDATE_NEW_PASSWORD_TEXT:\r\n            return  {...state,\r\n                newPasswordtext: action.newText\r\n            }\r\n        case IS_DISABLED:\r\n            return  {...state,\r\n                isDisabled: false\r\n            }\r\n        case NEED_REDIRECT:\r\n            return  {...state,\r\n                needRedirect: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    loginOnChangeActionCreator: (text: string) => ({\r\n        type: UPDATE_NEW_LOGIN_TEXT,\r\n        newText: text,\r\n    } as const ),\r\n    passwordOnChangeActionCreator: (text: string) => ({\r\n    type: UPDATE_NEW_PASSWORD_TEXT,\r\n    newText: text\r\n    } as const),\r\n    isDisabledAC: () => ({\r\n        type: IS_DISABLED,\r\n    } as const),\r\n    needRedirectAC: () => ({\r\n        type: NEED_REDIRECT,\r\n    } as const)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default mainTestReducer;","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const booksAPI = {\r\n    getBooks(smth = 'javascript') {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${smth}`).then(res=>res.data.items)\r\n    },\r\n}","import {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {booksAPI} from \"../api/books-api\";\r\n\r\n\r\nconst NEW_SEARCH = 'BOOKS/NEW_SEARCH'\r\nconst ADD_BOOKS = 'BOOKS/ADD_BOOKS';\r\nconst NEW_SORT = 'BOoKS/NEW_SORT'\r\n\r\n\r\nlet initialState = {\r\n    books: [] as Array<any>,\r\n    searchField: '',\r\n    sort: ''\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\n\r\nconst booksReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_BOOKS:\r\n            // @ts-ignore\r\n            return {...state, books: action.data,}\r\n        case NEW_SEARCH:\r\n            return {...state, searchField: action.text,}\r\n        case NEW_SORT:\r\n            return {...state, sort: action.text,}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst ccleaner = (data: any) => {\r\n    const cleanedData = data.map((book: any) => {\r\n        if (!book.volumeInfo.hasOwnProperty('publishedDate')) {\r\n            book.volumeInfo['publishedDate'] = '0000'\r\n        } else if (!book.volumeInfo.hasOwnProperty('imageLinks')) {\r\n            book.volumeInfo['imageLinks'] = {thumbnail: 'https://img3.akspic.ru/originals/2/8/8/7/4/147882-poni-rozovyj-liniya-kartinka-televideniye-750x1334.jpg'}\r\n        }\r\n        console.log(1)\r\n\r\n        console.log(book.volumeInfo.imageLinks.thumbnail)\r\n        return book;\r\n    })\r\n    return cleanedData\r\n}\r\n\r\nexport const getBooksThunkCreater = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await booksAPI.getBooks()\r\n        let cleanBooks = ccleaner(data)\r\n        dispatch(actions.addBooks(cleanBooks))\r\n    }\r\n}\r\n\r\nexport const searchBookThunkCreater = (searchField: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await booksAPI.getBooks(searchField)\r\n        let cleanBooks = ccleaner(data)\r\n        dispatch(actions.addBooks(cleanBooks))\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addBooks: (data: Array<any>) => ({\r\n        type: ADD_BOOKS,\r\n        data,\r\n    } as const),\r\n    handleSearchAC: (text: string) => ({\r\n        type: NEW_SEARCH,\r\n        text\r\n    } as const),\r\n    handleSort: (text: string) => ({\r\n        type: NEW_SORT,\r\n        text\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default booksReducer;","import {applyMiddleware, combineReducers, createStore, compose, Action} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport musicReducer from \"./musicReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport sideBarReducer from \"./sideBarReducer\";\r\nimport newsReducer from \"./newsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport appReducer from \"./appReducer\";\r\nimport chatReducer from \"./chatReducer\";\r\nimport filmReducer from \"./filmReducer\";\r\nimport mainTestReducer from \"./mainTest\";\r\nimport booksReducer from './books'\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    dialogs: dialogReducer,\r\n    musics: musicReducer,\r\n    friends: friendsReducer,\r\n    news: newsReducer,\r\n    sideBar: sideBarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    chat: chatReducer,\r\n    film: filmReducer,\r\n    book: booksReducer,\r\n\r\n\r\n    maintest: mainTestReducer\r\n})\r\n\r\ntype RootReducersType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\nexport type BaseThunkType <A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store\r\n\r\n","import React from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"./Login.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginThunk} from \"../../redux/authReducer\";\r\n\r\ntype MyFormValues = {\r\n    email: string\r\n    password: string\r\n    checkbox: boolean\r\n    captcha: string | null\r\n}\r\nconst initialValues: MyFormValues = {\r\n    email: '',\r\n    password: '',\r\n    checkbox: false,\r\n    captcha: ''\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    password: Yup.string().required('Required!'),\r\n    email: Yup.string()\r\n        .email('Invalid email format')\r\n        .required('Required'),\r\n\r\n})\r\ntype PropsType = {\r\n    captchaUrl: string | null\r\n    isError: boolean\r\n}\r\nexport const LoginFormAuth: React.FC<PropsType>  = (props)=> {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (values: {email: string,password: string, checkbox: boolean, captcha: string | null }) =>{\r\n        dispatch(loginThunk(values.email, values.password, values.checkbox, values.captcha))\r\n    }\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Form>\r\n                <div>\r\n                    <Field placeholder={'login'} type='text' id='email' name='email' className={classes.field}/>\r\n                    <ErrorMessage name='email' />\r\n                </div>\r\n                <div>\r\n                    <Field placeholder={'password'} type='text' id='password' name='password' className={classes.field}/>\r\n                    <ErrorMessage name='password'/>\r\n                </div>\r\n                <div>{props.isError ? <span className={classes.error}> Wrong Email or Password or Captcha </span> : null} </div>\r\n                <div>\r\n                    <Field type={'checkbox'} name='checkbox' className={classes.field}/>\r\n                </div>\r\n                {props.captchaUrl && <img src={props.captchaUrl} alt={'captcha'}/>}\r\n                {props.captchaUrl && <Field placeholder={'captcha'} type='text' name='captcha' className={classes.field}/>}\r\n\r\n                <button type='submit' className={classes.button}> Submit </button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport classes from './Login.module.css'\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {LoginFormAuth} from \"./LoginFormAuth\";\n\n\n\n\n\n\n\nexport const Login: React.FC= (props) => {\n    const captchaUrl = useSelector((state: AppStateType )=> state.auth.captchaUrl)\n    const isError = useSelector((state: AppStateType )=> state.auth.isError)\n    const isAuth = useSelector((state: AppStateType )=> state.auth.isAuth)\n\n\n\n    if(isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n    return <div className={classes.All}>\n        <h3> Login </h3>\n        <LoginFormAuth isError={isError} captchaUrl={captchaUrl} />\n    </div>\n}\n\n\n\n","import React, {useEffect} from 'react';\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {logOutThunk} from \"../../redux/authReducer\";\r\nimport {Button} from \"antd\";\r\nimport {getOwnerAva} from \"../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\nexport const HeaderComponent: React.FC = (props) => {\r\n\r\n  const isAuth = useSelector((state: AppStateType)=> state.auth.isAuth)\r\n  const login = useSelector((state: AppStateType)=> state.auth.login)\r\n const avatar = useSelector((state: AppStateType) => state.profile.photo)\r\n    const profile = useSelector((state: AppStateType) => state.profile.profile)\r\n  const dispatch = useDispatch()\r\n\r\n    useEffect( () => {\r\n        dispatch(getOwnerAva(18579))\r\n    }, [profile])\r\n\r\n  return <header className={classes.header} >\r\n\r\n\r\n      <span className={classes.loginBlock}>\r\n       {isAuth? <span>\r\n           <NavLink to=\"/profile\" className={classes.signIn}>{login}</NavLink>\r\n       <Button className={classes.button1} onClick={() => dispatch(logOutThunk())}> logIot</Button>\r\n\r\n          <img alt={'ava'} src={avatar===null ? 'null' : avatar} className={classes.userAvatar}/> </span> : <NavLink className={classes.signIn} to={'/login'}>Sign in</NavLink>}\r\n\r\n   </span>\r\n  </header>\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport classes from './ChatPage.module.css'\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessageThunk, startMessagesThunk, stopMessagesThunk} from \"../../redux/chatReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {ChatMessageAPIType} from \"../../api/chat-api\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const ChatPage: React.FC =() => {\r\n\r\n    return <div>\r\n    <Chat />\r\n    </div>\r\n\r\n\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n      const dispatch =  useDispatch()\r\n\r\n\r\n        const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    useEffect( () => {\r\n        dispatch(startMessagesThunk())\r\n        return () => {\r\n            dispatch(stopMessagesThunk())\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return <div>\r\n        {status === 'error' && <div> ERROR. PLS REFRESH PAGE</div> }\r\n           <>\r\n               <Messages/>\r\n               <AddMassageForm  />\r\n           </>\r\n\r\n    </div>\r\n}\r\n\r\nconst Messages: React.FC= () => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [autoScrollIsActive, SetAutoScrollIsActive] = useState(false)\r\n\r\n    const scrollHandled = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n            const element = e.currentTarget\r\n        if( Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300)\r\n        {\r\n           !autoScrollIsActive && SetAutoScrollIsActive(true)\r\n        } else {\r\n            autoScrollIsActive && SetAutoScrollIsActive(false)\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(autoScrollIsActive) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n    }, [messages])\r\n\r\n\r\n    return <div className={classes.messages} onScroll={scrollHandled}>\r\n        {messages.map((u, index) => <Message key={u.id} message={u} />)}\r\n        <div ref={messagesAnchorRef}> </div>\r\n    </div>\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n\r\n    return <div>\r\n        <img className={classes.ava} src={message.photo===null ? 'https://sun1-15.userapi.com/s/v1/if1/a8Ep8gIxK5zIt7COi4LUocGkvkP54fNVSUy930nxS75fGdWGjq5XwuFHwV65qOC_F2WD7Xna.jpg?size=200x200&quality=96&crop=0,0,1024,1024&ava=1'\r\n        : message.photo } alt={'ava'}/>  <b> {message.userName} </b>\r\n        <br />\r\n        <b> {message.message}</b>\r\n        <hr />\r\n    </div>\r\n})\r\n\r\nconst AddMassageForm: React.FC= () => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    const onKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>): void => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const sendMessage = () =>{\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessageThunk(message))\r\n        setMessage('')\r\n    }\r\n\r\n     return <div>\r\n         <div>\r\n             <textarea onKeyDown={onKeyDown} onChange={(e) => setMessage(e.target.value)} value={message}/>\r\n         </div>\r\n         <div>\r\n             <button disabled={status !== 'ready'} onClick={sendMessage} > send </button>\r\n         </div>\r\n     </div>\r\n}","import React from \"react\";\r\nimport classes from '../Weather.module.css'\r\n\r\n\r\nexport function Loading () {\r\n    return (<div >\r\n        <span className={classes.loading}>Loading...</span>\r\n    </div>)\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport classes from '../Weather.module.css'\r\n\r\n\r\ntype weatherOptionsType = {\r\n    iconName: string\r\n    title: string,\r\n    subTitle: string\r\n    gradient?: [string, string, string?]\r\n}\r\n\r\n\r\nexport const weatherOptions = {\r\n    Rain: {\r\n        iconName: '☔',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'На улице дождь',\r\n        subTitle: 'Не забудьте зонтик'\r\n    } as weatherOptionsType,\r\n    Snow: {\r\n        iconName: '❄',\r\n        // iconName: 'snowflake',\r\n        gradient: ['#83a4d4', '#b6fbff'],\r\n        title: 'Идет снег',\r\n        subTitle: 'Оденься потеплее'\r\n    } as weatherOptionsType,\r\n    Drizzle: {\r\n        iconName: '🌧',\r\n        // iconName: 'weather-rainy',\r\n        gradient: ['#3A7BD5', '#3A6073'],\r\n        title: 'Моросит слегка',\r\n        subTitle: 'Не заболей'\r\n    } as weatherOptionsType,\r\n    Thunderstorm: {\r\n        iconName: '🌩',\r\n        // iconName: 'weather-lightning',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Сейчас гроза',\r\n        subTitle: 'На улицу не ходи'\r\n    } as weatherOptionsType,\r\n    Dust: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-windy-variant',\r\n        gradient: ['#B79891', '#947168'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Mist: {\r\n        iconName: '💨',\r\n        //  conName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Очень туманно',\r\n        subTitle: 'Прям как в Англии'\r\n    } as weatherOptionsType,\r\n    Smoke: {\r\n        iconName: '💨',\r\n        // iconName: 'weather-windy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Почти туман',\r\n        subTitle: 'Но не туман'\r\n    } as weatherOptionsType,\r\n    Haze: {\r\n        iconName: '💨',\r\n        //iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Почти туман',\r\n        subTitle: 'Но не туман'\r\n    } as weatherOptionsType,\r\n    Sand: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-hazy',\r\n        gradient: ['#3E5151', '#DECBA4'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Ash: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Squall: {\r\n        iconName: '💨',\r\n        //   iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'На улице шквал',\r\n        subTitle: 'Не ходи'\r\n    } as weatherOptionsType,\r\n    Tornado: {\r\n        iconName: '🌪',\r\n        //   iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Бушует торнадо',\r\n        subTitle: 'Сиди дома'\r\n    } as weatherOptionsType,\r\n    Clear: {\r\n        iconName: '🌈',\r\n        //    iconName: 'weather-sunny',\r\n        gradient: ['#56CCF2', '#2F80ED'],\r\n        title: 'Погода супер',\r\n        subTitle: 'Сходи, погоняй мяч'\r\n    } as weatherOptionsType,\r\n    Clouds: {\r\n        iconName: '⛅',\r\n        //    iconName: 'weather-cloudy',\r\n        gradient: ['#757F9A', '#D7DDE8'],\r\n        title: 'Облачно',\r\n        subTitle: 'Гулять можно'\r\n    } as weatherOptionsType,\r\n\r\n}\r\n\r\ntype WeatherType = {\r\n    temp: number,\r\n    condition: keyof typeof weatherOptions;\r\n}\r\n\r\nexport const Weather: React.FC<WeatherType> = ({temp, condition}) => {\r\n\r\n    return (<div className={classes.halfContainer} style={{ backgroundImage: `linear-gradient(to right, ${weatherOptions[condition].gradient})`, }}>\r\n            <div className={classes.temp}>  {weatherOptions[condition].iconName}</div>\r\n            <div className={classes.temp}> {temp}° </div>\r\n            <div className={classes.title}> {weatherOptions[condition].title} </div>\r\n            <div className={classes.subTitle}> {weatherOptions[condition].subTitle} </div>\r\n            <div className={classes.close}> спрятать </div>\r\n        </div>\r\n  )\r\n}\r\n\r\n // Weather.propTypes = {\r\n //    temp: PropTypes.number.isRequired,\r\n //    condition: PropTypes.oneOf(['Thunderstorm', 'Drizzle', 'Rain',\r\n //         'Snow', 'Dust', 'Mist','Smoke',\r\n //         'Haze', 'Fog', 'Sand',\r\n //         'Ash', 'Squall', 'Tornado',\r\n //         'Clear', 'Clouds']).isRequired }\r\n\r\n","\r\nimport axios from \"axios\";\r\nconst API_KEY = '979ab0a1c46cbdc9cb27c613e41479b4'\r\n\r\nexport const weatherAPI = {\r\n    getWeather(latitude: number, longitude: number ) {\r\n        return axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`)\r\n    },\r\n\r\n}","import React, {useEffect, useState} from 'react';\nimport {Loading} from \"./Loading/Loading\";\nimport {Weather, weatherOptions} from \"./Weather/Weather\";\nimport {weatherAPI} from \"../../api/weather-api\";\n\n\n\n\nexport const WeatherContainer : React.FC =()=>{\n\n\n    let [isLoading, setIsLoading] = useState(true)\n    let [temp, setTemp] = useState(1)\n    let [condition, setCondition] = useState('' as  keyof typeof weatherOptions)\n\n    let gerPosition = async (pos: any) => {\n        let crd = pos.coords;\n     await getWeather(crd.latitude, crd.longitude)\n    }\n\n\n let getWeather = async (latitude: number, longitude: number) => {\n\n      const {data: {main: {temp}, weather}} = await weatherAPI.getWeather(latitude, longitude)\n      setTemp(temp)\n     setCondition( weather[0].main as  keyof typeof weatherOptions)\n     setIsLoading(false)\n  }\n\n\n   const getLocation = async () => {\n\n        try{\n            await navigator.geolocation.getCurrentPosition(gerPosition);\n        } catch (error) {\n           alert(\"can't detect location\")\n        }\n    }\n\n useEffect( () => {\n    getLocation()\n }, [])\n\n\n    return (\n    isLoading ? <Loading/> : <Weather temp={Math.round(temp)} condition={condition} />\n    )\n}\n\n","import React from 'react';\r\nimport classes from \"./Films.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/filmReducer\";\r\n\r\n\r\n\r\n\r\n\r\ntype propsType ={\r\n    key: number,\r\n    name: string,\r\n    large_cover_image: string,\r\n    description: string,\r\n    genres: Array<string>,\r\n    rating: number,\r\n    id: number,\r\n    like: boolean | undefined\r\n}\r\n\r\nconst EachFilm: React.FC<propsType> = (props) => {\r\n\r\n    let d = null\r\n\r\n    if(props.genres !== undefined){\r\n        d = props.genres.map(p=> <div>\r\n            •{p}\r\n        </div>)\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const deletePost = (id: number) =>{\r\n        dispatch(actions.deleteFilm(id))\r\n\r\n    }\r\n    const likeFilm = (id: number) =>{\r\n        dispatch(actions.likeFilm(id))\r\n    }\r\n    const  dislikeFilm = (id: number) =>{\r\n        dispatch(actions.dislikeFilm(id))\r\n    }\r\n\r\n    return <div className={classes.eachFilm} >\r\n          <div>\r\n              <img alt={'sorry image not found'} src={props.large_cover_image} className={classes.png}/>\r\n          </div>\r\n       <div>\r\n\r\n                 <h2> {props.name} {props.like && <span> 🧡 </span>} <span className={classes.rating}> {props.rating} / 10 </span>  </h2>\r\n\r\n\r\n           <h4> {props.description}</h4>\r\n           <h3 className={classes.des}> {d}</h3>\r\n           { !props.like && <button onClick={()=> likeFilm(props.id)} className={classes.like}> like </button> }\r\n           { props.like && <button onClick={()=> dislikeFilm(props.id)} className={classes.dislike}> dislike </button> }\r\n           <button onClick={()=> deletePost(props.id)} className={classes.delete}> delete </button>\r\n       </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default EachFilm;","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FilmType, getFilmsThunkCreater} from \"../../redux/filmReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport EachFilm from \"./eachFilm\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport classes from \"./Films.module.css\";\r\n\r\n\r\nexport const Films: React.FC = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getFilmsThunkCreater(pageNumber))\r\n    }\r\n\r\n    //TODO\r\n    const {currentPage, films} = useSelector((state: AppStateType) => state.film)\r\n\r\n\r\n\r\n    let filmsElements = films.map((el: FilmType) => <EachFilm rating={el.rating} genres={el.genres}\r\n                                                              description={el.description_full}\r\n                                                              large_cover_image={el.large_cover_image}\r\n                                                              key={el.id} id={el.id} name={el.title} like={el.like}/>)\r\n\r\n\r\n\r\n\r\n    return (<div>\r\n            <div className={classes.paginator}>\r\n                <Paginator currentPage={currentPage}\r\n                           totalItemsCount={2131}\r\n                           pageSize={20}\r\n                           onPageChanged={onPageChanged}\r\n                           portionSize={10}/>\r\n            </div>\r\n            <div>\r\n                {filmsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {getFilmsThunkCreater} from \"../../redux/filmReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {Loading} from \"../Weather/Loading/Loading\";\nimport {Films} from \"./Films\";\n\n\n\n\nexport const FilmsContainer : React.FC =() => {\n\nconst dispatch = useDispatch()\n\n  useEffect( () => {\n      dispatch(getFilmsThunkCreater(1))\n }, [])\n\n    const isLoading = useSelector((state: AppStateType) => state.film.isLoading)\n\n\n    return (\n    <div>\n        {isLoading ? <Loading/> : <Films/>}\n    </div>\n    )\n}\n\n","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"../TestRoute/mainAndProfilePages.module.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {actions} from \"../../redux/mainTest\";\r\n\r\n\r\nexport const MainPage: React.FC = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        newLogintext,\r\n        newPasswordtext,\r\n        isDisabled,\r\n        needRedirect\r\n    } = useSelector((state: AppStateType) => state.maintest)\r\n\r\n\r\n    let loginOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(actions.loginOnChangeActionCreator(e.currentTarget.value))\r\n        disabledChanger(e.currentTarget.value, newPasswordtext)\r\n    }\r\n    let passwordOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(actions.passwordOnChangeActionCreator(e.currentTarget.value))\r\n        disabledChanger(newLogintext, e.currentTarget.value)\r\n    }\r\n    let disabledChanger = (login: string, pass: string) => {\r\n        if (login === 'developer21' && pass === '123456') {\r\n            dispatch(actions.isDisabledAC())\r\n        }\r\n    }\r\n\r\n\r\n    const login = () => {\r\n        dispatch(actions.needRedirectAC())\r\n    }\r\n\r\n    return <div>\r\n        {needRedirect && <Redirect to='/profiletest'/>}\r\n        <div className={classes.input}>\r\n            <input value={newLogintext}\r\n                   onChange={loginOnChange}/>\r\n        </div>\r\n        <div className={classes.input}>\r\n            <input value={newPasswordtext}\r\n                   onChange={passwordOnChange}/>\r\n        </div>\r\n        <button disabled={isDisabled} onClick={login} className={classes.button}> Log in</button>\r\n\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport classes from \"../TestRoute/mainAndProfilePages.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\nexport const ProfilePage: React.FC= (props) => {\r\n\r\n    const login = useSelector((state: AppStateType) => state.maintest.newLogintext)\r\n\r\n\r\n    return <div className={classes.All}>\r\n\r\n        <h1> {login} </h1>\r\n\r\n    </div>\r\n}","import React from \"react\";\r\nimport classes from '../Books/books.module.css'\r\n\r\nconst Search = (props) => {\r\n    return (<form action='' onSubmit={props.searchBook} className={classes.form} >\r\n        <input type='text' onChange={props.handleSearch}/>\r\n        <button type='submit'>\r\n            Search\r\n        </button>\r\n        <select defaultValue='Sort' onChange={props.handleSort}>\r\n            <option disabled value=\"Sort\">Sort</option>\r\n            <option value=\"Newest\"> Newest</option>\r\n            <option value=\"Oldest\"> Oldest </option>\r\n        </select>\r\n    </form>)\r\n}\r\n\r\nexport default Search","import React from \"react\";\r\nimport classes from '../Books/books.module.css'\r\n\r\n\r\nconst BookCard = (props) => {\r\n    return (<div className={classes.full}>\r\n        <img src={props.image} alt='a' className={classes.ava}/>\r\n        <div>\r\n            <h2  className={classes.info}>\r\n                {props.title}\r\n            </h2>\r\n            <h3  className={classes.info}>\r\n              Author:  {props.author}\r\n            </h3>\r\n            <p  className={classes.info}>\r\n              Published data:  {props.published === '0000' ? 'Not available' : props.published.substring(0, 4)}\r\n            </p>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default BookCard","import React from \"react\";\r\nimport BookCard from \"./BookCard\";\r\nimport classes from \"./books.module.css\";\r\n\r\nconst BookList = (props) => {\r\n\r\n    return (<div>\r\n        {\r\n            props.books.map( (book, i) => {\r\n                return <span className={classes.fullAll}>\r\n                    <BookCard\r\n                        key={i}\r\n                        image={book.volumeInfo.imageLinks.thumbnail}\r\n                        title={book.volumeInfo.title}\r\n                        author={book.volumeInfo.publisher}\r\n                        published={book.volumeInfo.publishedDate}\r\n                    />\r\n                </span>\r\n            })\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default BookList","import React, {useEffect} from \"react\";\r\nimport Search from \"./Search\";\r\nimport BookList from \"./BookList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actions, getBooksThunkCreater, searchBookThunkCreater} from \"../../redux/books\";\r\n\r\n\r\n\r\n\r\n const Books = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {books, searchField, sort} = useSelector((state) => state.book)\r\n\r\n    useEffect( () => {\r\n        dispatch(getBooksThunkCreater())\r\n    }, [])\r\n\r\n\r\n\r\n    const searchBook = async (e) => {\r\n        e.preventDefault()\r\n        dispatch(searchBookThunkCreater(searchField))\r\n\r\n\r\n    }\r\n    const handleSearch = (e) => {\r\n        dispatch(actions.handleSearchAC(e.target.value))\r\n\r\n    }\r\n    const handleSort = (e) => {\r\n        dispatch(actions.handleSort(e.target.value))\r\n\r\n    }\r\n\r\n\r\n\r\n    const sortedBooks = books.sort((a, b) => {\r\n        if (sort === 'Newest') {\r\n            return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4))\r\n        } else if (sort === 'Oldest') {\r\n            return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Search searchBook={searchBook} handleSearch={handleSearch} handleSort={handleSort}/>\r\n            <BookList books={sortedBooks}/>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Books\r\n\r\n","import React, {lazy, Suspense} from 'react';\nimport './App.module.css';\nimport 'antd/dist/antd.css';\nimport {HashRouter, Link, Route, Switch, withRouter} from 'react-router-dom'\nimport Friends from \"./components/Friends/Friends\";\nimport GenaProfile from \"./components/ProfileGena/GenaProfile\";\nimport NikitaProfile from \"./components/NikitaProfile\";\nimport DiallogsContainer from \"./components/Diallogs/DiallogsContainer\";\nimport NewsContainer from \"./components/News/NewsContainer\";\nimport classes from './App.module.css'\nimport  {UsersPage} from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialiseApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloder/Preloader\";\n\nimport store, {AppStateType} from \"./redux/reduxStore\";\nimport {Login} from \"./components/Login/Login\";\n\n\nimport {Layout, Menu} from 'antd';\nimport { SoundOutlined, UserOutlined, VideoCameraOutlined, CloudOutlined, MessageOutlined, WechatOutlined, SearchOutlined} from '@ant-design/icons';\n\nimport {HeaderComponent} from \"./components/Header/Header\";\nimport {ChatPage} from \"./pages/Chat/ChatPage\";\nimport {WeatherContainer} from \"./components/Weather/WeatherContainer\";\nimport {FilmsContainer} from \"./components/Films/FilmsContainer\";\nimport {MainPage} from \"./components/TestRoute/mainPage\";\nimport {ProfilePage} from \"./components/TestRoute/ProfilePage\";\nimport Books from \"./components/Books/Books\";\n\n\n\nconst { Header, Content, Footer, Sider } = Layout;\n\n\n\n\n// import MusicContainer from \"./components/Music/MusicContainer\";\nconst MusicContainer = lazy(() => import('./components/Music/MusicContainer'));\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    initialiseApp: ()=> void\n}\n\ntype PropsType = MapPropsType & DispatchPropsType\n\nclass App extends React.Component<PropsType> {\n\n    state = {\n        needWeather: true\n    }\n\n    componentDidMount() {\n        this.props.initialiseApp()\n        window.onerror = function myErrorHandler(errorMsg) {\n            alert(\"Error occured: \" + errorMsg);//or any message\n            return false;\n        }\n    }\n\n\n\n    render() {\n        if(!this.props.initialized){\n            return <Preloader />\n        }\n\n\n        return (\n            <Layout>\n                <Sider\n                    className=\"menuShadow\"\n                    breakpoint=\"lg\"\n                    collapsedWidth=\"0\"\n                    onBreakpoint={broken => {\n                        console.log(broken);\n                    }}\n                    onCollapse={(collapsed, type) => {\n                        console.log(collapsed, type);\n                    }}\n                >\n\n\n                    <div className={classes.logo}>\n                        <img className={classes.logo1} src=\"https://avatanplus.com/files/resources/original/5bf6f0c0b38e91673c9c70df.png\" alt={'logo'}/>\n                    </div>\n\n\n                    <Menu   theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n\n                        <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                            <Link to = \"/profile\">My page</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                            <Link  to = '/news' >News</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<WechatOutlined />}>\n                            <Link to = '/chat' >Chat</Link>\n\n                        </Menu.Item>\n                        <Menu.Item key=\"4\" icon={<UserOutlined />}>\n                            <Link to = '/friends' > Friends</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"5\" icon={<SearchOutlined />}>\n                            <Link to = '/users' > Пользователи</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"6\" icon={<SoundOutlined />}>\n                            <Link to = '/music' >Music</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"7\" icon={<MessageOutlined />}>\n                            <Link to = '/diallogs'>Messages</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"8\" icon={<MessageOutlined />}>\n                            <Link to = '/films'>Films</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"9\" icon={<MessageOutlined />}>\n                            <Link to = '/books'>Books</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"10\" icon={<MessageOutlined />}>\n                            <Link to = '/maintest'>Main</Link>\n                        </Menu.Item>\n\n                        {this.state.needWeather && <div className={classes.weather} onClick={() => {\n                            this.setState({needWeather: false})\n                            console.log(this.state.needWeather)\n                        }}>\n                            <WeatherContainer/>\n                        </div>}\n                        {!this.state.needWeather &&  <Menu.Item key=\"9\" icon={<CloudOutlined />} onClick={() => {\n                            this.setState({needWeather: true})\n                            console.log(this.state.needWeather)\n                        }}>\n                           Weather\n                        </Menu.Item>}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header className=\"site-layout-sub-header-background\" style={{padding: 0, height: 68}}>\n                        <HeaderComponent/>\n                    </Header>\n                    <Content style={{margin: '15px 16px 0'}}>\n                        <div className=\"site-layout-background\" style={{padding: 20, minHeight: 360}}>\n                            <Switch>\n                                <Route path='/chat'\n                                       render={() => <ChatPage />}/>\n\n\n                                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n\n                                <Route path='/news' render={() => <NewsContainer/>}/>\n                                <Route path='/music'\n                                       render={() => {\n                                           return <Suspense fallback={<div>loading...</div>}>\n                                               <MusicContainer/>\n                                           </Suspense>\n                                       }}/>\n                                <Route path='/friends'\n                                       render={() => <Friends/>}/>\n                                <Route path='/users'\n                                       render={() => <UsersPage/>}/>\n                                <Route path='/login'\n                                       render={() => <Login/>}/>\n                                <Route path='/diallogs' render={() => <DiallogsContainer/>}/>\n                                <Route path='/weather' render={() => <WeatherContainer />}/>\n\n                                <Route path='/films' render={() => <FilmsContainer />}/>\n                                <Route path='/books' render={() => <Books />}/>\n\n\n                                <Route path='/maintest' render={() => <MainPage />}/>\n                                <Route path='/profiletest' render={() => <ProfilePage />}/>\n\n\n                                <Route path='/https://vk.com/dank_af' render={() => <GenaProfile/>}/>\n                                <Route path='/https://vk.com/id153839551' render={() => <NikitaProfile/>}/>\n\n                            </Switch>\n                        </div>\n                    </Content>\n                    <Footer style={{textAlign: 'center'}}>Social-network 2.0 ©2021 Created by Ruslan SSS Ghoul</Footer>\n                </Layout>\n            </Layout>\n\n            //     <NavBarContainer/>\n\n\n        );\n    }\n}\n\nconst mapStateToProps=(state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initialiseApp}\n    ))(App)\n\n\n\nconst AppAllTree: React.FC = () => {\n    return <HashRouter>\n            <Provider store={store}>\n                <AppContainer  />\n            </Provider>\n        </HashRouter>\n\n}\n\nexport default AppAllTree","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom'\nimport AppAllTree from \"./App\";\n\n\n\n\n\nReactDOM.render(<AppAllTree/>, document.getElementById('root'))\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"MyPosts_CreateNewPost__TUHrA\",\"button\":\"MyPosts_button__38MYr\",\"text\":\"MyPosts_text__1mrPN\",\"MyPostsAll\":\"MyPosts_MyPostsAll__3ob6t\",\"posts\":\"MyPosts_posts__2dvRz\",\"error\":\"MyPosts_error__1XihJ\",\"fieldPosts\":\"MyPosts_fieldPosts__3LCzN\",\"textarea\":\"MyPosts_textarea__36VcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__37DVA\",\"userInfo\":\"users_userInfo__1i9af\",\"city\":\"users_city__34Qg4\",\"country\":\"users_country__2YG7o\",\"fullname\":\"users_fullname__t6TvB\",\"status\":\"users_status__P4F29\",\"userInfoShort\":\"users_userInfoShort__Sol0P\",\"buttons\":\"users_buttons__3qoMB\",\"newUsers\":\"users_newUsers__bROM6\",\"selectedPage\":\"users_selectedPage__3TJ-2\",\"page\":\"users_page__1f0Li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full\":\"books_full__RtvKm\",\"form\":\"books_form__wn8Gz\",\"ava\":\"books_ava__1A8h7\",\"info\":\"books_info__1UOba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"png\":\"Films_png__11jWf\",\"eachFilm\":\"Films_eachFilm__113uX\",\"rating\":\"Films_rating__WjQA5\",\"des\":\"Films_des__1lZjY\",\"dislike\":\"Films_dislike__1LWD4\",\"like\":\"Films_like__3xWBl\",\"delete\":\"Films_delete__1DrAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__1sda0\",\"All\":\"Login_All__SfU0o\",\"field\":\"Login_field__3tZDj\",\"button\":\"Login_button__39Ufa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"temp\":\"Weather_temp__1OxvB\",\"halfContainer\":\"Weather_halfContainer__2W9HU\",\"title\":\"Weather_title__2rgUJ\",\"subTitle\":\"Weather_subTitle__1YDsk\",\"text1\":\"Weather_text1__k3RCW\",\"loading\":\"Weather_loading__RSnC8\",\"close\":\"Weather_close__VJK1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsName\":\"EachNew_newsName__tK9XI\",\"mes\":\"EachNew_mes__1MNfW\",\"ava\":\"EachNew_ava__2_wNX\",\"news\":\"EachNew_news__2410I\",\"picture\":\"EachNew_picture__3xUU_\",\"user\":\"EachNew_user__10HWz\",\"time\":\"EachNew_time__1j6ak\",\"content\":\"EachNew_content__1DBBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1c5fN\",\"nick\":\"Post_nick__2myDA\",\"mes\":\"Post_mes__3HpwP\",\"newsName\":\"Post_newsName__3riSQ\",\"ava\":\"Post_ava__18Tyu\",\"news\":\"Post_news__GR46K\",\"picture\":\"Post_picture__MVs_7\",\"user\":\"Post_user__3UmBl\",\"time\":\"Post_time__3E8hG\",\"content\":\"Post_content__1sHR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Diallogs_dialogs__1c_Mg\",\"dialogsitem\":\"Diallogs_dialogsitem__3dp5x\",\"massages1\":\"Diallogs_massages1__84Vqo\",\"but\":\"Diallogs_but__2QEX_\",\"text\":\"Diallogs_text__30Bvb\",\"seacrh\":\"Diallogs_seacrh__23rDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__BeMIC\",\"button1\":\"Header_button1__L0Utc\",\"logo\":\"Header_logo__bnw5J\",\"track\":\"Header_track__2AQ2F\",\"signIn\":\"Header_signIn__1J82i\",\"loginBlock\":\"Header_loginBlock__2No9o\",\"userAvatar\":\"Header_userAvatar__3eU9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"mainAndProfilePages_input__36e-S\",\"button\":\"mainAndProfilePages_button__30zcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"All_all__2BRQe\",\"but\":\"All_but__1YGhY\",\"textare\":\"All_textare__3Qmi7\",\"seacrh\":\"All_seacrh__3TRLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper\":\"App_app-wrapper__jQOAl\",\"app-wrapper-content\":\"App_app-wrapper-content__3c75d\",\"menuShadow\":\"App_menuShadow__1mgvs\",\"logo1\":\"App_logo1__33DUV\",\"weather\":\"App_weather__1t-q7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"GenaPosts_CreateNewPost__389UC\",\"button\":\"GenaPosts_button__JV3Av\",\"text\":\"GenaPosts_text__1Kq_C\",\"MyPostsAll\":\"GenaPosts_MyPostsAll__1mnbb\",\"posts\":\"GenaPosts_posts__V2lPh\"};"],"sourceRoot":""}