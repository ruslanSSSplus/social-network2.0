{"version":3,"sources":["pages/ProfileGena/GenaProfileInfo/GenaProfileInfo.module.css","pages/Diallogs/Eachdialog/Eachdialog.module.css","pages/Chat/ChatPage.module.css","pages/Friends/All/Friend/Friend.module.css","pages/Diallogs/Eachmessage/Eachmessage.module.css","redux/musicReducer.ts","pages/Friends/Friends.module.css","pages/News/News.module.css","pages/Profile/Profile.module.css","pages/Profile/ProfileInfo/ProfileInfo.module.css","api/api.ts","reportWebVitals.js","api/user-api.ts","redux/friendsReducer.ts","pages/Friends/All/Friend/Friend.tsx","pages/Friends/All/All.tsx","pages/Friends/All/AllContainerHook.tsx","pages/Friends/Friends.tsx","pages/ProfileGena/GenaPosts/GenaPosts.jsx","pages/ProfileGena/GenaProfileInfo/GenaProfileInfo.jsx","pages/ProfileGena/GenaProfile.jsx","components/NikitaProfile.jsx","redux/dialogReducer.ts","pages/Diallogs/Eachmessage/Eachmessage.tsx","pages/Diallogs/Eachdialog/Eachdialog.tsx","pages/Diallogs/Diallogs.tsx","hoc/withAuthRedirect.tsx","pages/Diallogs/DiallogsContainer.tsx","components/AddPostForm/AddPostForm.tsx","pages/News/News.tsx","redux/newsReducer.ts","api/profile-api.ts","api/gif-api.ts","redux/profileReducer.ts","pages/News/EachNew/EachNew.tsx","pages/News/NewsContainer.tsx","assets/images/04de2e31234507.564a1d23645bf.gif","components/common/Preloder/Preloader.tsx","redux/friendsSelectors.ts","assets/images/DZIAss-5O_I.jpg","pages/Users/EachUser.tsx","components/Paginator/Paginator.tsx","pages/Users/UsersSearchForm.tsx","pages/Users/Users.tsx","pages/Users/UsersContainer.tsx","pages/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","pages/Profile/ProfileInfo/ProfileDataForm.tsx","pages/Profile/ProfileInfo/ProfileInfo.tsx","pages/Profile/MyPosts/Post/Post.tsx","pages/Profile/MyPosts/MyPosts.tsx","pages/Profile/MyPosts/MyPostsContainer.tsx","pages/Profile/Profile.tsx","pages/Profile/ProfileContainer.tsx","api/auth-api.ts","api/security-api.ts","redux/authReducer.ts","redux/appReducer.ts","redux/sideBarReducer.ts","api/chat-api.ts","redux/chatReducer.ts","api/film-api.ts","redux/filmReducer.ts","redux/mainTest.ts","api/books-api.ts","redux/books.ts","api/anime-api.ts","redux/animeReducer.ts","redux/reduxStore.ts","pages/Login/LoginFormAuth.tsx","pages/Login/Login.tsx","components/Header/Header.tsx","pages/Chat/ChatPage.tsx","pages/Weather/Loading/Loading.tsx","pages/Weather/Weather/Weather.tsx","api/weather-api.ts","pages/Weather/WeatherContainer.tsx","pages/Films/eachFilm.tsx","pages/Films/Films.tsx","pages/Films/FilmsContainer.tsx","pages/TestRoute/mainPage.tsx","pages/TestRoute/ProfilePage.tsx","pages/Books/Search.jsx","pages/Books/BookCard.jsx","pages/Books/BookList.jsx","pages/Books/Books.jsx","pages/Anime/eachAnime.tsx","pages/Anime/SearchAnime.tsx","pages/Anime/Anime.tsx","pages/Anime/AnimeContainer.tsx","pages/PopUpSlider/PopUpSlider.jsx","App.tsx","index.js","pages/Anime/Anime.module.css","pages/Users/users.module.css","pages/Profile/MyPosts/MyPosts.module.css","pages/Films/Films.module.css","pages/PopUpSlider/PopUpSlider.module.css","pages/Books/books.module.css","pages/Login/Login.module.css","pages/Weather/Weather.module.css","pages/News/EachNew/EachNew.module.css","pages/Profile/MyPosts/Post/Post.module.css","pages/Diallogs/Diallogs.module.css","components/Paginator/Paginator.module.css","components/Header/Header.module.css","pages/TestRoute/mainAndProfilePages.module.css","pages/Friends/All/All.module.css","App.module.css","pages/ProfileGena/GenaPosts/GenaPosts.module.css"],"names":["module","exports","ADD_SONG","UPDATE_NEW_SONG_TEXT","initialState","songs","id","nameSong","newsongtext","count","songOnChangeActionCreator","text","type","newText","addSongActionCreator","musicReducer","state","action","newSong","ResultCodeEnum","ResultCodeWithCaptchaEnum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","term","friend","get","response","data","delete","post","ADD_USER","FRIEND_CHECK","FRIEND_REMOVE","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_ITEMS_COUNT","IS_FETCHING","SET_FILTER","friendDate","link","name","avatar","surname","friendsAlready","users","totalItemsCount","isFetching","isFriend","filter","actions","friendCheckAC","removeFriendAC","idToRemove","follow","userId","unfollow","setUsers","addUserAC","avatarPhoto","isFetchingDispatch","isFetchingBOOL","setTotalItemsCount","Count","setCurrentPage","p","setFilter","payload","getUsersThunkCreater","dispatch","a","items","totalCount","unfollowThunk","resultCode","friendsReducer","stateCopy","friendDateSet","friendsCollection","Set","newFriendUser","add","Array","from","item","map","u","followed","Friend","props","className","classes","alt","src","to","onClick","dropbtn","All","friendsAll","friends","el","name1","React","createRef","ava1","all","seacrh","textare","ref","but","current","value","addfriend","compose","connect","getUsersThunk","i","photos","large","useEffect","Friends","per","GenaPosts","MyPostsAll","CreateNewPost","button","GenaProfileInfo","wallpaper","description","GenaProfile","posts","NikitaProfile","ADD_MESSAGE","messages","message","dialogs","addMessageActionCreator","dialogReducer","newMessage","Eachmessage","massages","massage","Eachdialog","path","dialog","active","activeClassName","activeLink","initialValues","AddMessageForm","onSubmit","component","Diallogs","dialogsElements","messageElements","values","dialogsitem","massages1","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","AddPostFormik","validationSchema","Yup","new","required","max","pic","addPostActionCreator","fieldPosts","error","textarea","placeholder","News","newsElements","content","AddPostForm","time","user","picture","newsReducer","profileAPI","status","put","photoFile","formData","FormData","append","res","profile","gifApi","images","original","url","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","SET_ERROR","SET_OWNER_PHOTO","SET_NEW_GIF","SET_ALL_GIFS","countPosts","isError","photo","gif","newsImport","deletePost","setUsersProfile","savePhotoSuccess","setErrorProfile","Error","setStatus","setOwnerAvatar","setNewGif","setAllGifts","newGifs","getProfileThunk","newGifts","newGif","profileReducer","newPost","unshift","EachNew","news","newsName","ava","mes","Preloader","preLoader","getUsers","getAPageSize","getTotalCount","getCurrentPage","getisFetching","getUsersFilter","EachUser","newUsers","userInfo","small","photoAva","userPhoto","userInfoShort","fullname","country","city","buttons","followThunk","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","back","cn","selectedPage","pageNumber","next","last","usersSearchValidation","UsersSearchForm","memo","useSelector","enableReinitialize","String","validate","setSubmitting","onFilterChanged","isSubmitting","as","disabled","Users","useDispatch","history","useHistory","parsed","queryString","location","search","substr","actualPage","actualFilter","page","Number","query","pathname","unfollowThunk1","followThunk1","UsersPage","ProfileStatusWithHooks","editMode1","setEditMode1","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatusThunk","autoFocus","ProfileDataForm","info","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","editButton","fullName","aboutMe","contactTitle","ContactValue","lookingForAJob","lookingForAJobDescription","Contact","ProfileInfo","savePhoto","saveProfile","editMode","setEditMode","gifka","target","files","length","Post","MyPosts","postDate","MyPostsContainer","Profile","ProfileContainer","match","params","AuthorizedUserId","getStatusThunk","refreshProfile","prevProps","prevState","file","getState","Promise","reject","withRouter","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATE","SET_USER_AVATAR","GET_CAPTCHA_URL_SUCCESS","login","userAva","captchaUrl","getAuthThunk","Success","gerCaptchaUtl","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","bestfriends","sideBarReducer","subscribers","ws","closeHandler","notifySubsAboutStatus","setTimeout","createChannel","onMessageHandler","JSON","parse","forEach","s","openHandler","errorHandler","console","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatApi","eventName","callback","send","SET_RECEIVED","STATUS_CHANGED","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","chatReducer","m","v1","index","array","filmAPI","movies","ADD_FILM","DELETE_FILM","LIKE_FILM","DISLIKE_FILM","films","isLoading","getFilmsThunkCreater","response2","obj","like","allFilms","deleteFilm","likeFilm","dislikeFilm","filmReducer","UPDATE_NEW_LOGIN_TEXT","UPDATE_NEW_PASSWORD_TEXT","IS_DISABLED","NEED_REDIRECT","newLogintext","newPasswordtext","isDisabled","needRedirect","mainTestReducer","booksAPI","smth","NEW_SEARCH","ADD_BOOKS","NEW_SORT","books","searchField","sort","ccleaner","book","volumeInfo","hasOwnProperty","thumbnail","searchBookThunkCreater","cleanBooks","addBooks","handleSearchAC","handleSort","booksReducer","animeAPI","log","ADD_ANIME","ADD_ANIMES","DELETE_ANIME","LIKE_ANIME","DISLIKE_ANIME","animes","getAnimesThunkCreater","allAnimes","deleteAnime","likeAnime","dislikeAnime","addAnimes","animeReducer","rootReducer","combineReducers","musics","sideBar","app","chat","film","anime","maintest","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","checkbox","LoginFormAuth","CaptchaIsRequired","field","Login","HeaderComponent","header","loginBlock","signIn","button1","userAvatar","ChatPage","Chat","Messages","messagesAnchorRef","useRef","autoScrollIsActive","SetAutoScrollIsActive","scrollIntoView","behavior","onScroll","element","abs","scrollHeight","scrollTop","clientHeight","Message","userName","AddMassageForm","setMessage","sendMessage","sendMessageThunk","onKeyDown","event","preventDefault","stopPropagation","Loading","loading","weatherOptions","Rain","iconName","gradient","title","subTitle","Snow","Drizzle","Thunderstorm","Dust","Mist","Smoke","Haze","Sand","Ash","Squall","Tornado","Clear","Clouds","Weather","temp","condition","halfContainer","style","backgroundImage","weatherAPI","latitude","longitude","WeatherContainer","setIsLoading","setTemp","setCondition","gerPosition","pos","crd","coords","getWeather","main","weather","getLocation","navigator","geolocation","getCurrentPosition","alert","round","EachFilm","d","undefined","genres","eachFilm","large_cover_image","png","rating","des","dislike","Films","filmsElements","description_full","FilmsContainer","MainPage","disabledChanger","pass","input","ProfilePage","Search","searchBook","form","handleSearch","defaultValue","BookCard","eachBook","image","author","published","substring","BookList","fullAll","imageLinks","publisher","publishedDate","Books","sortedBooks","b","parseInt","EachAnime","eachAnime","posterImage","episodeCount","startDate","popularityRank","searchAnime","Anime","animesElements","attributes","titles","en","AnimeContainer","PopUpSlider","isOpen","setIisOpen","pictures","setI","setImages","changing","open","btnHide","btnOpen","banner","btnBack","btnNext","btnClose","Header","Layout","Content","Footer","Sider","MusicContainer","lazy","App","needWeather","initialiseApp","onerror","errorMsg","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","logo","logo1","theme","mode","defaultSelectedKeys","Item","icon","UserOutlined","BookOutlined","WechatOutlined","SearchOutlined","SoundOutlined","VideoCameraOutlined","ReadOutlined","ZhihuOutlined","setState","CloudOutlined","padding","height","margin","minHeight","render","NewsContainer","fallback","DiallogsContainer","textAlign","AppContainer","AppAllTree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.18367dfa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"GenaProfileInfo_avatar__3BfPJ\",\"wallpaper\":\"GenaProfileInfo_wallpaper__30F0f\",\"description\":\"GenaProfileInfo_description__Xfnpz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Eachdialog_dialog__ksd3Q\",\"activeLink\":\"Eachdialog_activeLink__1dM5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ChatPage_ava__1F5tH\",\"messages\":\"ChatPage_messages__1z32o\",\"all\":\"ChatPage_all__2U5Ve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__13IIQ\",\"name\":\"Friend_name__1FYWC\",\"dropbtn\":\"Friend_dropbtn__28xq_\",\"dropdown\":\"Friend_dropdown__3b3Uf\",\"dropdowncontent\":\"Friend_dropdowncontent__1YHux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massages\":\"Eachmessage_massages__3N-3E\"};","const ADD_SONG = 'ADD-SONG';\r\nconst UPDATE_NEW_SONG_TEXT = 'UPDATE-NEW-SONG-TEXT';\r\n\r\n\r\n\r\nexport type SongsType = {\r\n    id: number\r\n    nameSong: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n        songs: [\r\n            {\r\n                id: 1, nameSong: 'gachimuchi -' +\r\n                    ' А как насчёт ♂?♂'\r\n            },\r\n            {\r\n                id: 2, nameSong: 'GACHIMUCHI -' +\r\n                    ' Чудо (right version)'\r\n            },\r\n            {\r\n                id: 3, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Филипп Киркоров - Это не снег♂'\r\n            },\r\n            {\r\n                id: 4, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Спокойная ночь - Кино♂'\r\n            },\r\n            {\r\n                id: 5, nameSong: 'GachiMuchi -' +\r\n                    ' Я назову планету'\r\n            },\r\n        ] as Array<SongsType>,\r\n        newsongtext: \"\",\r\n    count: 7\r\n    }\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionTypes = SongOnChangeActionCreatorType | AddSongActionCreatorType\r\n\r\nconst musicReducer = (state = initialState, action: ActionTypes): initialStateType => {\r\n\r\n\r\n    switch (action.type){\r\n        case ADD_SONG: {\r\n            let newSong = {\r\n                id: state.count,\r\n                nameSong: state.newsongtext,\r\n\r\n            };\r\n            return {...state,\r\n                songs: [newSong, ...state.songs],\r\n                newsongtext: '',\r\n                count: state.count+1\r\n            };\r\n        }\r\n        case UPDATE_NEW_SONG_TEXT:\r\n            return  {...state,\r\n                newsongtext: action.newText\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\ntype SongOnChangeActionCreatorType = {\r\n    type: typeof UPDATE_NEW_SONG_TEXT,\r\n    newText: string\r\n}\r\nexport const songOnChangeActionCreator = (text: string): SongOnChangeActionCreatorType => ({\r\n    type: UPDATE_NEW_SONG_TEXT,\r\n    newText: text\r\n})\r\ntype AddSongActionCreatorType = {\r\n    type: typeof ADD_SONG,\r\n}\r\nexport const addSongActionCreator = (): AddSongActionCreatorType => ({type: ADD_SONG});\r\n\r\nexport default musicReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"per\":\"Friends_per__2fPD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__2wikU\",\"textarea\":\"News_textarea__1x5Nr\",\"button\":\"News_button__wenNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Profile_all__1HEYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__2uXVN\",\"wallpaper\":\"ProfileInfo_wallpaper___G8Lq\",\"description\":\"ProfileInfo_description__21tx9\",\"info\":\"ProfileInfo_info__3vq2Z\",\"error\":\"ProfileInfo_error__1OY2X\",\"editButton\":\"ProfileInfo_editButton__197EF\",\"gifka\":\"ProfileInfo_gifka__2L3R8\"};","import axios from \"axios\";\r\nimport {photosType} from \"../Types/Types\";\r\n\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '1c389392-606e-42a1-8d6e-0ba8e47b4434'\r\n    }\r\n});\r\nexport type itemsType = {\r\n    name: string\r\n    id: number\r\n    photos: photosType\r\n    status: string\r\n    followed: boolean\r\n}\r\nexport type getUsersType = {\r\n    items: Array<itemsType>\r\n    totalCount: number\r\n    error: null | any\r\n}\r\n\r\n\r\n\r\n\r\nexport enum ResultCodeEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\nexport enum ResultCodeWithCaptchaEnum  {\r\n        CaptchaIsRequired = 10\r\n}\r\n\r\nexport type getAuthType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\nexport type loginType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodeEnum | ResultCodeWithCaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\n\r\n\r\n\r\nexport type ThreeParamsType = {\r\n    data: {\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\nexport type savePhotoType = {\r\n    data:\r\n        {\r\n            photos: photosType\r\n        }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","    import {ProfileType} from \"../Types/Types\";\r\nimport {getUsersType, instance, ThreeParamsType} from \"./api\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage =1, pageSize = 10, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<getUsersType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? \"\" : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUsersFriends(){\r\n        return instance.get<getUsersType>(`users`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n\r\n    getProfilePhoto(){\r\n        return instance.get<ProfileType>(`profile/9`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUnfollow(id: number){\r\n        return instance.delete<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getFollow(id: number){\r\n        return instance.post<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}","\r\nimport { UserType} from \"../Types/Types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {usersAPI} from \"../api/user-api\";\r\n\r\nconst ADD_USER = 'ADD_USER';\r\nconst FRIEND_CHECK = 'FRIEND_CHECK'\r\nconst FRIEND_REMOVE = 'FRIEND_REMOVE'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_ITEMS_COUNT = 'SET_TOTAL_ITEMS_COUNT'\r\nconst IS_FETCHING = 'IS_FETCHING'\r\nconst SET_FILTER = 'SET_FILTER'\r\n\r\nexport type FriendDateType = {\r\n    id: number,\r\n    link: string,\r\n    name: string,\r\n    avatar: string,\r\n    surname: string,\r\n    friendsAlready: boolean,\r\n\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n    friendDate: [\r\n        {\r\n            id: 1111111,\r\n            link: '/https://vk.com/dank_af',\r\n            name: 'Геннадий',\r\n            avatar: 'https://meragor.com/files/styles//ava_800_800_wm/ava-241.jpg',\r\n            surname: 'Льянов',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 2222222,\r\n            link: 'https://vk.com/get_imba',\r\n            name: 'Тимур',\r\n            surname: 'Льянов',\r\n            avatar: 'https://i.pinimg.com/originals/d2/27/67/d22767e3ecd58f14c839092e1dfe3852.jpg',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 333333,\r\n            link: 'https://vk.com/evgeniasims',\r\n            name: 'Евгения',\r\n            surname: 'Хайретдинов',\r\n            avatar: 'http://sun9-67.userapi.com/s/v1/ig2/6JU7DbnLm46xuMVj9w2gHBOoagBCXOCkTilVO__oHcVOxVdwYVIxZAfEKG7R9_EnXUb-CLjsqkl-cuetoovsmwDU.jpg?size=200x0&quality=96&crop=1,1,1197,1197&ava=1',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 4444444,\r\n            link: 'https://vk.com/id153839551',\r\n            name: 'Кекс',\r\n            surname: 'Слесырев',\r\n            avatar: 'https://anime-fans.ru/wp-content/uploads/2021/01/Ochen-smeshnye-anime-avy_01.jpg',\r\n            friendsAlready: true,\r\n        },\r\n\r\n    ] as Array<FriendDateType> | any,\r\n\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalItemsCount: 222,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFriend: true,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    friendCheckAC :() => ({\r\n        type: FRIEND_CHECK,\r\n    } as const),\r\n    removeFriendAC:(idToRemove: number) => ({\r\n        type: FRIEND_REMOVE,\r\n        idToRemove: idToRemove\r\n    } as const),\r\n    follow:(userId: number) => ({\r\n        type: FOLLOW,\r\n        userId\r\n    } as const),\r\n    unfollow:(userId:number) => ({\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const),\r\n    setUsers:(users: Array<UserType>) => ({\r\n        type: SET_USERS,\r\n        users\r\n    } as const),\r\n    addUserAC:(id: number, avatarPhoto: string | null, name: string) => ({\r\n        type: ADD_USER,\r\n        id: id,\r\n        surname: null,\r\n        avatar: avatarPhoto,\r\n        name: name,\r\n    } as const),\r\n    isFetchingDispatch: (isFetchingBOOL: boolean)  => ({\r\n        type: IS_FETCHING,\r\n        isFetchingBOOL,\r\n    } as const),\r\n    setTotalItemsCount :(Count: number) => ({\r\n        type: SET_TOTAL_ITEMS_COUNT,\r\n        Count,\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n    setFilter: (filter: FilterType) => ({\r\n        type: SET_FILTER,\r\n        payload: filter\r\n    } as const),\r\n}\r\n\r\n\r\nconst friendsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_USER:\r\n            let stateCopy = {...state}\r\n            let friendDateSet = [...stateCopy.friendDate]\r\n            let friendsCollection = new Set(friendDateSet)\r\n            let newFriendUser = {\r\n                id: action.id,\r\n                name: action.name,\r\n                surname: action.surname,\r\n                avatar: action.avatar,\r\n                link: '/profile/' + action.id,\r\n                friendsAlready: true\r\n            };\r\n            friendsCollection.add(newFriendUser)\r\n            return {\r\n                ...state,\r\n                friendDate: Array.from(friendsCollection)\r\n            };\r\n\r\n        case FRIEND_CHECK:\r\n            return {\r\n                ...state,\r\n                isFriend: false\r\n            }\r\n        case FRIEND_REMOVE:\r\n            return {\r\n                ...state,\r\n                friendDate: state.friendDate.filter((item: any) => item.id !== action.idToRemove)\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        case SET_TOTAL_ITEMS_COUNT: {\r\n            return {...state, totalItemsCount: action.Count}\r\n        }\r\n        case IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetchingBOOL}\r\n        }\r\n        case SET_FILTER: {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type ThunkType = BaseThunkType<ActionsType>\r\n\r\nexport const getUsersThunkCreater = (currentPage: number,\r\n                                     pageSize: number,\r\n                                     filter: FilterType): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.isFetchingDispatch(true))\r\n        dispatch(actions.setCurrentPage(currentPage))\r\n        dispatch(actions.setFilter(filter))\r\n        let response = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend)\r\n            dispatch(actions.isFetchingDispatch(false))\r\n            dispatch(actions.setUsers(response.items))\r\n            dispatch(actions.setTotalItemsCount(response.totalCount))\r\n    }\r\n}\r\nexport const getUsersThunk = (isFriend: boolean): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getUsersFriends()\r\n    for (let i = 0; i < 10; i++) {\r\n        if (response.items[i].followed === true && isFriend) {\r\n            dispatch(actions.addUserAC(response.items[i].id, response.items[i].photos.large != null ?\r\n                response.items[i].photos.large : 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', response.items[i].name,))\r\n        }\r\n    }\r\n    dispatch(actions.friendCheckAC())\r\n}\r\nexport const unfollowThunk = (id: number): ThunkType => async (dispatch) => {\r\n    if (id > 100000) {\r\n        dispatch(actions.removeFriendAC(id))\r\n    } else {\r\n        let response = await usersAPI.getUnfollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(actions.unfollow(id))\r\n            dispatch(actions.removeFriendAC(id))\r\n        }\r\n    }\r\n}\r\n    export const followThunk = (id: number, photo: string | null, name: string): ThunkType => async (dispatch ) => {\r\n    let response = await usersAPI.getFollow(id)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actions.follow(id))\r\n        photo != null\r\n            ? dispatch(actions.addUserAC(id, photo, name)) :\r\n            dispatch(actions.addUserAC(id, 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', name))\r\n    }\r\n}\r\n\r\nexport default friendsReducer;","import React from 'react';\r\nimport classes from './Friend.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n  key: number\r\n  id: number\r\n  link: string\r\n  name: string\r\n  surname: string\r\n  avatar: string\r\n  unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst Friend: React.FC<PropsType>  = (props) => {\r\n\r\n  let unfollowing = (id: number) => {\r\n      props.unfollowThunk(id)\r\n\r\n  }\r\n\r\n  return <div>\r\n\r\n    <div className={classes.item}>\r\n      <img alt={'ku'} src={props.avatar} />\r\n      <NavLink to={props.link}> {props.name} {props.surname} </NavLink>\r\n      <button onClick={() =>{unfollowing(props.id)}} className={classes.dropbtn}>Удалить из друзей</button>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport classes from './All.module.css'\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nimport {FriendDateType} from \"../../../redux/friendsReducer\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    addfriend: (id: number, avatarPhoto: string, name: string) => void\r\n    friends:  Array<FriendDateType>\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst All: React.FC<PropsType> =(props) => {\r\n\r\n    let friendsAll= props.friends.map(el =>  <Friend key={el.id} id={el.id} link = {el.link} name = {el.name} surname= {el.surname} avatar={el.avatar} unfollowThunk={props.unfollowThunk}/>)\r\n    let name1: any = React.createRef()\r\n    let ava1: any = React.createRef()\r\n\r\n    let addFriend = () => {\r\n\r\n        ava1.current.value ===\"\" ?   props.addfriend(888888, 'https://sun1-93.userapi.com/s/v1/ig2/i3174V5HMNQgKMxXm43MBqaBeqvf9lPbnq34n_NTXqwUY7XMzkok7XT1gZSQjBqJbxhns3gHCZx93ppb6zlqA5wL.jpg?size=200x200&quality=96&crop=53,33,478,478&ava=1', name1.current.value)\r\n        : props.addfriend(888888, ava1.current.value, name1.current.value)\r\n        name1.current.value = '';\r\n        ava1.current.value = '';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        < div className={classes.all}>\r\n            <div className={classes.seacrh}>\r\n                name\r\n                <textarea className={classes.textare} ref={name1} >   </textarea>\r\n                ava\r\n                <textarea className={classes.textare} ref={ava1}> </textarea>\r\n                <button className={classes.but} onClick={addFriend}> Add New Friend </button>\r\n            </div>\r\n            {friendsAll}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default All;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {actions, FriendDateType, getUsersThunk, unfollowThunk} from \"../../../redux/friendsReducer\";\r\nimport All from \"./All\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    friends: Array<FriendDateType>\r\n    isFriend: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersThunk: (isFriend: boolean) => void\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    addUserAC: (id: number, avatarPhoto: string, name: string) => void\r\n\r\n}\r\n\r\ntype all = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\n\r\nconst AllContainerHook: React.FC<all> =(props)=> {\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( ()=>{\r\n        props.getUsersThunk(props.isFriend)\r\n    }, [])\r\n\r\n\r\n        return <All\r\n                addfriend={props.addUserAC}\r\n                friends={props.friends}\r\n                unfollowThunk={props.unfollowThunk}\r\n            />\r\n}\r\nlet mapStateToProps =(state: AppStateType) => {\r\n\r\n    return {\r\n        friends: state.friends.friendDate,\r\n        isFriend: state.friends.isFriend,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {unfollowThunk, getUsersThunk, ...actions}),\r\n   // withAuthRedirect,\r\n)(AllContainerHook)\r\n\r\n","import React from 'react';\r\nimport classes from './Friends.module.css'\r\n\r\nimport AllContainerHook from \"./All/AllContainerHook\";\r\n\r\n\r\n\r\n\r\n\r\nconst Friends =() => {\r\n    return (<div className={classes.per}>\r\n            {/*<FriendsControl />*/}\r\n            <AllContainerHook />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport classes from './GenaPosts.module.css'\r\n\r\n\r\n\r\nconst GenaPosts = (props) => {\r\n\r\n\r\n\r\n  return <div className={classes.MyPostsAll}>\r\n    <h3> My posts </h3>\r\n    \r\n    <div className={classes.CreateNewPost} >\r\n      Create New Post\r\n    </div>\r\n    <div>\r\n      <div>\r\n                <textarea className={classes.text} />\r\n      </div>\r\n      <div>\r\n        <button className={classes.button} >Send</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default GenaPosts;","import React from 'react';\r\n\r\nimport classes from './GenaProfileInfo.module.css'\r\n\r\nconst GenaProfileInfo = () => {\r\n    return <div>\r\n        <div className={classes.wallpaper}>\r\n            <img\r\n                src=\"https://sun9-78.userapi.com/impg/NrSWcMzkCka2yzSn3A9lmLm2c6Jg5QGPOKYM_A/aZTfjfpwHRo.jpg?size=1600x648&quality=96&sign=2e39caafd67c569a65eca8d1d40f223a&type=album\"/>\r\n        </div>\r\n      <div className={classes.description}>\r\n        <div className={classes.avatar}>\r\n            <img src=\"https://sun9-74.userapi.com/impg/K_kf_03-X8lP2uixO9tzjxIjrNyUztz0yAMcdw/cBvjDD8FRDs.jpg?size=640x640&quality=96&sign=cc6043c92263a14c75dc8e5517f59cf8&type=album\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfileInfo;","import React from 'react';\r\nimport GenaPosts from './GenaPosts/GenaPosts';\r\n\r\nimport GenaProfileInfo from \"./GenaProfileInfo/GenaProfileInfo\";\r\n\r\n\r\nconst GenaProfile = (props) => {\r\n\r\n    return <div>\r\n        <GenaProfileInfo/>\r\n\r\n        <GenaPosts posts={props.posts} dispatch={props.dispatch}/>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfile;","import React from 'react';\r\n\r\n\r\nconst NikitaProfile = (props) => {\r\n\r\n    return <div>\r\n    <img src='https://sun9-59.userapi.com/impg/-0uRmUFYMzw1edpnx6Zf26nyDK5C9k8lfa1ZNA/mY7HJSdsAJU.jpg?size=537x645&quality=96&sign=ebb93117806db9e5e54a3de35211efc0&type=album' />\r\n    </div>\r\n}\r\n\r\nexport default NikitaProfile;","import {InferActionsTypes} from \"./reduxStore\";\r\n\r\n\r\nconst ADD_MESSAGE = 'DIALOGS/ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n        messages: [\r\n            {id: 1, message: 'loh gena loh'},\r\n            {id: 2, message: 'loh misha loh'},\r\n            {id: 3, message: 'loh pasha loh'},\r\n            {id: 4, message: 'loh nikita loh'},\r\n            {id: 5, message: 'loh tima loh'},\r\n        ] as Array<MessageType>,\r\n        dialogs: [\r\n            {id: 1, name: 'gena'},\r\n            {id: 2, name: 'misha'},\r\n            {id: 3, name: 'pasha'},\r\n            {id: 4, name: 'nikita'},\r\n            {id: 5, name: 'tima'},\r\n        ] as Array<DialogType>,\r\n    count: 6,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst dialogReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: state.count,\r\n                message: action.message,\r\n            };\r\n\r\n            return {...state,\r\n                messages: [newMessage, ...state.messages],\r\n                count: state.count+1\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addMessageActionCreator: (message: string) => ({\r\n        type: ADD_MESSAGE,\r\n        message\r\n    }as const)\r\n}\r\n\r\n\r\nexport default dialogReducer;","import React from 'react';\r\nimport classes from './Eachmessage.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    message: string\r\n}\r\n\r\n\r\nconst Eachmessage: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.massages}>\r\n                <div className={classes.massage}> {props.message}  </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Eachmessage;","import React from 'react';\r\nimport classes from './Eachdialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst Eachdialog: React.FC<PropsType> = (props) => {\r\n\r\n    let path = \"/diallogs/\" + props.id;\r\n    return (\r\n        < div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path} activeClassName={classes.activeLink}> {props.name}</NavLink>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Eachdialog;","import React from 'react';\r\nimport classes from './Diallogs.module.css'\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport Eachmessage from \"./Eachmessage/Eachmessage\";\r\nimport Eachdialog from \"./Eachdialog/Eachdialog\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogReducer\";\r\n\r\n\r\ntype MyFormValues = {\r\n    message: string;\r\n}\r\nconst initialValues: MyFormValues = {\r\n    message: 'wish',\r\n}\r\n\r\nexport type MapStatePropsType = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n}\r\nexport type MapDispatchPropsType = {\r\n    addMessageActionCreator: (newText: string) => void\r\n}\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\n\r\ntype OnSubmitType = {\r\n    onSubmit: (values: {message: string}) => void\r\n}\r\ntype all = PropsType & MyFormValues & OnSubmitType\r\n\r\nconst Diallogs: React.FC<all>  = (props) => {\r\n    let dialogsElements = props.dialogs.map(el => <Eachdialog key={el.id} id={el.id} name={el.name}/>)\r\n    let messageElements = props.messages.map(el => <Eachmessage key={el.id} message={el.message}/>)\r\n\r\n    const onSubmit = (values: {message: string}) =>{\r\n        props.addMessageActionCreator(values.message)\r\n    }\r\n\r\n    return (\r\n        < div>\r\n           <AddMessageForm onSubmit={onSubmit}/>\r\n            < div className={classes.dialogs}>\r\n\r\n                < div className={classes.dialogsitem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={classes.massages1}>\r\n                    {messageElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst AddMessageForm: React.FC<OnSubmitType> = (props) => {\r\n    return (<Formik initialValues={initialValues} onSubmit={props.onSubmit}>\r\n            <Form >\r\n                <div className={classes.seacrh}>\r\n                    <Field type='text' className={classes.text} name='message' component='textarea'/>\r\n                    <button className={classes.but} type='submit'> Add Message</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Diallogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n    class RedirectComponent extends React.Component<mapStateToPropsForRedirectType> {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from 'react';\r\n\r\nimport {actions } from \"../../redux/dialogReducer\";\r\nimport Diallogs, {MapDispatchPropsType, MapStatePropsType} from \"./Diallogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        messages: state.dialogs.messages,\r\n        dialogs: state.dialogs.dialogs\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {addMessageActionCreator: actions.addMessageActionCreator}),\r\n    withAuthRedirect\r\n)(Diallogs);","import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"../../pages/Profile/MyPosts/MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport * as Yup from 'yup'\r\n\r\n\r\ntype MyFormValues = {\r\n    new: string\r\n    pic: string\r\n}\r\ntype  PropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n}\r\n\r\n\r\n\r\nconst AddPostFormik: React.FC<PropsType> = (props) => {\r\n    const initialValues: MyFormValues = {\r\n        new: '',\r\n        pic: '',\r\n\r\n    }\r\n    const validationSchema = Yup.object({\r\n        new: Yup.string()\r\n            .required('Required')\r\n            .max(50, \"Too many symbols\"),\r\n        pic: Yup.string()\r\n            .required('Required')\r\n    })\r\n\r\n    const onSubmit = ( values: { new: string, pic: string }) => {\r\n        props.addPostActionCreator(values.new, values.pic)\r\n\r\n    }\r\n    return (<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        <Form>\r\n            <span className={classes.fieldPosts}>\r\n\r\n                <div className={classes.error}> <ErrorMessage name='new'/></div>\r\n                <div className={classes.error}><ErrorMessage name='pic'/></div>\r\n                <div> </div>\r\n                <Field className={classes.textarea} placeholder=\"ваша новость\" type='text' name='new'\r\n                      component='textarea'/>\r\n                <Field className={classes.textarea} placeholder=\"ваше картинка\" type='text' name='pic'\r\n                       component='textarea'/>\r\n <button className={classes.button}>Опубликовать</button>\r\n\r\n            </span>\r\n\r\n            </Form>\r\n    </Formik>)\r\n\r\n}\r\nexport default AddPostFormik","import React from 'react';\r\nimport classes from './News.module.css'\r\nimport AddPostFormik from \"../../components/AddPostForm/AddPostForm\";\r\nimport {PostsType} from \"../../Types/Types\";\r\n\r\n\r\ntype PropsType = {\r\n    newsElements: Array<PostsType>\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n\r\n}\r\n\r\n\r\nconst News: React.FC<PropsType>  =(props) => {\r\n\r\n    let newsElements = props.newsElements\r\n\r\n    return (\r\n        < div className={classes.content}>\r\n           <div>\r\n\r\n                   <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n\r\n           </div>\r\n            {newsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import {PostsType} from \"../Types/Types\";\r\n\r\n\r\nlet initialState = {\r\n    new: [\r\n        {\r\n            id: 1,\r\n            time: 'сегодня в 11 утра',\r\n            post: 'Вчера посмотрел атаку титанов',\r\n            user: 'Timur Brat',\r\n            avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album',\r\n            picture: 'https://cdn.shazoo.ru/351151_Z0bYpFdK6E_8010ba67_497b_4038_9c6e_f9b0fa9c.jpg',\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня в 9 утра',\r\n            post: 'Посмотрел \"Твое Имя\", мне понравилось',\r\n            user: 'Gena Daun',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n            picture: 'https://www.mirf.ru/wp-content/uploads/2020/09/update_1___multi_sourced_4k__kimi_no_na_wa_by_assassinwarrior_dajydsn-fullview.jpg',\r\n        },\r\n        {\r\n            id: 3,\r\n            time: 'вчера в 12 ночи',\r\n            post: 'Всем привет',\r\n            user: 'Pavel Palov',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album',\r\n            picture: 'https://i.pinimg.com/originals/3c/8f/9a/3c8f9ad07c5f305354cdf087cf1d580c.jpg',\r\n        },\r\n        {\r\n            id: 4,\r\n            time: 'позавчера',\r\n            post: 'Я русский ',\r\n            user: 'Maks Voin',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album',\r\n            picture: 'https://cdni.rbth.com/rbthmedia/images/2020.07/original/5f1e888885600a2608563f65.jpg',\r\n        },\r\n        {\r\n            id: 5,\r\n            time: 'ну он просто лох',\r\n            post: 'я бабизян че тут сказать',\r\n            user: 'Sergey Ga4ibyan',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album',\r\n            picture: 'https://icdn.lenta.ru/images/2021/01/20/16/20210120164051128/wide_4_3_ad0a8dedf4f24c1002d87743b6451b83.jpg',\r\n        },\r\n    ] as Array<PostsType>\r\n\r\n}\r\nexport const getNewMassiv = () => { return initialState.new;}\r\ntype ActionTypes = null\r\n\r\nconst newsReducer = (state = initialState, action: ActionTypes) => {\r\n\r\n\r\n            return state;\r\n\r\n\r\n}\r\n\r\nexport default newsReducer;","import {ProfileType} from \"../Types/Types\";\r\nimport {instance, savePhotoType, ThreeParamsType} from \"./api\";\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number | null){\r\n        return instance.get<ProfileType>(`profile/`+ userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ThreeParamsType>(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile: File){\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put<savePhotoType>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res=>res.data)\r\n    },\r\n    saveProfile(profile: ProfileType){\r\n        return instance.put<ThreeParamsType>(`profile`, profile)\r\n    }\r\n}","\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const gifApi = {\r\n    getSmthEvil() {\r\n\r\n        return axios.get<any>(`https://api.giphy.com/v1/gifs/random?api_key=TarQfWOwDk4dQg8syslWxwsWWobrCCaO&tag=&rating=r`)\r\n            .then((data: any) => data.data.data.images.original.url);\r\n    },\r\n    getGiftsForNews() {\r\n\r\n        return axios.get<any>(`https://api.giphy.com/v1/gifs/trending?api_key=TarQfWOwDk4dQg8syslWxwsWWobrCCaO&limit=5&rating=r`)\r\n            .then((data: any) => data.data.data);\r\n    },\r\n}\r\n\r\n","import {getNewMassiv} from \"./newsReducer\";\r\n\r\nimport {photosType, PostsType, ProfileType} from \"../Types/Types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"./reduxStore\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport {gifApi} from \"../api/gif-api\";\r\n\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_PHOTO = 'SET_PHOTO'\r\nconst SET_ERROR = 'profile/SET_ERROR';\r\nconst SET_OWNER_PHOTO = 'profile/SET_OWNER_PHOTO';\r\nconst SET_NEW_GIF = 'profile/SET_NEW_GIF';\r\nconst SET_ALL_GIFS = 'profile/SET_ALL_GIFS';\r\n\r\n\r\nlet initialState = {\r\n\r\n    posts: [\r\n\r\n        {\r\n            id: 1,\r\n            post: 'First Friend GEna',\r\n            user: 'Гена',\r\n            time: 'сегодня в 11 утра',\r\n            picture: '',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня',\r\n            post: ')))',\r\n            user: 'Gena',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n            picture: '',\r\n        },\r\n        {\r\n            id: 3,\r\n            post: '1111',\r\n            user: 'Pavel  -   ',\r\n            time: 'сегодня в ',\r\n            picture: '',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album'\r\n        },\r\n\r\n        {\r\n            id: 4,\r\n            post: '222222222',\r\n            user: 'Maks  -   ',\r\n            time: 'сегодня в 11 ',\r\n            picture: '',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album'\r\n        },\r\n        {\r\n            id: 5,\r\n            post: '33333333333333',\r\n            user: 'Ga4ibyan  -   ',\r\n            time: 'сегодня в 11 утра',\r\n            picture: '',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album'\r\n        }\r\n    ] as Array<PostsType>,\r\n\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    countPosts: 6,\r\n    isError: false,\r\n    photo: null as string | null,\r\n    gif: '',\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nlet newsImport = getNewMassiv();\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.countPosts,\r\n                post: action.newText,\r\n                user: 'Вы  ',\r\n                avatar: \"https://n1s1.hsmedia.ru/30/a5/50/30a550ad429dc5b67118ec6c0a984137/620x440_1_61ebd8b8b757e8b7e6e0c8e6d9f2efbe@2055x1459_0xc0a839a2_12152610071478613656.jpeg\",\r\n                picture: action.pic,\r\n                time: 'сейчас',\r\n            };\r\n            newsImport.unshift(newPost)\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n\r\n                countPosts: state.countPosts + 1\r\n            };\r\n        }\r\n\r\n\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter((item) => item.id !== action.idToRemove)}\r\n        }\r\n        case SET_PHOTO: {\r\n\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType};\r\n        }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        case SET_OWNER_PHOTO:\r\n            return {\r\n                ...state,\r\n                photo: action.photo,\r\n\r\n            }\r\n\r\n        case SET_NEW_GIF:\r\n            return {\r\n                ...state,\r\n                gif: action.gif\r\n            }\r\n\r\n        case SET_ALL_GIFS:\r\n            let stateCopy = {...state}\r\n            stateCopy.posts= [...state.posts]\r\n            for (let i = 0; i < 5; i++)\r\n            {\r\n                stateCopy.posts[i].picture =  action.newGifs[i].images.original.url\r\n            }\r\n\r\n            return stateCopy\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newText: string, pic: string) => ({\r\n        type: ADD_POST,\r\n        newText,\r\n        pic\r\n    } as const),\r\n    deletePost: (idToRemove: number) => ({\r\n        type: DELETE_POST,\r\n        idToRemove\r\n    }as const),\r\n    setUsersProfile: (profile: ProfileType) => ({\r\n        type: SET_USERS_PROFILE,\r\n        profile: profile,\r\n    }as const),\r\n    savePhotoSuccess :(photos: photosType)  => ({\r\n        type: SET_PHOTO,\r\n        photos\r\n    }as const),\r\n    setErrorProfile :(Error: boolean)  => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    setStatus: (status: string) => ({\r\n        type: SET_STATUS,\r\n        status\r\n    }as const),\r\n    setOwnerAvatar: (photo: string | null) => ({\r\n        type: SET_OWNER_PHOTO,\r\n        photo\r\n    }as const),\r\n    setNewGif: (gif: string ) => ({\r\n        type: SET_NEW_GIF,\r\n        gif\r\n    }as const),\r\n    setAllGifts: (newGifs: any) => ({\r\n        type: SET_ALL_GIFS,\r\n        newGifs\r\n    }as const),\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const  getProfileThunk = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let newGifts = await gifApi.getGiftsForNews()\r\n    dispatch(actions.setAllGifts(newGifts));\r\n    let newGif =  await gifApi.getSmthEvil()\r\n    dispatch(actions.setNewGif(newGif));\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setUsersProfile(response.data));\r\n}\r\n\r\n\r\nexport const  getOwnerAva = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setOwnerAvatar(response.data.photos.small));\r\n}\r\nexport const getStatusThunk = (userId: number):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(response.data));\r\n}\r\nexport const updateStatusThunk = (status: string):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File):ThunkType => async (dispatch) => {\r\n\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.resultCode === 0){\r\n        dispatch(actions.savePhotoSuccess(response.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType):ThunkType => async (dispatch, getState) => {\r\n\r\n    const userId= getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0){\r\n        await dispatch(getProfileThunk(userId));\r\n        dispatch(actions.setErrorProfile(false))\r\n    }\r\n\r\n    else {\r\n        dispatch(actions.setErrorProfile(true))\r\n        return Promise.reject()\r\n    }\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport classes from './EachNew.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    post: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n}\r\n\r\nconst EachNew: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.news}>\r\n\r\n                <div className={classes.newsName}>\r\n\r\n                <img src={props.avatar} className={classes.ava} />\r\n                    <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={classes.content}>\r\n                        {props.post}\r\n                    </div>\r\n\r\n                <img src={props.picture} className={classes.picture}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachNew;","import React from 'react';\r\nimport News from \"./News\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {actions} from \"../../redux/profileReducer\";\r\nimport EachNew from \"./EachNew/EachNew\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        newsElements: state.news.new.map(el => <EachNew key={el.id} post={el.post} time={el.time} avatar={el.avatar} user={el.user}\r\n                                                        picture={el.picture}/>)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,{addPostActionCreator: actions.addPostActionCreator}),\r\n     // withAuthRedirect\r\n)\r\n(News)\r\n","export default __webpack_public_path__ + \"static/media/04de2e31234507.564a1d23645bf.1cbc65b1.gif\";","import preLoader from \"../../../assets/images/04de2e31234507.564a1d23645bf.gif\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preLoader} alt={'loading'}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","\r\n\r\n\r\n\r\n// export  const getFriendsUsers =(state) =>{\r\n//     return state.friends.users\r\n// }\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\nexport  const getUsers =(state: AppStateType) =>{\r\n    return state.friends.users\r\n}\r\nexport  const getAPageSize =(state: AppStateType) =>{\r\n    return state.friends.pageSize\r\n}\r\nexport  const getTotalCount =(state: AppStateType) =>{\r\n    return state.friends.totalItemsCount\r\n}\r\nexport  const getCurrentPage =(state: AppStateType) =>{\r\n    return state.friends.currentPage\r\n}\r\nexport  const getisFetching =(state: AppStateType) =>{\r\n    return state.friends.isFetching\r\n}\r\nexport  const getUsersFilter =(state: AppStateType) =>{\r\n    return state.friends.filter\r\n}","export default __webpack_public_path__ + \"static/media/DZIAss-5O_I.d5bd3e11.jpg\";","import React from \"react\";\r\nimport classes from \"./users.module.css\";\r\nimport photoAva from \"../../assets/images/DZIAss-5O_I.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { UserType} from \"../../Types/Types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    key: number\r\n    unfollowThunk: (userId: number) => void\r\n    followThunk: (id: number, photo: string | null, name: string) => void\r\n}\r\n\r\nlet EachUser: React.FC<PropsType> = (props) => {\r\n    let user= props.user\r\n    return <div key={user.id} className={classes.newUsers}>\r\n                <div className={classes.userInfo}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img alt=\"avatar\" src={user.photos.small != null ? user.photos.small : photoAva} className={classes.userPhoto}/>\r\n                    </NavLink>\r\n                    <span className={classes.userInfoShort}>\r\n                <div className={classes.fullname}>\r\n                    {user.name}\r\n                </div>\r\n                <div className={classes.status}>\r\n                    {user.status != null ? user.status : 'я тут'}\r\n                </div>\r\n                 <div className={classes.country}>\r\n                    Russia\r\n                 </div>\r\n                <div className={classes.city}>\r\n                    Moscow\r\n                </div>\r\n            </span>\r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button onClick={() => { props.unfollowThunk(user.id) }} className={classes.buttons}> Удалить из друзей </button> :\r\n                        <button className={classes.buttons} onClick={() => { props.followThunk(user.id, user.photos.small, user.name)}}> Добавить в друзья </button>}\r\n                </div>\r\n\r\n            </div>\r\n}\r\n\r\nexport default EachUser","import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages:  Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber -1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={classes.paginator}>\r\n        {portionNumber >1 &&\r\n        <button className={classes.back} onClick={()=> { setPortionNumber(portionNumber-1)}}> back </button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={cn ({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                }}> {p} </span>\r\n            })}\r\n        {portionCount> portionNumber &&\r\n        <button className={classes.next} onClick={()=> {setPortionNumber(portionNumber + 1)}}> next </button>}\r\n        <button className={classes.last} onClick={()=> {setPortionNumber(portionNumber=portionCount)}}> last </button>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/friendsReducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/friendsSelectors\";\r\n\r\n\r\nconst usersSearchValidation = (values: any)=> {\r\n    const errors = {}\r\n    return errors\r\n}\r\n type PropsType = {\r\n     onFilterChanged: (filter: FilterType) => void\r\n }\r\n\r\n type FriendFormType = 'true' | 'false' | 'null'\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n\r\n    const sumbit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n            validate={usersSearchValidation}\r\n            onSubmit={sumbit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" placeholder={'Find friend'}/>\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n})\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport EachUser from \"./EachUser\";\r\nimport Paginator from \"../../components/Paginator/Paginator\";\r\nimport classes from \"./users.module.css\";\r\n\r\nimport {FilterType, followThunk, getUsersThunkCreater, unfollowThunk} from \"../../redux/friendsReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getAPageSize,\r\n    getCurrentPage,\r\n    getTotalCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/friendsSelectors\";\r\nimport {useHistory} from \"react-router\";\r\nimport * as queryString from \"querystring\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\n\r\ntype PropsType = {}\r\nexport type QueryType = {term?: string, page?: string, friend?: string}\r\n\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    const totalItemsCount = useSelector(getTotalCount)\r\n    const users = useSelector(getUsers)\r\n    const filter = useSelector(getUsersFilter)\r\n    const pageSize = useSelector(getAPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if(!!parsed.page) actualPage = Number(parsed.page)\r\n        if(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch (parsed.friend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null }\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true }\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false }\r\n                break;\r\n        }\r\n\r\n        dispatch(getUsersThunkCreater(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        const query: QueryType = {}\r\n\r\n       if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getUsersThunkCreater(pageNumber, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsersThunkCreater(1, pageSize, filter))\r\n    }\r\n    const unfollowThunk1 = (userId: number) => {\r\n        dispatch(unfollowThunk(userId))\r\n    }\r\n    const followThunk1 = (id: number, photo: string | null, name: string) => {\r\n        dispatch(followThunk(id, photo, name))\r\n    }\r\n\r\n    return <div className={classes.all}>\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage}\r\n                   totalItemsCount={totalItemsCount}\r\n                   pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}\r\n                   portionSize={10}/>\r\n        <div>{\r\n            users.map(u => <EachUser user={u}\r\n                                     key={u.id}\r\n                                     unfollowThunk={unfollowThunk1}\r\n                                     followThunk={followThunk1}/>)\r\n        }</div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Preloader from \"../../components/common/Preloder/Preloader\";\r\nimport {getisFetching} from \"../../redux/friendsSelectors\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n}\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n    const isFetching = useSelector(getisFetching)\r\n\r\n    return <>\r\n\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n\r\n\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\ntype all = PropsType\r\n\r\n\r\nconst ProfileStatusWithHooks : React.FC<all> =(props)=>{\r\n\r\n\r\n    let [editMode1, setEditMode1] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( ()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = ()=>{\r\n        setEditMode1(true)\r\n    }\r\n\r\n    const deactivateEditMode = ()=>{\r\n            setEditMode1(false)\r\n       props.updateStatusThunk(status)\r\n\r\n    }\r\n\r\n   const onStatusChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode1 &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n                </div>\r\n                }\r\n                {editMode1 &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport { Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {ProfileType} from \"../../../Types/Types\";\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n\r\n})\r\n\r\ntype PropsType = {\r\n    onSubmit: (values: any) => void\r\n    initialValues: ProfileType\r\n    profile: ProfileType\r\n    saveProfile: (profile: ProfileType) => any\r\n    isError: boolean\r\n}\r\n\r\n\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({initialValues, onSubmit, profile, isError}) =>{\r\n\r\n\r\n\r\n\r\n\r\n    return ( <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form>\r\n            {<div> <button >Save </button></div>}\r\n            <div className={classes.info}>\r\n                Name\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"ваше имя\" type='text' name='fullName'\r\n                   component='textarea'/>\r\n\r\n            <div className={classes.info}>\r\n                <b>Info</b>\r\n            </div>\r\n            <div >\r\n                <b>About me</b>:\r\n            </div>\r\n                <Field className={classes.textarea} placeholder=\"О вас\" type='text' name='aboutMe'\r\n                       component='textarea'/>\r\n            <div >\r\n              <b className={classes.info}> Contacts</b>\r\n                <div>{isError ? <span className={classes.error}> Wrong URL </span> : null} </div>\r\n                {Object.keys(profile.contacts).map(key=>{\r\n              return <div key={key} className={classes.info}>\r\n                <b> {key}: <Field  placeholder={key} type='text' name={\"contacts.\" + key}\r\n                                  component='input'/> </b>\r\n              </div>\r\n\r\n         })}\r\n         </div>\r\n\r\n\r\n            <div><b>lookingForAJob</b> </div>\r\n                <Field className={classes.textarea}  type='checkbox' name='lookingForAJob'/>\r\n\r\n            <div>\r\n                <b>My skills</b>\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"Ваши навыки\" type='text' name='lookingForAJobDescription'\r\n                    component='textarea'/>\r\n\r\n\r\n\r\n            {/*<div>userId - {profile.userId}</div>*/}\r\n            </Form>\r\n        </Formik>\r\n    )}\r\n\r\n\r\nexport default ProfileDataForm","import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../components/common/Preloder/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {contactsType, ProfileType} from \"../../../Types/Types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile ,status, updateStatusThunk, isOwner, savePhoto, saveProfile, isError} ) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const gifka= useSelector((state: AppStateType) => state.profile.gif)\r\n\r\n    if(!profile){\r\n        return <Preloader />}\r\n\r\n    const onSubmit = ( values: ProfileType) => {\r\n        saveProfile(values).then(\r\n            ()=>{\r\n                setEditMode(false)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>)=>{\r\n       if( e.target.files?.length){\r\n           // if (r.target.files && e.target.files.lenght){\r\n        savePhoto(e.target.files[0])\r\n       }\r\n    }\r\n\r\n\r\n    return <div>\r\n      <div className={classes.description}>\r\n\r\n        <div >\r\n            <span>\r\n            <img className={classes.avatar} alt=\"avatar\" src={ profile.photos.large === null ? 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png' : profile.photos.large }/>\r\n            {isOwner && <input onChange={mainPhotoSelected} type={'file'}/>}\r\n                </span>\r\n            <span>\r\n                     <img src={gifka}  className={classes.gifka}/>\r\n            </span>\r\n        </div>\r\n\r\n          <div className={classes.info}>\r\n              Status (дабл клик по статусу ниже и меняй)\r\n          </div>\r\n          <b><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk}/></b>\r\n          {editMode ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile} saveProfile={saveProfile} isError={isError}/> :\r\n          <ProfileData profile={profile} isOwner={isOwner} goToEditMode={()=> {setEditMode(true)}}/>}\r\n      </div>\r\n    </div>\r\n}\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, isOwner, goToEditMode}) =>{\r\n\r\n   return ( <div>\r\n           {isOwner && <div> <button className={classes.editButton} onClick={goToEditMode} >Edit Profile Info</button></div>}\r\n    <div className={classes.info}>\r\n        Name\r\n    </div>\r\n    <b>{profile.fullName}</b>\r\n\r\n    <div className={classes.info}>\r\n        <b>Info</b>\r\n    </div>\r\n    <div >\r\n        <b>About me</b>:  {profile.aboutMe}\r\n    </div>\r\n    <div >\r\n        <b className={classes.info}>Contacts</b>  :{Object.keys(profile.contacts).map((key)=>{\r\n        return <Contact key={key} contactTitle={key} ContactValue={profile.contacts[key as  keyof contactsType]}/>\r\n    })}\r\n    </div>\r\n\r\n    <div> <b>lookingForAJob</b>  {profile.lookingForAJob ? 'yes' : 'no'  }</div>\r\n    <div>{ profile.lookingForAJob &&\r\n    <div>\r\n        <b> My skills </b> -  {profile.lookingForAJobDescription}\r\n    </div>\r\n    }\r\n\r\n    </div>\r\n    </div>\r\n   )}\r\n\r\ntype ContactsPropsType = {\r\n    contactTitle: string\r\n    ContactValue: string\r\n}\r\nconst Contact: React.FC<ContactsPropsType> = ({contactTitle, ContactValue})=>{\r\n    return <div><b className={classes.info}>{contactTitle}</b>: {ContactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    new: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n    deletePost: ( id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    let deletePost = ()=>{\r\n        props.deletePost(props.id)\r\n    }\r\n\r\n  return < div>\r\n\r\n    <div className={classes.news}>\r\n\r\n      <div className={classes.newsName}>\r\n\r\n        <img src={props.avatar} className={classes.ava}  alt=\"Avatar\"/>\r\n        <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        {props.new}\r\n      </div>\r\n    <div>\r\n      <img src={props.picture} className={classes.picture}  alt=\"picture\"/>\r\n        <button onClick={deletePost}> delete post </button>\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport AddPostFormik from \"../../../components/AddPostForm/AddPostForm\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostsType} from \"../../../Types/Types\";\r\nimport {\r\n    savePhoto,\r\n} from \"../../../redux/profileReducer\";\r\n\r\n\r\n\r\nexport type MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n    deletePost: ( id: number) => void\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\nconst MyPosts: React.FC<PropsType> = (props)=> {\r\n\r\n\r\n\r\n\r\n    let postDate = props.posts.map(el => <Post key={el.id} id={el.id} new={el.post} time={el.time} avatar={el.avatar} user={el.user} picture={el.picture} deletePost={props.deletePost}/>)\r\n\r\n\r\n    return <div className={classes.MyPostsAll}>\r\n\r\n        <h1> My posts </h1>\r\n\r\n        <div className={classes.CreateNewPost}>\r\n            <h2>Create New Post </h2>\r\n        </div>\r\n        <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n\r\n        <div className={classes.posts}>\r\n            {postDate}\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import MyPosts, {MapStatePropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {actions} from \"../../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        posts: state.profile.posts\r\n    } as MapStatePropsType\r\n}\r\n// let mapDispatchToProps: ThunkType =(dispatch) => {\r\n//     return {\r\n//         addPostActionCreator: (newText: string, pic: string) => {\r\n//             dispatch(addPostActionCreator(newText, pic))\r\n//         },\r\n//         deletePost: (id: number) =>{\r\n//             dispatch(deletePost(id))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n let MyPostsContainer = connect(mapStateToProps, {...actions } )(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../Types/Types\";\r\nimport classes from './Profile.module.css'\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    return <div className={classes.all}>\r\n        <ProfileInfo  isError={props.isError}  saveProfile={props.saveProfile}  savePhoto={props.savePhoto} isOwner={props.isOwner}  profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk,\r\n    getStatusThunk,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatusThunk\r\n} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {compose} from \"redux\";\r\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {ProfileType} from \"../../Types/Types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null,\r\n    status: string\r\n    AuthorizedUserId: number | null\r\n    isAuth: boolean\r\n    isError: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfileThunk: (userId: number | null) => void\r\n    savePhoto: (file: File) => void\r\n    getStatusThunk: (userId: number) => void\r\n    updateStatusThunk: (status: string) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\ntype PropsType = MapStatePropsType  & MapDispatchPropsType  & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType>{\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.AuthorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfileThunk(userId as number)\r\n        this.props.getStatusThunk(userId as number)\r\n    }\r\n\r\n\r\ncomponentDidMount()\r\n{\r\n\r\n    this.refreshProfile()\r\n\r\n}\r\n\r\ncomponentDidUpdate(prevProps: PropsType, prevState: AppStateType)\r\n{\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n    }\r\n}\r\n\r\nrender()\r\n{\r\n    return (\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                 updateStatusThunk={this.props.updateStatusThunk}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 savePhoto={this.props.savePhoto}\r\n                 isError={this.props.isError}\r\n                 saveProfile={this.props.saveProfile}\r\n        />\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType  => {\r\n    return {\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    AuthorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isError: state.profile.isError\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfileThunk, savePhoto, getStatusThunk, updateStatusThunk, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import {getAuthType, instance, loginType, ThreeParamsType} from \"./api\";\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get<getAuthType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email: string, password: string, rememberMe=false, captcha: null | string = null){\r\n        return instance.post<loginType>('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logOut(){\r\n        return instance.delete<ThreeParamsType>('auth/login')\r\n    }\r\n\r\n}","import {instance} from \"./api\";\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}","import {ResultCodeEnum, ResultCodeWithCaptchaEnum} from \"../api/api\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\nimport {usersAPI} from \"../api/user-api\";\r\nconst SET_USER_DATE = 'AUTH/SET_USER_DATE';\r\nconst SET_USER_AVATAR = 'AUTH/SET_USER_AVATAR';\r\nconst SET_ERROR = 'AUTH/SET_ERROR';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'AUTH/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    userAva: null as string | null,\r\n    isError: false,\r\n    captchaUrl: null as string | null,\r\n}\r\n\r\nexport type initialStateType= typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATE:\r\n         return {\r\n                ...state,\r\n             ...action.data,\r\n\r\n            }\r\n\r\n        case SET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                userAva: action.userAva,\r\n\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: SET_USER_DATE,\r\n        data: {\r\n            userId, email, login, isAuth\r\n        }} as const) ,\r\n    setUserAvatar : (avatar: string | null)  => ({\r\n        type: SET_USER_AVATAR,\r\n        userAva: avatar\r\n    }as const),\r\n    setError: (Error: boolean) => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string | null) => ({\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        captchaUrl\r\n    }as const)\r\n}\r\n\r\n\r\nexport const getAuthThunk = (): ThunkType =>async (dispatch) =>{\r\n      let response = await authAPI.getAuth()\r\n                if(response.resultCode === ResultCodeEnum.Success) {\r\n                    let {id, email, login} = response.data\r\n                    dispatch(actions.setAuthUserData(id, email, login, true))\r\n                    usersAPI.getProfilePhoto()\r\n                        .then(response => {\r\n                            dispatch(actions.setUserAvatar(response.photos.small))\r\n                         })\r\n                }\r\n    }\r\n\r\nexport const loginThunk = (email: string, password: string, rememberMe: boolean, captcha: string | null): ThunkType =>async (dispatch) =>{\r\n\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                  await  dispatch(getAuthThunk())\r\n                    dispatch(actions.setError(false))\r\n                    dispatch(actions.getCaptchaUrlSuccess(null))\r\n                }\r\n                 else  {\r\n                    if (response.data.resultCode === ResultCodeWithCaptchaEnum.CaptchaIsRequired){\r\n                        await  dispatch(gerCaptchaUtl())\r\n                    }\r\n                       dispatch(actions.setError(true))\r\n                }\r\n}\r\n\r\nexport const logOutThunk = (): ThunkType =>async (dispatch) =>{\r\n    let response = await authAPI.logOut()\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                    dispatch(actions.setAuthUserData(null, null, null, false))\r\n                }\r\n}\r\nexport const gerCaptchaUtl = (): ThunkType =>async (dispatch) =>{\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n        dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer;","import {getAuthThunk} from \"./authReducer\";\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({\r\n        type: INITIALIZED_SUCCESS,\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const initialiseApp = () =>{\r\n    return (dispatch: any) =>{\r\n      let promise =  dispatch(getAuthThunk())\r\n        promise.then( ()=> {\r\n            dispatch(actions.initializedSuccess())\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer;","\r\nexport type bestfriendsType ={\r\n    id: number,\r\n    name: string,\r\n    avatar: string\r\n    surname: string\r\n}\r\n\r\nlet initialState = {\r\n        bestfriends: [\r\n            {\r\n                id: 1,\r\n                name: 'Геннадий',\r\n                avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                surname: 'Льянов'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Тимур',\r\n                surname: 'Льянов',\r\n                avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Никита',\r\n                surname: 'кесырев',\r\n                avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album'\r\n            }\r\n        ] as Array<bestfriendsType>\r\n\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nconst sideBarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default sideBarReducer;","\r\n\r\nconst subscribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\n\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubsAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\n\r\nconst onMessageHandler = (e: MessageEvent)=> {\r\n    const newMessage = JSON.parse(e.data)\r\n    subscribers['messages-received'].forEach(s => s(newMessage))\r\n};\r\nconst openHandler = ()=> {\r\n    notifySubsAboutStatus('ready')\r\n};\r\nconst errorHandler = ()=> {\r\n    notifySubsAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n};\r\n\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', onMessageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\n\r\nconst notifySubsAboutStatus = (status: StatusType) => {\r\n    subscribers[\"status-changed\"].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n        ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubsAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', onMessageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\n\r\nexport const chatApi = {\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType |  StatusChangedSubscriberType) {\r\n        //@ts-ignore\r\n        subscribers[eventName].push(callback)\r\n        return () => {\r\n            //@ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    // тоже самое, что и ретурнит субскрайб, просто другой вариант\r\n    unSubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        //@ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n       ws?.send(message)\r\n    },\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop () {\r\n        subscribers['messages-received'] = []\r\n        subscribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type ChatMessageAPIType = {\r\n    userId: number,\r\n    userName: string,\r\n    message: string,\r\n    photo: string\r\n}\r\n\r\nexport type StatusType = 'pending' | 'ready' | 'error'\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void","import {v1} from 'uuid'\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {chatApi, ChatMessageAPIType, StatusType} from \"../api/chat-api\"\r\nimport {Dispatch} from \"redux\";\r\nconst SET_RECEIVED = 'CHAT/SET_RECEIVED';\r\nconst STATUS_CHANGED = 'CHAT/STATUS_CHANGED';\r\n\r\ntype ChatMessageType = ChatMessageAPIType & {id: string}\r\n\r\nlet initialState = {\r\n   messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n}\r\n\r\nexport type initialStateType= typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nconst chatReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_RECEIVED:\r\n\r\n         return {\r\n                ...state,\r\n            messages: [...state.messages, ...action.payload.messages.map(m => ({...m, id: v1() }))]\r\n                .filter((m, index, array) =>  index >= array.length - 100)\r\n            }\r\n        case STATUS_CHANGED:\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    messagesReceivedAC: (messages: ChatMessageAPIType[]) => ({\r\n        type: SET_RECEIVED,\r\n        payload: {messages}\r\n    }as const),\r\n    statusChanged: (status: StatusType) => ({\r\n        type: STATUS_CHANGED,\r\n        payload: {status}\r\n    }as const),\r\n\r\n}\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\nconst newMessageHandlerCreator= (dispatch: Dispatch) =>  {\r\n    if(_newMessageHandler === null) {\r\n        _newMessageHandler = (messages)=> {\r\n            dispatch(actions.messagesReceivedAC(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator= (dispatch: Dispatch) =>  {\r\n    if(_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status)=> {\r\n            dispatch(actions.statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesThunk = (): ThunkType =>async (dispatch) =>{\r\n    chatApi.start()\r\n    chatApi.subscribe('messages-received'  ,newMessageHandlerCreator(dispatch))\r\n    chatApi.subscribe('status-changed'  ,statusChangedHandlerCreator(dispatch))\r\n}\r\nexport const stopMessagesThunk = (): ThunkType =>async (dispatch) =>{\r\n    chatApi.unSubscribe('messages-received' , newMessageHandlerCreator(dispatch))\r\n    chatApi.unSubscribe('status-changed'  ,statusChangedHandlerCreator(dispatch))\r\n    chatApi.stop()\r\n}\r\nexport const sendMessageThunk = (message: string): ThunkType =>async (dispatch) =>{\r\n    chatApi.sendMessage(message)\r\n}\r\n\r\nexport default chatReducer;","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const filmAPI = {\r\n    getFilms(currentPage =1) {\r\n        return axios.get(`https://yts.mx/api/v2/list_movies.json?page=${currentPage}`).then(res=>res.data.data.movies)\r\n    },\r\n\r\n}","import {InferActionsTypes} from \"./reduxStore\";\r\nimport {filmAPI} from \"../api/film-api\";\r\nconst SET_CURRENT_PAGE = 'FILMS/SET_CURRENT_PAGE'\r\nconst ADD_FILM = 'FILMS/ADD_FILM';\r\nconst DELETE_FILM = 'FILMS/DELETE_FILM'\r\nconst LIKE_FILM = 'FILMS/LIKE_FILM'\r\nconst DISLIKE_FILM = 'FILMS/DISLIKE_FILM'\r\n\r\nexport type FilmType ={\r\n    background_image: string\r\n    background_image_original: string\r\n    date_uploaded: string\r\n    date_uploaded_unix: number\r\n    description_full: string\r\n    genres: Array<string>\r\n    id: number\r\n    imdb_code: string\r\n    language: string\r\n    large_cover_image: string\r\n    medium_cover_image: string\r\n    mpa_rating: string\r\n    rating: number\r\n    runtime: number\r\n    slug: string\r\n    small_cover_image:string\r\n    state: string\r\n    summary: string\r\n    synopsis: string\r\n    title: string\r\n    title_english: string\r\n    title_long: string\r\n    torrents: any\r\nurl: string\r\nyear: number\r\nyt_trailer_code: string\r\n    like?: boolean\r\n}\r\n\r\n\r\nlet initialState = {\r\n    films: [] as Array<FilmType> | any,\r\n    isLoading: true,\r\n    currentPage: 1\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst filmReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_FILM:\r\n            return {...state, films: action.films, isLoading: false}\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        case DELETE_FILM: {\r\n            return {...state, films: state.films.filter((item: FilmType) => item.id !== action.idToRemove)}\r\n        }\r\n        case LIKE_FILM: {\r\n            let stateCopy = {...state}\r\n            stateCopy.films = [...state.films]\r\n            state.films.map((item: FilmType) => {\r\n                if ( item.id === action.id)\r\n                {\r\n                    item.like = true\r\n                    return item\r\n                }return item})\r\n                return stateCopy\r\n\r\n\r\n        }\r\n        case DISLIKE_FILM: {\r\n            return {...state, films: state.films.filter((item: FilmType) => {\r\n                if ( item.id === action.id){\r\n                    item.like = false\r\n                    return item\r\n                }return item\r\n                })}\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getFilmsThunkCreater = (pageNumber: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(actions.setCurrentPage(pageNumber))\r\n        const response = await filmAPI.getFilms(pageNumber)\r\n        const response2 = response.map( (obj: FilmType) => {\r\n            obj.like = false;\r\n            return obj;\r\n        })\r\n        await dispatch(actions.allFilms(response2))\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport const actions = {\r\n    allFilms: (films: Array<FilmType>)  => ({\r\n        type: ADD_FILM,\r\n        films,\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n    deleteFilm: (idToRemove: number) => ({\r\n        type: DELETE_FILM,\r\n        idToRemove\r\n    }as const),\r\n    likeFilm: (id: number) => ({\r\n        type: LIKE_FILM,\r\n        id\r\n    }as const),\r\n    dislikeFilm: (id: number) => ({\r\n        type: DISLIKE_FILM,\r\n        id\r\n    }as const),\r\n}\r\n\r\n\r\nexport default filmReducer;","\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\n\r\nconst UPDATE_NEW_LOGIN_TEXT = 'MAINTEST/UPDATE_NEW_LOGIN_TEXT';\r\nconst UPDATE_NEW_PASSWORD_TEXT = 'MAINTEST/UPDATE_NEW_PASSWORD_TEXT';\r\nconst IS_DISABLED = 'MAINTEST/IS_DISABLED';\r\nconst NEED_REDIRECT = 'MAINTEST/NEED_REDIRECT';\r\n\r\nlet initialState = {\r\n    newLogintext: \"\",\r\n    newPasswordtext: \"\",\r\n    isDisabled: true,\r\n    needRedirect: false,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst mainTestReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case UPDATE_NEW_LOGIN_TEXT:\r\n            return  {...state,\r\n                newLogintext: action.newText\r\n            }\r\n        case UPDATE_NEW_PASSWORD_TEXT:\r\n            return  {...state,\r\n                newPasswordtext: action.newText\r\n            }\r\n        case IS_DISABLED:\r\n            return  {...state,\r\n                isDisabled: false\r\n            }\r\n        case NEED_REDIRECT:\r\n            return  {...state,\r\n                needRedirect: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    loginOnChangeActionCreator: (text: string) => ({\r\n        type: UPDATE_NEW_LOGIN_TEXT,\r\n        newText: text,\r\n    } as const ),\r\n    passwordOnChangeActionCreator: (text: string) => ({\r\n    type: UPDATE_NEW_PASSWORD_TEXT,\r\n    newText: text\r\n    } as const),\r\n    isDisabledAC: () => ({\r\n        type: IS_DISABLED,\r\n    } as const),\r\n    needRedirectAC: () => ({\r\n        type: NEED_REDIRECT,\r\n    } as const)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default mainTestReducer;","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const booksAPI = {\r\n    getBooks(smth = 'javascript') {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${smth}`).then(res=>res.data.items)\r\n    },\r\n}","import {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {booksAPI} from \"../api/books-api\";\r\n\r\n\r\nconst NEW_SEARCH = 'BOOKS/NEW_SEARCH'\r\nconst ADD_BOOKS = 'BOOKS/ADD_BOOKS';\r\nconst NEW_SORT = 'BOoKS/NEW_SORT'\r\n\r\n\r\nlet initialState = {\r\n    books: [] as Array<any>,\r\n    searchField: '',\r\n    sort: ''\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\n\r\nconst booksReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_BOOKS:\r\n            // @ts-ignore\r\n            return {...state, books: action.data,}\r\n        case NEW_SEARCH:\r\n            return {...state, searchField: action.text,}\r\n        case NEW_SORT:\r\n            return {...state, sort: action.text,}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst ccleaner = (data: any) => {\r\n    const cleanedData = data.map((book: any) => {\r\n        if (!book.volumeInfo.hasOwnProperty('publishedDate')) {\r\n            book.volumeInfo['publishedDate'] = '0000'\r\n        } else if (!book.volumeInfo.hasOwnProperty('imageLinks')) {\r\n            book.volumeInfo['imageLinks'] = {thumbnail: 'https://img3.akspic.ru/originals/2/8/8/7/4/147882-poni-rozovyj-liniya-kartinka-televideniye-750x1334.jpg'}\r\n        }\r\n        return book;\r\n    })\r\n    return cleanedData\r\n}\r\n\r\nexport const getBooksThunkCreater = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await booksAPI.getBooks()\r\n        let cleanBooks = ccleaner(data)\r\n        dispatch(actions.addBooks(cleanBooks))\r\n    }\r\n}\r\n\r\nexport const searchBookThunkCreater = (searchField: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await booksAPI.getBooks(searchField)\r\n        let cleanBooks = ccleaner(data)\r\n        dispatch(actions.addBooks(cleanBooks))\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addBooks: (data: Array<any>) => ({\r\n        type: ADD_BOOKS,\r\n        data,\r\n    } as const),\r\n    handleSearchAC: (text: string) => ({\r\n        type: NEW_SEARCH,\r\n        text\r\n    } as const),\r\n    handleSort: (text: string) => ({\r\n        type: NEW_SORT,\r\n        text\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default booksReducer;","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const animeAPI = {\r\n    getAnimes(currentPage =1, smth: string) {\r\n        if(smth === \"\"){\r\n            smth =\"tokyo\"\r\n        }\r\n        currentPage = currentPage -1\r\n        console.log(currentPage)\r\n        return axios.get(`https://kitsu.io/api/edge/anime?page[limit]=10&page[offset]=${currentPage*10}&filter[text]=${smth}`).then(res=>res.data.data)\r\n    },\r\n}","import {InferActionsTypes} from \"./reduxStore\";\r\nimport {animeAPI} from \"../api/anime-api\";\r\nconst ADD_ANIME = 'ANIME/ADD_ANIME';\r\nconst ADD_ANIMES = 'ANIME/ADD_ANIMES';\r\nconst DELETE_ANIME = 'ANIME/DELETE_ANIME'\r\nconst LIKE_ANIME = 'ANIME/LIKE_ANIME'\r\nconst DISLIKE_ANIME = 'ANIME/DISLIKE_ANIME'\r\nconst NEW_SEARCH = 'ANIME/NEW_SEARCH'\r\nconst SET_CURRENT_PAGE = 'ANIME/SET_CURRENT_PAGE'\r\n\r\nexport type AnimesType ={\r\n    attributes: {\r\n        posterImage: {\r\n            large: string\r\n        } | null,\r\n        description: string,\r\n\r\n        popularityRank: number,\r\n        titles: {\r\n            en: string\r\n        }\r\n        episodeCount: number,\r\n        startDate: string,\r\n        status: string\r\n    },\r\n    id: number,\r\n    like: boolean,\r\n    type: string\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n    animes: [] as Array<AnimesType> | any,\r\n    isLoading: true,\r\n    searchField: '',\r\n    currentPage: 1\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst animeReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_ANIME:\r\n            return {...state, animes: action.animes, isLoading: false}\r\n        case DELETE_ANIME: {\r\n            return {...state, animes: state.animes.filter((item: AnimesType) => item.id !== action.idToRemove)}\r\n        }\r\n        case LIKE_ANIME: {\r\n            let stateCopy = {...state}\r\n            stateCopy.animes = [...state.animes]\r\n            state.animes.map((item: AnimesType) => {\r\n                if ( item.id === action.id)\r\n                {\r\n                    item.like = true\r\n                    return item\r\n                }return item})\r\n                return stateCopy\r\n        }\r\n        case DISLIKE_ANIME: {\r\n            return {...state, animes: state.animes.filter((item: AnimesType) => {\r\n                if ( item.id === action.id){\r\n                    item.like = false\r\n                    return item\r\n                }return item\r\n                })}\r\n\r\n        }\r\n        case ADD_ANIMES:\r\n\r\n            return {...state, animes: action.data,}\r\n        case NEW_SEARCH:\r\n            return {...state, searchField: action.text,}\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getAnimesThunkCreater = (pageNumber: number, searchField: string) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(actions.setCurrentPage(pageNumber))\r\n        const response = await animeAPI.getAnimes(pageNumber, searchField)\r\n        await dispatch(actions.allAnimes(response))\r\n        }\r\n    }\r\n\r\n// export const searchAnimeThunkCreater = (searchField: string) => {\r\n//     return async (dispatch: any) => {\r\n//         let data = await animeAPI.getExactAnime(searchField)\r\n//         dispatch(actions.addAnimes(data))\r\n//     }\r\n// }\r\n\r\n\r\nexport const actions = {\r\n    allAnimes: (animes: Array<AnimesType>)  => ({\r\n        type: ADD_ANIME,\r\n        animes,\r\n    } as const),\r\n\r\n    deleteAnime: (idToRemove: number) => ({\r\n        type: DELETE_ANIME,\r\n        idToRemove\r\n    }as const),\r\n    likeAnime: (id: number) => ({\r\n        type: LIKE_ANIME,\r\n        id\r\n    }as const),\r\n    dislikeAnime: (id: number) => ({\r\n        type: DISLIKE_ANIME,\r\n        id\r\n    }as const),\r\n    addAnimes: (data: Array<AnimesType>) => ({\r\n        type: ADD_ANIMES,\r\n        data,\r\n    } as const),\r\n    handleSearchAC: (text: string) => ({\r\n        type: NEW_SEARCH,\r\n        text\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n}\r\n\r\n\r\nexport default animeReducer;","import {applyMiddleware, combineReducers, createStore, compose, Action} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport musicReducer from \"./musicReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport sideBarReducer from \"./sideBarReducer\";\r\nimport newsReducer from \"./newsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport appReducer from \"./appReducer\";\r\nimport chatReducer from \"./chatReducer\";\r\nimport filmReducer from \"./filmReducer\";\r\nimport mainTestReducer from \"./mainTest\";\r\nimport booksReducer from './books'\r\nimport animeReducer from \"./animeReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    dialogs: dialogReducer,\r\n    musics: musicReducer,\r\n    friends: friendsReducer,\r\n    news: newsReducer,\r\n    sideBar: sideBarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    chat: chatReducer,\r\n    film: filmReducer,\r\n    book: booksReducer,\r\n    anime: animeReducer,\r\n\r\n\r\n    maintest: mainTestReducer\r\n})\r\n\r\ntype RootReducersType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\nexport type BaseThunkType <A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store\r\n\r\n","import React from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"./Login.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginThunk} from \"../../redux/authReducer\";\r\n\r\ntype MyFormValues = {\r\n    email: string\r\n    password: string\r\n    checkbox: boolean\r\n    captcha: string | null\r\n}\r\nconst initialValues: MyFormValues = {\r\n    email: '',\r\n    password: '',\r\n    checkbox: false,\r\n    captcha: ''\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    password: Yup.string().required('Required!'),\r\n    email: Yup.string()\r\n        .email('Invalid email format')\r\n        .required('Required'),\r\n\r\n})\r\ntype PropsType = {\r\n    captchaUrl: string | null\r\n    isError: boolean\r\n}\r\nexport const LoginFormAuth: React.FC<PropsType>  = (props)=> {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (values: {email: string,password: string, checkbox: boolean, captcha: string | null }) =>{\r\n        dispatch(loginThunk(values.email, values.password, values.checkbox, values.captcha))\r\n    }\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Form>\r\n                <div>\r\n                    <Field placeholder={'login'} type='text' id='email' name='email' className={classes.field}/>\r\n                    <ErrorMessage name='email' />\r\n                </div>\r\n                <div>\r\n                    <Field placeholder={'password'} type='text' id='password' name='password' className={classes.field}/>\r\n                    <ErrorMessage name='password'/>\r\n                </div>\r\n                <div>{props.isError ? <span className={classes.error}> Wrong Email or Password or Captcha </span> : null} </div>\r\n                <div>\r\n                    <Field type={'checkbox'} name='checkbox' className={classes.field}/>\r\n                </div>\r\n                {props.captchaUrl && <img src={props.captchaUrl} alt={'captcha'}/>}\r\n                {props.captchaUrl && <Field placeholder={'captcha'} type='text' name='captcha' className={classes.field}/>}\r\n\r\n                <button type='submit' className={classes.button}> Submit </button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport classes from './Login.module.css'\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {LoginFormAuth} from \"./LoginFormAuth\";\n\n\n\n\n\n\n\nexport const Login: React.FC= (props) => {\n    const captchaUrl = useSelector((state: AppStateType )=> state.auth.captchaUrl)\n    const isError = useSelector((state: AppStateType )=> state.auth.isError)\n    const isAuth = useSelector((state: AppStateType )=> state.auth.isAuth)\n\n\n\n    if(isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n    return <div className={classes.All}>\n        <h3> Login </h3>\n        <LoginFormAuth isError={isError} captchaUrl={captchaUrl} />\n    </div>\n}\n\n\n\n","import React, {useEffect} from 'react';\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {logOutThunk} from \"../../redux/authReducer\";\r\nimport {Button} from \"antd\";\r\nimport {getOwnerAva} from \"../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\nexport const HeaderComponent: React.FC = (props) => {\r\n\r\n  const isAuth = useSelector((state: AppStateType)=> state.auth.isAuth)\r\n  const login = useSelector((state: AppStateType)=> state.auth.login)\r\n const avatar = useSelector((state: AppStateType) => state.profile.photo)\r\n    const profile = useSelector((state: AppStateType) => state.profile.profile)\r\n  const dispatch = useDispatch()\r\n\r\n    useEffect( () => {\r\n        dispatch(getOwnerAva(18579))\r\n    }, [profile])\r\n\r\n  return <header className={classes.header} >\r\n\r\n\r\n      <span className={classes.loginBlock}>\r\n       {isAuth? <span>\r\n           <NavLink to=\"/profile\" className={classes.signIn}>{login}</NavLink>\r\n       <Button className={classes.button1} onClick={() => dispatch(logOutThunk())}> Logout</Button>\r\n\r\n          <img alt={'ava'} src={avatar===null ? 'null' : avatar} className={classes.userAvatar}/> </span> : <NavLink className={classes.signIn} to={'/login'}>Sign in</NavLink>}\r\n\r\n   </span>\r\n  </header>\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport classes from './ChatPage.module.css'\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessageThunk, startMessagesThunk, stopMessagesThunk} from \"../../redux/chatReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {ChatMessageAPIType} from \"../../api/chat-api\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const ChatPage: React.FC =() => {\r\n\r\n    return <div className={classes.all}>\r\n    <Chat />\r\n    </div>\r\n\r\n\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n      const dispatch =  useDispatch()\r\n\r\n\r\n        const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    useEffect( () => {\r\n        dispatch(startMessagesThunk())\r\n        return () => {\r\n            dispatch(stopMessagesThunk())\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return <div>\r\n        {status === 'error' && <div> ERROR. PLS REFRESH PAGE</div> }\r\n           <>\r\n               <Messages/>\r\n               <AddMassageForm  />\r\n           </>\r\n\r\n    </div>\r\n}\r\n\r\nconst Messages: React.FC= () => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [autoScrollIsActive, SetAutoScrollIsActive] = useState(false)\r\n\r\n    const scrollHandled = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n            const element = e.currentTarget\r\n        if( Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300)\r\n        {\r\n           !autoScrollIsActive && SetAutoScrollIsActive(true)\r\n        } else {\r\n            autoScrollIsActive && SetAutoScrollIsActive(false)\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(autoScrollIsActive) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n    }, [messages])\r\n\r\n\r\n    return <div className={classes.messages} onScroll={scrollHandled}>\r\n        {messages.map((u, index) => <Message key={u.id} message={u} />)}\r\n        <div ref={messagesAnchorRef}> </div>\r\n    </div>\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n\r\n    return <div>\r\n        <img className={classes.ava} src={message.photo===null ? 'https://sun1-15.userapi.com/s/v1/if1/a8Ep8gIxK5zIt7COi4LUocGkvkP54fNVSUy930nxS75fGdWGjq5XwuFHwV65qOC_F2WD7Xna.jpg?size=200x200&quality=96&crop=0,0,1024,1024&ava=1'\r\n        : message.photo } alt={'ava'}/>  <b> {message.userName} </b>\r\n        <br />\r\n        <b> {message.message}</b>\r\n        <hr />\r\n    </div>\r\n})\r\n\r\nconst AddMassageForm: React.FC= () => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    const onKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>): void => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const sendMessage = () =>{\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessageThunk(message))\r\n        setMessage('')\r\n    }\r\n\r\n     return <div>\r\n         <div>\r\n             <textarea onKeyDown={onKeyDown} onChange={(e) => setMessage(e.target.value)} value={message}/>\r\n         </div>\r\n         <div>\r\n             <button disabled={status !== 'ready'} onClick={sendMessage} > send </button>\r\n         </div>\r\n     </div>\r\n}","import React from \"react\";\r\nimport classes from '../Weather.module.css'\r\n\r\n\r\nexport function Loading () {\r\n    return (<div >\r\n        <span className={classes.loading}>Loading...</span>\r\n    </div>)\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport classes from '../Weather.module.css'\r\n\r\n\r\ntype weatherOptionsType = {\r\n    iconName: string\r\n    title: string,\r\n    subTitle: string\r\n    gradient?: [string, string, string?]\r\n}\r\n\r\n\r\nexport const weatherOptions = {\r\n    Rain: {\r\n        iconName: '☔',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'На улице дождь',\r\n        subTitle: 'Не забудьте зонтик'\r\n    } as weatherOptionsType,\r\n    Snow: {\r\n        iconName: '❄',\r\n        // iconName: 'snowflake',\r\n        gradient: ['#83a4d4', '#b6fbff'],\r\n        title: 'Идет снег',\r\n        subTitle: 'Оденься потеплее'\r\n    } as weatherOptionsType,\r\n    Drizzle: {\r\n        iconName: '🌧',\r\n        // iconName: 'weather-rainy',\r\n        gradient: ['#3A7BD5', '#3A6073'],\r\n        title: 'Моросит слегка',\r\n        subTitle: 'Не заболей'\r\n    } as weatherOptionsType,\r\n    Thunderstorm: {\r\n        iconName: '🌩',\r\n        // iconName: 'weather-lightning',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Сейчас гроза',\r\n        subTitle: 'На улицу не ходи'\r\n    } as weatherOptionsType,\r\n    Dust: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-windy-variant',\r\n        gradient: ['#B79891', '#947168'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Mist: {\r\n        iconName: '💨',\r\n        //  conName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Очень туманно',\r\n        subTitle: 'Прям как в Англии'\r\n    } as weatherOptionsType,\r\n    Smoke: {\r\n        iconName: '💨',\r\n        // iconName: 'weather-windy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Почти туман',\r\n        subTitle: 'Но не туман'\r\n    } as weatherOptionsType,\r\n    Haze: {\r\n        iconName: '💨',\r\n        //iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Почти туман',\r\n        subTitle: 'Но не туман'\r\n    } as weatherOptionsType,\r\n    Sand: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-hazy',\r\n        gradient: ['#3E5151', '#DECBA4'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Ash: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Squall: {\r\n        iconName: '💨',\r\n        //   iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'На улице шквал',\r\n        subTitle: 'Не ходи'\r\n    } as weatherOptionsType,\r\n    Tornado: {\r\n        iconName: '🌪',\r\n        //   iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Бушует торнадо',\r\n        subTitle: 'Сиди дома'\r\n    } as weatherOptionsType,\r\n    Clear: {\r\n        iconName: '🌈',\r\n        //    iconName: 'weather-sunny',\r\n        gradient: ['#56CCF2', '#2F80ED'],\r\n        title: 'Погода супер',\r\n        subTitle: 'Сходи, погоняй мяч'\r\n    } as weatherOptionsType,\r\n    Clouds: {\r\n        iconName: '⛅',\r\n        //    iconName: 'weather-cloudy',\r\n        gradient: ['#757F9A', '#D7DDE8'],\r\n        title: 'Облачно',\r\n        subTitle: 'Гулять можно'\r\n    } as weatherOptionsType,\r\n\r\n}\r\n\r\ntype WeatherType = {\r\n    temp: number,\r\n    condition: keyof typeof weatherOptions;\r\n}\r\n\r\nexport const Weather: React.FC<WeatherType> = ({temp, condition}) => {\r\n\r\n    return (<div className={classes.halfContainer} style={{ backgroundImage: `linear-gradient(to right, ${weatherOptions[condition].gradient})`, }}>\r\n            <div className={classes.temp}>  {weatherOptions[condition].iconName}</div>\r\n            <div className={classes.temp}> {temp}° </div>\r\n            <div className={classes.title}> {weatherOptions[condition].title} </div>\r\n            <div className={classes.subTitle}> {weatherOptions[condition].subTitle} </div>\r\n            <div className={classes.close}> спрятать </div>\r\n        </div>\r\n  )\r\n}\r\n\r\n // Weather.propTypes = {\r\n //    temp: PropTypes.number.isRequired,\r\n //    condition: PropTypes.oneOf(['Thunderstorm', 'Drizzle', 'Rain',\r\n //         'Snow', 'Dust', 'Mist','Smoke',\r\n //         'Haze', 'Fog', 'Sand',\r\n //         'Ash', 'Squall', 'Tornado',\r\n //         'Clear', 'Clouds']).isRequired }\r\n\r\n","\r\nimport axios from \"axios\";\r\nconst API_KEY = '979ab0a1c46cbdc9cb27c613e41479b4'\r\n\r\nexport const weatherAPI = {\r\n    getWeather(latitude: number, longitude: number ) {\r\n        return axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`)\r\n    },\r\n\r\n}","import React, {useEffect, useState} from 'react';\nimport {Loading} from \"./Loading/Loading\";\nimport {Weather, weatherOptions} from \"./Weather/Weather\";\nimport {weatherAPI} from \"../../api/weather-api\";\n\n\n\n\nexport const WeatherContainer : React.FC =()=>{\n\n\n    let [isLoading, setIsLoading] = useState(true)\n    let [temp, setTemp] = useState(1)\n    let [condition, setCondition] = useState('' as  keyof typeof weatherOptions)\n\n    let gerPosition = async (pos: any) => {\n        let crd = pos.coords;\n     await getWeather(crd.latitude, crd.longitude)\n    }\n\n\n let getWeather = async (latitude: number, longitude: number) => {\n\n      const {data: {main: {temp}, weather}} = await weatherAPI.getWeather(latitude, longitude)\n      setTemp(temp)\n     setCondition( weather[0].main as  keyof typeof weatherOptions)\n     setIsLoading(false)\n  }\n\n\n   const getLocation = async () => {\n\n        try{\n            await navigator.geolocation.getCurrentPosition(gerPosition);\n        } catch (error) {\n           alert(\"can't detect location\")\n        }\n    }\n\n useEffect( () => {\n    getLocation()\n }, [])\n\n\n    return (\n    isLoading ? <Loading/> : <Weather temp={Math.round(temp)} condition={condition} />\n    )\n}\n\n","import React from 'react';\r\nimport classes from \"./Films.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/filmReducer\";\r\n\r\n\r\n\r\n\r\n\r\ntype propsType ={\r\n    key: number,\r\n    name: string,\r\n    large_cover_image: string,\r\n    description: string,\r\n    genres: Array<string>,\r\n    rating: number,\r\n    id: number,\r\n    like: boolean | undefined\r\n}\r\n\r\nconst EachFilm: React.FC<propsType> = (props) => {\r\n\r\n    let d = null\r\n\r\n    if(props.genres !== undefined){\r\n        d = props.genres.map(p=> <div>\r\n            •{p}\r\n        </div>)\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const deletePost = (id: number) =>{\r\n        dispatch(actions.deleteFilm(id))\r\n\r\n    }\r\n    const likeFilm = (id: number) =>{\r\n        dispatch(actions.likeFilm(id))\r\n    }\r\n    const  dislikeFilm = (id: number) =>{\r\n        dispatch(actions.dislikeFilm(id))\r\n    }\r\n\r\n    return <div className={classes.eachFilm} >\r\n          <div>\r\n              <img alt={'sorry image not found'} src={props.large_cover_image} className={classes.png}/>\r\n          </div>\r\n       <div>\r\n\r\n                 <h2> {props.name} {props.like && <span> 🧡 </span>} <span className={classes.rating}> {props.rating} / 10 </span>  </h2>\r\n\r\n\r\n           <h4> {props.description}</h4>\r\n           <h3 className={classes.des}> {d}</h3>\r\n           { !props.like && <button onClick={()=> likeFilm(props.id)} className={classes.like}> like </button> }\r\n           { props.like && <button onClick={()=> dislikeFilm(props.id)} className={classes.dislike}> dislike </button> }\r\n           <button onClick={()=> deletePost(props.id)} className={classes.delete}> delete </button>\r\n       </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default EachFilm;","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FilmType, getFilmsThunkCreater} from \"../../redux/filmReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport EachFilm from \"./eachFilm\";\r\nimport Paginator from \"../../components/Paginator/Paginator\";\r\nimport classes from \"./Films.module.css\";\r\n\r\n\r\nexport const Films: React.FC = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getFilmsThunkCreater(pageNumber))\r\n    }\r\n\r\n    //TODO\r\n    const {currentPage, films} = useSelector((state: AppStateType) => state.film)\r\n\r\n\r\n\r\n    let filmsElements = films.map((el: FilmType) => <EachFilm rating={el.rating} genres={el.genres}\r\n                                                              description={el.description_full}\r\n                                                              large_cover_image={el.large_cover_image}\r\n                                                              key={el.id} id={el.id} name={el.title} like={el.like}/>)\r\n\r\n\r\n\r\n\r\n    return (<div className={classes.all}>\r\n            <div className={classes.paginator}>\r\n                <Paginator currentPage={currentPage}\r\n                           totalItemsCount={2131}\r\n                           pageSize={20}\r\n                           onPageChanged={onPageChanged}\r\n                           portionSize={10}/>\r\n            </div>\r\n            <div>\r\n                {filmsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {getFilmsThunkCreater} from \"../../redux/filmReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {Loading} from \"../Weather/Loading/Loading\";\nimport {Films} from \"./Films\";\n\n\n\n\nexport const FilmsContainer : React.FC =() => {\n\nconst dispatch = useDispatch()\n\n  useEffect( () => {\n      dispatch(getFilmsThunkCreater(1))\n }, [])\n\n    const isLoading = useSelector((state: AppStateType) => state.film.isLoading)\n\n\n    return (\n    <div>\n        {isLoading ? <Loading/> : <Films/>}\n    </div>\n    )\n}\n\n","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./mainAndProfilePages.module.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {actions} from \"../../redux/mainTest\";\r\n\r\n\r\nexport const MainPage: React.FC = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        newLogintext,\r\n        newPasswordtext,\r\n        isDisabled,\r\n        needRedirect\r\n    } = useSelector((state: AppStateType) => state.maintest)\r\n\r\n\r\n    let loginOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(actions.loginOnChangeActionCreator(e.currentTarget.value))\r\n        disabledChanger(e.currentTarget.value, newPasswordtext)\r\n    }\r\n    let passwordOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(actions.passwordOnChangeActionCreator(e.currentTarget.value))\r\n        disabledChanger(newLogintext, e.currentTarget.value)\r\n    }\r\n    let disabledChanger = (login: string, pass: string) => {\r\n        if (login === 'developer21' && pass === '123456') {\r\n            dispatch(actions.isDisabledAC())\r\n        }\r\n    }\r\n\r\n\r\n    const login = () => {\r\n        dispatch(actions.needRedirectAC())\r\n    }\r\n\r\n    return <div>\r\n        {needRedirect && <Redirect to='/profiletest'/>}\r\n        <div className={classes.input}>\r\n            <input value={newLogintext}\r\n                   onChange={loginOnChange}/>\r\n        </div>\r\n        <div className={classes.input}>\r\n            <input value={newPasswordtext}\r\n                   onChange={passwordOnChange}/>\r\n        </div>\r\n        <button disabled={isDisabled} onClick={login} className={classes.button}> Log in</button>\r\n\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport classes from \"./mainAndProfilePages.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\nexport const ProfilePage: React.FC= (props) => {\r\n\r\n    const login = useSelector((state: AppStateType) => state.maintest.newLogintext)\r\n\r\n\r\n    return <div className={classes.All}>\r\n\r\n        <h1> {login} </h1>\r\n\r\n    </div>\r\n}","import React from \"react\";\r\nimport classes from './books.module.css'\r\n\r\nconst Search = (props) => {\r\n    return (<form action='' onSubmit={props.searchBook} className={classes.form} >\r\n        <input type='text' onChange={props.handleSearch}/>\r\n        <button type='submit'>\r\n            Search\r\n        </button>\r\n        <select defaultValue='Sort' onChange={props.handleSort}>\r\n            <option disabled value=\"Sort\">Sort</option>\r\n            <option value=\"Newest\"> Newest</option>\r\n            <option value=\"Oldest\"> Oldest </option>\r\n        </select>\r\n    </form>)\r\n}\r\n\r\nexport default Search","import React from \"react\";\r\nimport classes from './books.module.css'\r\n\r\n\r\nconst BookCard = (props) => {\r\n    return (<div className={classes.eachBook}>\r\n        <div> <img src={props.image} alt='a' className={classes.ava}/></div>\r\n        <div className={classes.info}>\r\n            <h2  >\r\n                {props.title}\r\n            </h2>\r\n            <h3  >\r\n              Author:  {props.author}\r\n            </h3>\r\n            <p >\r\n              Published data:  {props.published === '0000' ? 'Not available' : props.published.substring(0, 4)}\r\n            </p>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default BookCard","import React from \"react\";\r\nimport BookCard from \"./BookCard\";\r\nimport classes from \"./books.module.css\";\r\n\r\nconst BookList = (props) => {\r\n\r\n    return (<div>\r\n        {\r\n            props.books.map( (book, i) => {\r\n                return <span className={classes.fullAll}>\r\n                    <BookCard\r\n                        key={i}\r\n                        image={book.volumeInfo.imageLinks.thumbnail}\r\n                        title={book.volumeInfo.title}\r\n                        author={book.volumeInfo.publisher}\r\n                        published={book.volumeInfo.publishedDate}\r\n                    />\r\n                </span>\r\n            })\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default BookList","import React, {useEffect} from \"react\";\r\nimport Search from \"./Search\";\r\nimport BookList from \"./BookList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actions, getBooksThunkCreater, searchBookThunkCreater} from \"../../redux/books\";\r\nimport classes from './books.module.css'\r\n\r\n\r\n\r\n const Books = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {books, searchField, sort} = useSelector((state) => state.book)\r\n\r\n    useEffect( () => {\r\n        dispatch(getBooksThunkCreater())\r\n    }, [])\r\n\r\n\r\n\r\n    const searchBook = async (e) => {\r\n        e.preventDefault()\r\n        dispatch(searchBookThunkCreater(searchField))\r\n\r\n\r\n    }\r\n    const handleSearch = (e) => {\r\n        dispatch(actions.handleSearchAC(e.target.value))\r\n\r\n    }\r\n    const handleSort = (e) => {\r\n        dispatch(actions.handleSort(e.target.value))\r\n\r\n    }\r\n\r\n\r\n\r\n    const sortedBooks = books.sort((a, b) => {\r\n        if (sort === 'Newest') {\r\n            return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4))\r\n        } else if (sort === 'Oldest') {\r\n            return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={classes.all}>\r\n            <Search searchBook={searchBook} handleSearch={handleSearch} handleSort={handleSort}/>\r\n            <BookList books={sortedBooks}/>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Books\r\n\r\n","import React from 'react';\r\nimport classes from \"./Anime.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/animeReducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype propsType ={\r\n    popularityRank: number\r\n    description: string\r\n    posterImage: string\r\n    key: number\r\n    id: number\r\n    name: string\r\n    like: boolean\r\n    genres: string\r\n    episodeCount: number\r\n    startDate: string\r\n    status: string\r\n}\r\n\r\nconst EachAnime: React.FC<propsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const deletePost = (id: number) =>{\r\n        dispatch(actions.deleteAnime(id))\r\n\r\n    }\r\n    const likeFilm = (id: number) =>{\r\n        dispatch(actions.likeAnime(id))\r\n    }\r\n    const  dislikeFilm = (id: number) =>{\r\n        dispatch(actions.dislikeAnime(id))\r\n    }\r\n\r\n    return <div className={classes.eachAnime} >\r\n          <div>\r\n              <img alt={'sorry image not found'} src={props.posterImage} className={classes.png}/>\r\n          </div>\r\n       <div>\r\n           <h2> <span className={classes.name}> {props.name === undefined? \"can't find name\" : props.name} </span>\r\n                {props.like && <span> 🧡 </span>}\r\n               <div>\r\n                   <span>  {props.episodeCount} episodes / </span>\r\n                   <span> start : {props.startDate} / </span> <span> status: {props.status} </span>\r\n               </div>\r\n               <div className={classes.rating}> Popularity rank is {props.popularityRank} </div>  </h2>\r\n\r\n           <h4> {props.description}</h4>\r\n           { !props.like && <button onClick={()=> likeFilm(props.id)} className={classes.like}> like </button> }\r\n           { props.like && <button onClick={()=> dislikeFilm(props.id)} className={classes.dislike}> dislike </button> }\r\n           <button onClick={()=> deletePost(props.id)} className={classes.delete}> delete </button>\r\n       </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default EachAnime;","import React from \"react\";\r\nimport classes from './Anime.module.css'\r\n\r\ntype propsType = {\r\n    searchAnime: (e: any) => void\r\n    handleSearch: (e: any) => void\r\n}\r\n\r\nconst Search: React.FC<propsType> = (props) => {\r\n    return (<form action='' onSubmit={props.searchAnime} className={classes.form} >\r\n        <input type='text' onChange={props.handleSearch}/>\r\n        <button type='submit'>\r\n            Search\r\n        </button>\r\n    </form>)\r\n}\r\n\r\nexport default Search","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AnimesType, getAnimesThunkCreater, actions} from \"../../redux/animeReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\nimport Paginator from \"../../components/Paginator/Paginator\";\r\nimport classes from \"./Anime.module.css\";\r\nimport EachAnime from \"./eachAnime\";\r\nimport Search from \"./SearchAnime\";\r\n\r\n\r\nexport const Anime: React.FC = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getAnimesThunkCreater(pageNumber, searchField ))\r\n    }\r\n\r\n    const {animes, searchField, currentPage} = useSelector((state: AppStateType) => state.anime)\r\n\r\n    let animesElements = animes.map((el: AnimesType) => <EachAnime popularityRank={el.attributes.popularityRank} description={el.attributes.description}\r\n                                                                   posterImage={el.attributes.posterImage === null ?\r\n                                                                       \"https://avatarko.ru/img/kartinka/1/avatarko_anonim.jpg\" : el.attributes.posterImage.large}\r\n                                                                   key={el.id} id={el.id}\r\n                                                                   name={el.attributes.titles.en} like={el.like} genres={el.type}\r\n                                                                   episodeCount={el.attributes.episodeCount} startDate = {el.attributes.startDate} status={el.attributes.status}/>)\r\n\r\n    const searchAnime = async (e: any) => {\r\n        e.preventDefault()\r\n        dispatch(getAnimesThunkCreater(1, searchField))\r\n    }\r\n    const handleSearch = (e: any) => {\r\n        dispatch(actions.handleSearchAC(e.target.value))\r\n    }\r\n\r\n    return (<div className={classes.all}>\r\n            <div className={classes.paginator}>\r\n                <Paginator currentPage={currentPage}\r\n                           totalItemsCount={500}\r\n                           pageSize={10}\r\n                           onPageChanged={onPageChanged}\r\n                           portionSize={10}/>\r\n            </div>\r\n            <Search searchAnime={searchAnime} handleSearch={handleSearch}/>\r\n            <div>\r\n                {animesElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {getAnimesThunkCreater} from \"../../redux/animeReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {Loading} from \"../Weather/Loading/Loading\";\nimport {Anime} from \"./Anime\";\n\n\n\n\n\nexport const AnimeContainer : React.FC =() => {\n\nconst dispatch = useDispatch()\n\n  useEffect( () => {\n      dispatch(getAnimesThunkCreater(1, \"tokyo\"))\n }, [])\n\n    const isLoading = useSelector((state: AppStateType) => state.anime.isLoading)\n\n\n    return (\n    <div>\n        {isLoading ? <Loading/> : <Anime/>}\n    </div>\n    )\n}\n\n","import classes from \"./PopUpSlider.module.css\"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nconst PopUpSlider = () => {\r\n\r\n    // popUp logic\r\n    let [isOpen, setIisOpen] = useState(false)\r\n    let show = () => {\r\n        setIisOpen(true)\r\n    }\r\n    let close = () => {\r\n        setIisOpen(false)\r\n    }\r\n\r\n    // slider logic\r\n    const pictures = ['https://bipbap.ru/wp-content/uploads/2017/08/04.-risunki-dlya-srisovki-legkie-dlya-devochek.jpg',\r\n        'https://is2-ssl.mzstatic.com/image/thumb/Purple22/v4/77/1b/90/771b90a5-708f-82d9-1a93-3696dfe00f1b/source/256x256bb.jpg',\r\n        'https://forumsmile.ru/u/1/e/0/1e0671ed91ffc54c260b1ae7860bfd75.jpg',\r\n        'https://i.pinimg.com/474x/d4/e0/3b/d4e03b916ea5a3d0c4332974894aad7b.jpg',\r\n        'https://3d-galleru.ru/cards/11/46/opqhit54oezpojr/celuyu-tebya-mnogo-mnogo-raz.jpg',\r\n    'https://image1.thematicnews.com/uploads/topics/preview/00/11/36/47/704e432496_256crop.jpg']\r\n\r\n    let [i, setI] = useState(0)\r\n    let [images, setImages] = useState(pictures[i])\r\n\r\n    useEffect(() => {\r\n        changing()\r\n    }, [i])\r\n\r\n    let BACK = () => {\r\n        if (i === 0) {\r\n            setI(6)\r\n        }\r\n        setI((i) => {\r\n            return i - 1\r\n        })\r\n    }\r\n    let next = () => {\r\n        if (i === 5) {\r\n            setI(-1)\r\n        }\r\n        setI((i) => {\r\n            return i + 1\r\n        })\r\n    }\r\n    let changing = () => {\r\n        setImages(pictures[i])\r\n    }\r\n\r\n\r\n    return <div className={cn({\r\n        [classes.close]: isOpen === true\r\n    }, classes.open)}>\r\n        <button onClick={() => show()} className={cn({\r\n            [classes.btnHide]: isOpen === true\r\n        }, classes.btnOpen)}>Показать слайдер\r\n        </button>\r\n        <dialog open={isOpen} className={classes.dialog}>\r\n            <div>\r\n                <div>\r\n                    <span className={classes.banner}> Слайдер  </span>\r\n                </div>\r\n                <div>\r\n                    <button className={classes.btnBack} onClick={() => BACK()}> BACK</button>\r\n                    <img src={images} alt={'slider'} className={classes.png}/>\r\n                    <button className={classes.btnNext} onClick={() => next()}> NEXT</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => close()} className={classes.btnClose}>Закрыть</button>\r\n                </div>\r\n            </div>\r\n        </dialog>\r\n\r\n    </div>\r\n}\r\n\r\nexport default PopUpSlider","import React, {lazy, Suspense} from 'react';\nimport './App.module.css';\nimport 'antd/dist/antd.css';\nimport {HashRouter, Link, Route, Switch, withRouter} from 'react-router-dom'\nimport Friends from \"./pages/Friends/Friends\";\nimport GenaProfile from \"./pages/ProfileGena/GenaProfile\";\nimport NikitaProfile from \"./components/NikitaProfile\";\nimport DiallogsContainer from \"./pages/Diallogs/DiallogsContainer\";\nimport NewsContainer from \"./pages/News/NewsContainer\";\nimport classes from './App.module.css'\nimport  {UsersPage} from \"./pages/Users/UsersContainer\";\nimport ProfileContainer from \"./pages/Profile/ProfileContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialiseApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloder/Preloader\";\n\n\nimport store, {AppStateType} from \"./redux/reduxStore\";\nimport {Login} from \"./pages/Login/Login\";\n\n\nimport {Layout, Menu} from 'antd';\nimport { SoundOutlined, UserOutlined, VideoCameraOutlined, CloudOutlined, MessageOutlined,\n    WechatOutlined, SearchOutlined, BookOutlined, ZhihuOutlined, ReadOutlined} from '@ant-design/icons';\n\nimport {HeaderComponent} from \"./components/Header/Header\";\nimport {ChatPage} from \"./pages/Chat/ChatPage\";\nimport {WeatherContainer} from \"./pages/Weather/WeatherContainer\";\nimport {FilmsContainer} from \"./pages/Films/FilmsContainer\";\nimport {MainPage} from \"./pages/TestRoute/mainPage\";\nimport {ProfilePage} from \"./pages/TestRoute/ProfilePage\";\nimport Books from \"./pages/Books/Books\";\nimport {AnimeContainer} from \"./pages/Anime/AnimeContainer\";\nimport PopUpSlider from \"./pages/PopUpSlider/PopUpSlider\";\n\n\n\nconst { Header, Content, Footer, Sider } = Layout;\n\n\n\n\n// import MusicContainer from \"./components/Music/MusicContainer\";\nconst MusicContainer = lazy(() => import('./pages/Music/MusicContainer'));\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    initialiseApp: ()=> void\n}\n\ntype PropsType = MapPropsType & DispatchPropsType\n\nclass App extends React.Component<PropsType> {\n\n    state = {\n        needWeather: true\n    }\n\n    componentDidMount() {\n        this.props.initialiseApp()\n        window.onerror = function myErrorHandler(errorMsg) {\n            alert(\"Error occured: \" + errorMsg);//or any message\n            return false;\n        }\n    }\n\n\n\n    render() {\n        if(!this.props.initialized){\n            return <Preloader />\n        }\n\n\n        return (\n            <Layout>\n                <Sider\n                    className=\"menuShadow\"\n                    breakpoint=\"lg\"\n                    collapsedWidth=\"0\"\n                    onBreakpoint={broken => {\n                        console.log(broken);\n                    }}\n                    onCollapse={(collapsed, type) => {\n                        console.log(collapsed, type);\n                    }}\n                >\n\n\n                    <div className={classes.logo}>\n                        <img className={classes.logo1} src=\"https://avatanplus.com/files/resources/original/5bf6f0c0b38e91673c9c70df.png\" alt={'logo'}/>\n                    </div>\n\n\n                    <Menu   theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n\n                        <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                            <Link to = \"/profile\">My page (locked)</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<BookOutlined />}>\n                            <Link  to = '/news' >News</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<WechatOutlined />}>\n                            <Link to = '/chat' >Chat (locked)</Link>\n\n                        </Menu.Item>\n                        <Menu.Item key=\"4\" icon={<UserOutlined />}>\n                            <Link to = '/friends' > Friends</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"5\" icon={<SearchOutlined />}>\n                            <Link to = '/users' > Пользователи</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"6\" icon={<SoundOutlined />}>\n                            <Link to = '/music' >Music</Link>\n                        </Menu.Item>\n                        {/*<Menu.Item key=\"7\" icon={<MessageOutlined />}>*/}\n                        {/*    <Link to = '/diallogs'>Messages (locked)</Link>*/}\n                        {/*</Menu.Item>*/}\n                        <Menu.Item key=\"8\" icon={<VideoCameraOutlined />}>\n                            <Link to = '/films'>Films</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"9\" icon={<ReadOutlined />}>\n                            <Link to = '/books'>Books</Link>\n                        </Menu.Item>\n                        {/*<Menu.Item key=\"10\" icon={<MessageOutlined />}>*/}\n                        {/*    <Link to = '/maintest'>Main (locked)    </Link>*/}\n                        {/*</Menu.Item>*/}\n                        <Menu.Item key=\"11\" icon={<ZhihuOutlined />}>\n                            <Link to = '/anime'>Anime</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"12\" icon={<ZhihuOutlined />}>\n                            <Link to = '/PopUpSlider'>PopUpSlider</Link>\n                        </Menu.Item>\n\n\n                        {this.state.needWeather && <div className={classes.weather} onClick={() => {\n                            this.setState({needWeather: false})\n                            console.log(this.state.needWeather)\n                        }}>\n                            <WeatherContainer/>\n                        </div>}\n                        {!this.state.needWeather &&  <Menu.Item key=\"9\" icon={<CloudOutlined />} onClick={() => {\n                            this.setState({needWeather: true})\n                            console.log(this.state.needWeather)\n                        }}>\n                           Weather\n                        </Menu.Item>}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header className=\"site-layout-sub-header-background\" style={{padding: 0, height: 68}}>\n                        <HeaderComponent/>\n                    </Header>\n                    <Content style={{margin: '0 0 0'}}>\n                        <div className=\"site-layout-background\" style={{padding: 0, minHeight: 360}}>\n                            <Switch>\n                                <Route path='/chat'\n                                       render={() => <ChatPage />}/>\n\n                                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n\n                                <Route path='/news' render={() => <NewsContainer/>}/>\n                                <Route path='/music'\n                                       render={() => {\n                                           return <Suspense fallback={<div>loading...</div>}>\n                                               <MusicContainer/>\n                                           </Suspense>\n                                       }}/>\n                                <Route path='/friends'\n                                       render={() => <Friends/>}/>\n                                <Route path='/users'\n                                       render={() => <UsersPage/>}/>\n                                <Route path='/login'\n                                       render={() => <Login/>}/>\n                                <Route path='/diallogs' render={() => <DiallogsContainer/>}/>\n                                <Route path='/weather' render={() => <WeatherContainer />}/>\n\n                                <Route path='/films' render={() => <FilmsContainer />}/>\n                                <Route path='/books' render={() => <Books />}/>\n\n\n                                <Route path='/maintest' render={() => <MainPage />}/>\n                                <Route path='/profiletest' render={() => <ProfilePage />}/>\n                                <Route path='/PopUpSlider' render={() => <PopUpSlider />}/>\n\n                                <Route path='/Anime' render={() => <AnimeContainer />}/>\n                                <Route path='/https://vk.com/dank_af' render={() => <GenaProfile/>}/>\n                                <Route path='/https://vk.com/id153839551' render={() => <NikitaProfile/>}/>\n\n                            </Switch>\n                        </div>\n                    </Content>\n                    <Footer style={{textAlign: 'center'}}>Social-network 2.0 ©2021 Created by Ruslan SSS Ghoul</Footer>\n                </Layout>\n            </Layout>\n\n            //     <NavBarContainer/>\n\n\n        );\n    }\n}\n\nconst mapStateToProps=(state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initialiseApp}\n    ))(App)\n\n\n\nconst AppAllTree: React.FC = () => {\n    return <HashRouter>\n            <Provider store={store}>\n                <AppContainer  />\n            </Provider>\n        </HashRouter>\n\n}\n\nexport default AppAllTree","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom'\nimport AppAllTree from \"./App\";\n\n\n\n\n\nReactDOM.render(<AppAllTree/>, document.getElementById('root'))\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"png\":\"Anime_png__1Yj9Z\",\"eachAnime\":\"Anime_eachAnime__1KCJD\",\"rating\":\"Anime_rating__1V3J6\",\"des\":\"Anime_des__1S1qX\",\"dislike\":\"Anime_dislike__32nHx\",\"like\":\"Anime_like__2nlKR\",\"delete\":\"Anime_delete__2sTsS\",\"name\":\"Anime_name__HehEA\",\"form\":\"Anime_form__3K4Us\",\"paginator\":\"Anime_paginator__1dD7s\",\"all\":\"Anime_all__3-61T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__bq8j-\",\"userInfo\":\"users_userInfo__2rqht\",\"city\":\"users_city__1rxbZ\",\"country\":\"users_country__3YVxt\",\"fullname\":\"users_fullname__2Zx0V\",\"status\":\"users_status__3Qm9H\",\"userInfoShort\":\"users_userInfoShort__2AwJ3\",\"buttons\":\"users_buttons__1EiGu\",\"newUsers\":\"users_newUsers__E13su\",\"selectedPage\":\"users_selectedPage__10Rkb\",\"page\":\"users_page__1LiHA\",\"all\":\"users_all__3ksRK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"MyPosts_CreateNewPost__R7anr\",\"button\":\"MyPosts_button__10kWn\",\"text\":\"MyPosts_text__1B095\",\"MyPostsAll\":\"MyPosts_MyPostsAll__2NrBi\",\"posts\":\"MyPosts_posts__1SXSs\",\"error\":\"MyPosts_error__u1wPu\",\"fieldPosts\":\"MyPosts_fieldPosts__1086u\",\"textarea\":\"MyPosts_textarea__1KfLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"png\":\"Films_png__1grNY\",\"eachFilm\":\"Films_eachFilm__1r_mv\",\"rating\":\"Films_rating__2dvFt\",\"des\":\"Films_des__16cgo\",\"dislike\":\"Films_dislike__2nQ8D\",\"like\":\"Films_like__3dcX1\",\"delete\":\"Films_delete__19rP9\",\"all\":\"Films_all__3T46j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"open\":\"PopUpSlider_open__3obS5\",\"dialog\":\"PopUpSlider_dialog__xyUR1\",\"btnClose\":\"PopUpSlider_btnClose__CKZ3m\",\"btnOpen\":\"PopUpSlider_btnOpen__1Gyhz\",\"btnHide\":\"PopUpSlider_btnHide__3Zprm\",\"banner\":\"PopUpSlider_banner__UvEl2\",\"png\":\"PopUpSlider_png__Zpzqo\",\"btnNext\":\"PopUpSlider_btnNext__1Ujh7\",\"btnBack\":\"PopUpSlider_btnBack__-cDR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full\":\"books_full__13BE_\",\"form\":\"books_form__3Y7aR\",\"ava\":\"books_ava__3E8hS\",\"info\":\"books_info__3s6qp\",\"eachBook\":\"books_eachBook__3gZTZ\",\"all\":\"books_all__34VBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__3KyG_\",\"All\":\"Login_All___BRzZ\",\"field\":\"Login_field__2QVN2\",\"button\":\"Login_button__2buF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"temp\":\"Weather_temp__2UmmS\",\"halfContainer\":\"Weather_halfContainer__33dPf\",\"title\":\"Weather_title__1uteq\",\"subTitle\":\"Weather_subTitle__fnUxp\",\"text1\":\"Weather_text1__1Agrr\",\"loading\":\"Weather_loading__3iCkf\",\"close\":\"Weather_close__FRVM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsName\":\"EachNew_newsName__1hZHZ\",\"mes\":\"EachNew_mes__3OyZa\",\"ava\":\"EachNew_ava__RS5Uo\",\"news\":\"EachNew_news__RrrAj\",\"picture\":\"EachNew_picture__1XEAA\",\"user\":\"EachNew_user__2q2PI\",\"time\":\"EachNew_time__3qaw_\",\"content\":\"EachNew_content__2OtSe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3gLU_\",\"nick\":\"Post_nick__1h4WP\",\"mes\":\"Post_mes__GOLML\",\"newsName\":\"Post_newsName__1Hk-e\",\"ava\":\"Post_ava__25shI\",\"news\":\"Post_news__3Hv_j\",\"picture\":\"Post_picture__1RrkK\",\"user\":\"Post_user__17f4u\",\"time\":\"Post_time__3uwnr\",\"content\":\"Post_content__3txpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Diallogs_dialogs__1kGL3\",\"dialogsitem\":\"Diallogs_dialogsitem__1OKEu\",\"massages1\":\"Diallogs_massages1__1QP5H\",\"but\":\"Diallogs_but__37_j3\",\"text\":\"Diallogs_text__2Rdh9\",\"seacrh\":\"Diallogs_seacrh__dB2ua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2-qx_\",\"pageNumber\":\"Paginator_pageNumber__yGoSK\",\"selectedPage\":\"Paginator_selectedPage__OLHGD\",\"back\":\"Paginator_back__1T3kB\",\"last\":\"Paginator_last__lYclC\",\"next\":\"Paginator_next__34E9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__BeMIC\",\"button1\":\"Header_button1__L0Utc\",\"logo\":\"Header_logo__bnw5J\",\"track\":\"Header_track__2AQ2F\",\"signIn\":\"Header_signIn__1J82i\",\"loginBlock\":\"Header_loginBlock__2No9o\",\"userAvatar\":\"Header_userAvatar__3eU9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"mainAndProfilePages_input__3iH3r\",\"button\":\"mainAndProfilePages_button__38XOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"All_all__3_yJy\",\"but\":\"All_but__3sJRm\",\"textare\":\"All_textare__2l7Py\",\"seacrh\":\"All_seacrh__3vv_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper\":\"App_app-wrapper__jQOAl\",\"app-wrapper-content\":\"App_app-wrapper-content__3c75d\",\"menuShadow\":\"App_menuShadow__1mgvs\",\"logo1\":\"App_logo1__33DUV\",\"weather\":\"App_weather__1t-q7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"GenaPosts_CreateNewPost__3aeUo\",\"button\":\"GenaPosts_button__3Z7W0\",\"text\":\"GenaPosts_text__oEtG5\",\"MyPostsAll\":\"GenaPosts_MyPostsAll__2rFgt\",\"posts\":\"GenaPosts_posts__3OHbq\"};"],"sourceRoot":""}