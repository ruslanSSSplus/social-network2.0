{"version":3,"sources":["components/Friends/Friends.module.css","components/News/News.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/NavBar/NavBar.module.css","api/api.ts","reportWebVitals.js","components/Friends/FriendsControl/FriendsControl.tsx","redux/friendsReducer.ts","components/Friends/All/Friend/Friend.tsx","components/Friends/All/All.tsx","hoc/withAuthRedirect.tsx","components/Friends/All/AllContainerHoook.tsx","components/Friends/Friends.tsx","redux/newsReducer.ts","redux/profileReducer.ts","redux/dialogReducer.ts","OldStateOldClassComponents/StoreFirstVersion.js","components/ProfileGena/GenaPosts/GenaPosts.jsx","components/ProfileGena/GenaProfileInfo/GenaProfileInfo.jsx","components/ProfileGena/GenaProfile.jsx","components/NikitaProfile.jsx","components/Diallogs/Eachmessage/Eachmessage.tsx","components/Diallogs/Eachdialog/Eachdialog.tsx","components/Diallogs/Diallogs.tsx","components/Diallogs/DiallogsContainer.tsx","components/AddPostForm/AddPostForm.tsx","components/News/News.tsx","components/News/EachNew/EachNew.tsx","components/News/NewsContainer.tsx","components/NavBar/Best.tsx","components/NavBar/NavBar.tsx","components/NavBar/NavBarContainer.tsx","assets/images/DZIAss-5O_I.jpg","components/Users/EachUser.tsx","components/Paginator/Paginator.tsx","components/Users/Users.tsx","assets/images/04de2e31234507.564a1d23645bf.gif","components/common/Preloder/Preloader.jsx","redux/friendsSelectors.ts","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/appReducer.ts","redux/sideBarReducer.ts","redux/reduxStore.ts","App.tsx","index.js","components/Profile/MyPosts/MyPosts.module.css","components/Users/users.module.css","components/Friends/FriendsControl/FriendsControl.module.css","components/News/EachNew/EachNew.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Login/Login.module.css","components/Diallogs/Diallogs.module.css","components/Friends/All/All.module.css","components/Header/Header.module.css","components/ProfileGena/GenaPosts/GenaPosts.module.css","redux/musicReducer.ts","components/ProfileGena/GenaPosts/GenaPost/GenaPost.module.css","components/ProfileGena/GenaProfileInfo/GenaProfileInfo.module.css","components/Diallogs/Eachdialog/Eachdialog.module.css","components/Paginator/Paginator.module.css","components/Friends/All/Friend/Friend.module.css","components/Diallogs/Eachmessage/Eachmessage.module.css","components/NavBar/Best.module.css"],"names":["module","exports","ResultCodeEnum","ResultCodeWithCaptchaEnum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FriendsControl","className","classes","friend","item","to","activeClassName","activeLink","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","id","delete","post","userId","console","warn","profileAPI","getProfile","authAPI","email","password","rememberMe","captcha","securityAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","res","saveProfile","profile","ADD_USER","FRIEND_CHECK","FRIEND_REMOVE","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_ITEMS_COUNT","IS_FETCHING","initialState","friendDate","link","name","avatar","surname","friendsAlready","users","totalItemsCount","isFetching","isFriend","actions","friendCheckAC","type","removeFriendAC","idToRemove","follow","unfollow","setUsers","addUserAC","avatarPhoto","isFetchingDispatch","isFetchingBOOL","setTotalItemsCount","Count","setCurrentPage","p","unfollowThunk","dispatch","a","resultCode","friendsReducer","state","action","stateCopy","friendDateSet","friendsCollection","Set","newFriendUser","add","Array","from","filter","map","u","followed","Friend","props","src","onClick","dropbtn","All","friendsAll","friends","el","name1","React","createRef","ava1","all","seacrh","textare","ref","but","addfriend","current","value","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","connect","compose","getUsersThunk","i","items","photos","large","useEffect","Friends","per","new","time","user","picture","newsReducer","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","SET_ERROR","posts","countPosts","isError","newsImport","addPostActionCreator","newText","pic","deletePost","setUsersProfile","savePhotoSuccess","setErrorProfile","Error","setStatus","getProfileThunk","profileReducer","newPost","unshift","ADD_MESSAGE","messages","message","dialogs","count","addMessageActionCreator","dialogReducer","newMessage","store","_state","newnewstext","newpicturetext","newmessagetext","sidebar","bestfriends","musics","songs","nameSong","newsongtext","news","_reRenderAllTree","log","getState","subscribe","observer","musicReducer","window","GenaPosts","MyPostsAll","CreateNewPost","text","button","GenaProfileInfo","wallpaper","description","GenaProfile","NikitaProfile","Eachmessage","massages","massage","Eachdialog","path","dialog","active","initialValues","AddMessageForm","onSubmit","component","Diallogs","dialogsElements","messageElements","values","dialogsitem","massages1","AddPostFormik","validationSchema","Yup","required","max","fieldPosts","error","textarea","placeholder","News","newsElements","content","AddPostForm","EachNew","newsName","ava","mes","Best","NavBar","nav","BestFriends","NavBarContainer","sideBar","EachUser","newUsers","userInfo","small","photoAva","userPhoto","userInfoShort","fullname","country","city","buttons","followThunk","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","cn","selectedPage","pageNumber","Users","Preloader","preLoader","getUsers","getAPageSize","getTotalCount","getCurrentPage","getisFetching","UsersContainer","getUsersThunkCreater","totalCount","photo","ProfileStatusWithHooks","editMode1","setEditMode1","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatusThunk","autoFocus","ProfileDataForm","info","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","editButton","fullName","aboutMe","contactTitle","ContactValue","lookingForAJob","lookingForAJobDescription","Contact","ProfileInfo","editMode","setEditMode","target","files","length","Post","MyPosts","postDate","MyPostsContainer","Profile","ProfileContainer","match","params","AuthorizedUserId","history","getStatusThunk","refreshProfile","prevProps","prevState","file","Promise","reject","withRouter","Header","header","logo","track","loginBlock","userAva","userAvatar","login","logOutThunk","SET_USER_DATE","SET_USER_AVATAR","GET_CAPTCHA_URL_SUCCESS","captchaUrl","getAuthThunk","Success","gerCaptchaUtl","url","authReducer","HeaderContainer","checkbox","LoginForm","loginThunk","field","CaptchaIsRequired","INITIALIZED_SUCCESS","initialized","appReducer","sideBarReducer","rootReducer","combineReducers","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","MusicContainer","lazy","App","initialiseApp","onerror","errorMsg","lineNumber","alert","render","DiallogsContainer","NewsContainer","fallback","AppContainer","AppAllTree","ReactDOM","document","getElementById","ADD_SONG","UPDATE_NEW_SONG_TEXT","songOnChangeActionCreator","addSongActionCreator","newSong"],"mappings":"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","file":"static/js/main.4cc5047d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"per\":\"Friends_per__2Axce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__1G3TA\",\"textarea\":\"News_textarea__3SkEi\",\"button\":\"News_button__2VTYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__DXWvy\",\"wallpaper\":\"ProfileInfo_wallpaper__2sqrq\",\"description\":\"ProfileInfo_description__2pVo3\",\"info\":\"ProfileInfo_info__39Vzn\",\"error\":\"ProfileInfo_error__2JVZX\",\"editButton\":\"ProfileInfo_editButton__3ZZnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3EWX2\",\"item\":\"NavBar_item__34yu8\",\"bestfriends\":\"NavBar_bestfriends__q23SX\",\"activeLink\":\"NavBar_activeLink__1y3xV\",\"BestFriends\":\"NavBar_BestFriends__VvFi_\"};","import axios from \"axios\";\r\nimport {photosType, ProfileType, UserType} from \"../Types/Types\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '1c389392-606e-42a1-8d6e-0ba8e47b4434'\r\n    }\r\n});\r\ntype itemsType = {\r\n    name: string\r\n    id: number\r\n    photos: photosType\r\n    status: string\r\n    followed: boolean\r\n}\r\ntype getUsersType = {\r\n    items: Array<itemsType>\r\n    totalCount: number\r\n    error: null | any\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage =1, pageSize = 10) {\r\n        return instance.get<getUsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUsersFriends(){\r\n        return instance.get<getUsersType>(`users`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n\r\n    getProfilePhoto(){\r\n    return instance.get<ProfileType>(`profile/9`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n},\r\n    getUnfollow(id: number){\r\n        return instance.delete<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getFollow(id: number){\r\n        return instance.post<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getProfile(userId: number | null){\r\n        console.warn('obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n\r\n}\r\n\r\nexport enum ResultCodeEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\nexport enum ResultCodeWithCaptchaEnum  {\r\n        CaptchaIsRequired = 10\r\n}\r\n\r\ntype getAuthType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\ntype loginType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodeEnum | ResultCodeWithCaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get<getAuthType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email: string, password: string, rememberMe=false, captcha: null | string = null){\r\n        return instance.post<loginType>('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logOut(){\r\n        return instance.delete<ThreeParamsType>('auth/login')\r\n    }\r\n\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\n\r\ntype ThreeParamsType = {\r\n    data: {\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\ntype savePhotoType = {\r\n    data:\r\n        {\r\n            photos: photosType\r\n        }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number | null){\r\n        return instance.get<ProfileType>(`profile/`+ userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ThreeParamsType>(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile: File){\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put<savePhotoType>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res=>res.data)\r\n    },\r\n    saveProfile(profile: ProfileType){\r\n        return instance.put<ThreeParamsType>(`profile`, profile)\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport classes from './FriendsControl.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst FriendsControl = () => {\r\n    return <div className={classes.friend}>\r\n        <div className = {classes.item}>\r\n            <NavLink to = \"/friends\" activeClassName={classes.activeLink}> Мои друзья</NavLink>\r\n        </div>\r\n        <div className = {classes.item}>\r\n            <NavLink  to = '/friends/new' activeClassName={classes.activeLink}>Заявки в друзья</NavLink>\r\n        </div>\r\n        <div className = {classes.item}>\r\n            <NavLink to = '/friends/numbers' activeClassName={classes.activeLink}>Телефонная книга</NavLink>\r\n        </div>\r\n        <div className = {classes.item}>\r\n            <NavLink to = '/users' activeClassName={classes.activeLink}>Полизователи</NavLink>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default FriendsControl;","import {usersAPI} from \"../api/api\";\r\nimport { UserType} from \"../Types/Types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nconst ADD_USER = 'ADD_USER';\r\nconst FRIEND_CHECK = 'FRIEND_CHECK'\r\nconst FRIEND_REMOVE = 'FRIEND_REMOVE'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_ITEMS_COUNT = 'SET_TOTAL_ITEMS_COUNT'\r\nconst IS_FETCHING = 'IS_FETCHING'\r\n\r\n\r\nexport type FriendDateType = {\r\n    id: number,\r\n    link: string,\r\n    name: string,\r\n    avatar: string,\r\n    surname: string,\r\n    friendsAlready: boolean,\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n    friendDate: [\r\n        {\r\n            id: 1111111,\r\n            link: '/https://vk.com/dank_af',\r\n            name: 'Геннадий',\r\n            avatar: 'https://meragor.com/files/styles//ava_800_800_wm/ava-241.jpg',\r\n            surname: 'Льянов',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 2222222,\r\n            link: 'https://vk.com/get_imba',\r\n            name: 'Тимур',\r\n            surname: 'Льянов',\r\n            avatar: 'https://i.pinimg.com/originals/d2/27/67/d22767e3ecd58f14c839092e1dfe3852.jpg',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 333333,\r\n            link: 'https://vk.com/evgeniasims',\r\n            name: 'Евгения',\r\n            surname: 'Хайретдинов',\r\n            avatar: 'http://sun9-67.userapi.com/s/v1/ig2/6JU7DbnLm46xuMVj9w2gHBOoagBCXOCkTilVO__oHcVOxVdwYVIxZAfEKG7R9_EnXUb-CLjsqkl-cuetoovsmwDU.jpg?size=200x0&quality=96&crop=1,1,1197,1197&ava=1',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 4444444,\r\n            link: 'https://vk.com/id153839551',\r\n            name: 'Кекс',\r\n            surname: 'Слесырев',\r\n            avatar: 'https://anime-fans.ru/wp-content/uploads/2021/01/Ochen-smeshnye-anime-avy_01.jpg',\r\n            friendsAlready: true,\r\n        },\r\n\r\n    ] as Array<FriendDateType> | any,\r\n\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalItemsCount: 222,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFriend: true\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    friendCheckAC :() => ({\r\n        type: FRIEND_CHECK,\r\n    } as const),\r\n    removeFriendAC:(idToRemove: number) => ({\r\n        type: FRIEND_REMOVE,\r\n        idToRemove: idToRemove\r\n    } as const),\r\n    follow:(userId: number) => ({\r\n        type: FOLLOW,\r\n        userId\r\n    } as const),\r\n    unfollow:(userId:number) => ({\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const),\r\n    setUsers:(users: Array<UserType>) => ({\r\n        type: SET_USERS,\r\n        users\r\n    } as const),\r\n    addUserAC:(id: number, avatarPhoto: string | null, name: string) => ({\r\n        type: ADD_USER,\r\n        id: id,\r\n        surname: null,\r\n        avatar: avatarPhoto,\r\n        name: name,\r\n    } as const),\r\n    isFetchingDispatch: (isFetchingBOOL: boolean)  => ({\r\n        type: IS_FETCHING,\r\n        isFetchingBOOL,\r\n    } as const),\r\n    setTotalItemsCount :(Count: number) => ({\r\n        type: SET_TOTAL_ITEMS_COUNT,\r\n        Count,\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n}\r\n\r\n\r\nconst friendsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_USER:\r\n            let stateCopy = {...state}\r\n            let friendDateSet = [...stateCopy.friendDate]\r\n            let friendsCollection = new Set(friendDateSet)\r\n            let newFriendUser = {\r\n                id: action.id,\r\n                name: action.name,\r\n                surname: action.surname,\r\n                avatar: action.avatar,\r\n                link: '/profile/' + action.id,\r\n                friendsAlready: true\r\n            };\r\n            friendsCollection.add(newFriendUser)\r\n            return {\r\n                ...state,\r\n                friendDate: Array.from(friendsCollection)\r\n            };\r\n\r\n        case FRIEND_CHECK:\r\n            return {\r\n                ...state,\r\n                isFriend: false\r\n            }\r\n        case FRIEND_REMOVE:\r\n            return {\r\n                ...state,\r\n                friendDate: state.friendDate.filter((item: any) => item.id !== action.idToRemove)\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        case SET_TOTAL_ITEMS_COUNT: {\r\n            return {...state, totalItemsCount: action.Count}\r\n        }\r\n        case IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetchingBOOL}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type ThunkType = BaseThunkType<ActionsType>\r\n\r\nexport const getUsersThunkCreater = (currentPage: number,\r\n                                     pageSize: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.isFetchingDispatch(true))\r\n        dispatch(actions.setCurrentPage(currentPage))\r\n        let response = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(actions.isFetchingDispatch(false))\r\n            dispatch(actions.setUsers(response.items))\r\n            dispatch(actions.setTotalItemsCount(response.totalCount))\r\n    }\r\n}\r\n\r\nexport const unfollowThunk = (id: number): ThunkType => async (dispatch) => {\r\n    if (id > 100000) {\r\n        dispatch(actions.removeFriendAC(id))\r\n    } else {\r\n        let response = await usersAPI.getUnfollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(actions.unfollow(id))\r\n            dispatch(actions.removeFriendAC(id))\r\n        }\r\n    }\r\n}\r\n    export const followThunk = (id: number, photo: string | null, name: string): ThunkType => async (dispatch ) => {\r\n    let response = await usersAPI.getFollow(id)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actions.follow(id))\r\n        photo != null\r\n            ? dispatch(actions.addUserAC(id, photo, name)) :\r\n            dispatch(actions.addUserAC(id, 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', name))\r\n    }\r\n}\r\nexport const getUsersThunk = (isFriend: boolean): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getUsersFriends()\r\n    for (let i = 0; i < 10; i++) {\r\n         if (response.items[i].followed === true && isFriend) {\r\n             dispatch(actions.addUserAC(response.items[i].id, response.items[i].photos.large != null ?\r\n                 response.items[i].photos.large : 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', response.items[i].name,))\r\n         }\r\n    }\r\n    dispatch(actions.friendCheckAC())\r\n}\r\nexport default friendsReducer;","import React from 'react';\r\nimport classes from './Friend.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ProfileType} from \"../../../../Types/Types\";\r\nimport {number} from \"yup\";\r\n\r\n\r\ntype PropsType = {\r\n  key: number\r\n  id: number\r\n  link: string\r\n  name: string\r\n  surname: string\r\n  avatar: string\r\n  unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst Friend: React.FC<PropsType>  = (props) => {\r\n\r\n  let unfollowing = (id: number) => {\r\n      props.unfollowThunk(id)\r\n\r\n  }\r\n\r\n  return <div>\r\n\r\n    <div className={classes.item}>\r\n      <img src={props.avatar} />\r\n      <NavLink to={props.link}> {props.name} {props.surname} </NavLink>\r\n      <button onClick={() =>{unfollowing(props.id)}} className={classes.dropbtn}>Удалить из друзей</button>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport classes from './All.module.css'\r\nimport Friend from \"./Friend/Friend\";\r\nimport {ProfileType} from \"../../../Types/Types\";\r\nimport {number} from \"yup\";\r\nimport {FriendDateType} from \"../../../redux/friendsReducer\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    addfriend: (id: number, avatarPhoto: string, name: string) => void\r\n    friends:  Array<FriendDateType>\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst All: React.FC<PropsType> =(props) => {\r\n\r\n    let friendsAll= props.friends.map(el =>  <Friend key={el.id} id={el.id} link = {el.link} name = {el.name} surname= {el.surname} avatar={el.avatar} unfollowThunk={props.unfollowThunk}/>)\r\n    let name1: any = React.createRef()\r\n    let ava1: any = React.createRef()\r\n\r\n    let addFriend = () => {\r\n        props.addfriend(888888, ava1.current.value, name1.current.value)\r\n        name1.current.value = '';\r\n        ava1.current.value = '';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        < div className={classes.all}>\r\n            <div className={classes.seacrh}>\r\n                name\r\n                <textarea className={classes.textare} ref={name1} >   </textarea>\r\n                ava\r\n                <textarea className={classes.textare} ref={ava1} >  </textarea>\r\n                <button className={classes.but} onClick={addFriend}> Add New Friend </button>\r\n            </div>\r\n            {friendsAll}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default All;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n    class RedirectComponent extends React.Component<mapStateToPropsForRedirectType> {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {actions, FriendDateType, getUsersThunk, unfollowThunk} from \"../../../redux/friendsReducer\";\r\nimport All from \"./All\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    friends: Array<FriendDateType>\r\n    isFriend: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersThunk: (isFriend: boolean) => void\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    addUserAC: (id: number, avatarPhoto: string, name: string) => void\r\n\r\n}\r\n\r\ntype all = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\n\r\nconst AllContainerHoook: React.FC<all> =(props)=> {\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( ()=>{\r\n        props.getUsersThunk(props.isFriend)\r\n    }, [])\r\n\r\n\r\n        return <All\r\n                addfriend={props.addUserAC}\r\n                friends={props.friends}\r\n                unfollowThunk={props.unfollowThunk}\r\n            />\r\n}\r\nlet mapStateToProps =(state: AppStateType) => {\r\n\r\n    return {\r\n        friends: state.friends.friendDate,\r\n        isFriend: state.friends.isFriend,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {unfollowThunk, getUsersThunk, ...actions}),    withAuthRedirect,\r\n)(AllContainerHoook)\r\n\r\n","import React from 'react';\r\nimport classes from './Friends.module.css'\r\nimport FriendsControl from \"./FriendsControl/FriendsControl\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport AllContainerHoook from \"./All/AllContainerHoook\";\r\n\r\n\r\n\r\n\r\n\r\nconst Friends =() => {\r\n    return (<div className={classes.per}>\r\n            <FriendsControl />\r\n            <AllContainerHoook />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import {PostsType} from \"../Types/Types\";\r\n\r\n\r\nlet initialState = {\r\n    new: [\r\n        {\r\n            id: 1,\r\n            time: 'сегодня в 11 утра',\r\n            post: 'Вчера посмотрел атаку титанов',\r\n            user: 'Timur Brat',\r\n            avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album',\r\n            picture: 'https://cdn.shazoo.ru/351151_Z0bYpFdK6E_8010ba67_497b_4038_9c6e_f9b0fa9c.jpg',\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня в 9 утра',\r\n            post: 'Посмотрел \"Твое Имя\", мне понравилось',\r\n            user: 'Gena Daun',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n            picture: 'https://www.mirf.ru/wp-content/uploads/2020/09/update_1___multi_sourced_4k__kimi_no_na_wa_by_assassinwarrior_dajydsn-fullview.jpg',\r\n        },\r\n        {\r\n            id: 3,\r\n            time: 'вчера в 12 ночи',\r\n            post: 'Всем привет',\r\n            user: 'Pavel Palov',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album',\r\n            picture: 'https://i.pinimg.com/originals/3c/8f/9a/3c8f9ad07c5f305354cdf087cf1d580c.jpg',\r\n        },\r\n        {\r\n            id: 4,\r\n            time: 'позавчера',\r\n            post: 'Я русский ',\r\n            user: 'Maks Voin',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album',\r\n            picture: 'https://cdni.rbth.com/rbthmedia/images/2020.07/original/5f1e888885600a2608563f65.jpg',\r\n        },\r\n        {\r\n            id: 5,\r\n            time: 'ну он просто лох',\r\n            post: 'я бабизян че тут сказать',\r\n            user: 'Sergey Ga4ibyan',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album',\r\n            picture: 'https://icdn.lenta.ru/images/2021/01/20/16/20210120164051128/wide_4_3_ad0a8dedf4f24c1002d87743b6451b83.jpg',\r\n        },\r\n    ] as Array<PostsType>\r\n\r\n}\r\nexport const getNewMassiv = () => { return initialState.new;}\r\ntype ActionTypes = null\r\n\r\nconst newsReducer = (state = initialState, action: ActionTypes) => {\r\n\r\n\r\n            return state;\r\n\r\n\r\n}\r\n\r\nexport default newsReducer;","import {getNewMassiv} from \"./newsReducer\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {photosType, PostsType, ProfileType} from \"../Types/Types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"./reduxStore\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_PHOTO = 'SET_PHOTO'\r\nconst SET_ERROR = 'profile/SET_ERROR';\r\n\r\n\r\n\r\nlet initialState = {\r\n\r\n    posts: [\r\n\r\n        {\r\n            id: 1,\r\n            post: 'First Friend GEna',\r\n            user: 'Гена',\r\n            time: 'сегодня в 11 утра',\r\n            picture: 'https://sun9-35.userapi.com/impf/c846522/v846522118/18d9eb/E5pvZnPh9hU.jpg?size=1920x1080&quality=96&sign=028f51047f18db27b0be9c3f5f266980&type=album',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня',\r\n            post: ')))',\r\n            user: 'Gena',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n\r\n            picture: 'https://avatarko.ru/img/kartinka/1/Crazy_Frog.jpg',\r\n        },\r\n        {\r\n            id: 3,\r\n            post: '1111',\r\n            user: 'Pavel  -   ',\r\n            time: 'сегодня в ',\r\n            picture: 'https://99px.ru/sstorage/53/2020/12/mid_318736_308803.jpg',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album'\r\n        },\r\n\r\n        {\r\n            id: 4,\r\n            post: '222222222',\r\n            user: 'Maks  -   ',\r\n            time: 'сегодня в 11 ',\r\n            picture: 'https://oir.mobi/uploads/posts/2021-03/1616973116_8-p-fon-dlya-rabochego-stola-zhivie-oboi-9.jpg',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album'\r\n        },\r\n        {\r\n            id: 5,\r\n            post: '33333333333333',\r\n            user: 'Ga4ibyan  -   ',\r\n            time: 'сегодня в 11 утра',\r\n            picture: 'https://wallpapershome.ru/images/pages/ico_h/21906.jpg',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album'\r\n        }\r\n    ] as Array<PostsType>,\r\n\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    countPosts: 6,\r\n    isError: false,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nlet newsImport = getNewMassiv();\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.countPosts,\r\n                post: action.newText,\r\n                user: 'Вы  ',\r\n                avatar: \"https://n1s1.hsmedia.ru/30/a5/50/30a550ad429dc5b67118ec6c0a984137/620x440_1_61ebd8b8b757e8b7e6e0c8e6d9f2efbe@2055x1459_0xc0a839a2_12152610071478613656.jpeg\",\r\n                picture: action.pic,\r\n                time: 'сейчас',\r\n            };\r\n            debugger\r\n            newsImport.unshift(newPost)\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n\r\n                countPosts: state.countPosts + 1\r\n            };\r\n        }\r\n\r\n\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter((item) => item.id !== action.idToRemove)}\r\n        }\r\n        case SET_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType};\r\n        }\r\n        case SET_ERROR:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newText: string, pic: string) => ({\r\n        type: ADD_POST,\r\n        newText,\r\n        pic\r\n    } as const),\r\n    deletePost: (idToRemove: number) => ({\r\n        type: DELETE_POST,\r\n        idToRemove\r\n    }as const),\r\n    setUsersProfile: (profile: ProfileType) => ({\r\n        type: SET_USERS_PROFILE,\r\n        profile: profile,\r\n    }as const),\r\n    savePhotoSuccess :(photos: photosType)  => ({\r\n        type: SET_PHOTO,\r\n        photos\r\n    }as const),\r\n    setErrorProfile :(Error: boolean)  => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    setStatus: (status: string) => ({\r\n        type: SET_STATUS,\r\n        status\r\n    }as const)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const  getProfileThunk = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(actions.setUsersProfile(response.data));\r\n}\r\nexport const getStatusThunk = (userId: number):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(response.data));\r\n}\r\nexport const updateStatusThunk = (status: string):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.resultCode === 0){\r\n        debugger\r\n        dispatch(actions.savePhotoSuccess(response.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType):ThunkType => async (dispatch, getState) => {\r\n\r\n    const userId= getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0){\r\n        await dispatch(getProfileThunk(userId));\r\n        dispatch(actions.setErrorProfile(false))\r\n    }\r\n\r\n    else {\r\n        dispatch(actions.setErrorProfile(true))\r\n        return Promise.reject()\r\n    }\r\n}\r\nexport default profileReducer;","import {InferActionsTypes} from \"./reduxStore\";\r\n\r\n\r\nconst ADD_MESSAGE = 'DIALOGS/ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n        messages: [\r\n            {id: 1, message: 'loh gena loh'},\r\n            {id: 2, message: 'loh misha loh'},\r\n            {id: 3, message: 'loh pasha loh'},\r\n            {id: 4, message: 'loh nikita loh'},\r\n            {id: 5, message: 'loh tima loh'},\r\n        ] as Array<MessageType>,\r\n        dialogs: [\r\n            {id: 1, name: 'gena'},\r\n            {id: 2, name: 'misha'},\r\n            {id: 3, name: 'pasha'},\r\n            {id: 4, name: 'nikita'},\r\n            {id: 5, name: 'tima'},\r\n        ] as Array<DialogType>,\r\n    count: 6,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst dialogReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: state.count,\r\n                message: action.message,\r\n            };\r\n\r\n            return {...state,\r\n                messages: [newMessage, ...state.messages],\r\n                count: state.count+1\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addMessageActionCreator: (message: string) => ({\r\n        type: ADD_MESSAGE,\r\n        message\r\n    }as const)\r\n}\r\n\r\n\r\nexport default dialogReducer;","import React from 'react';\r\nimport profileReducer from \"../redux/profileReducer\";\r\nimport dialogReducer from \"../redux/dialogReducer\";\r\nimport musicReducer from \"../redux/musicReducer\";\r\nimport friendsReducer from \"../redux/friendsReducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst ADD_SONG = 'ADD-SONG';\r\nconst ADD_FRIEND = 'ADD-FRIEND';\r\nconst UPDATE_NEW_SONG_TEXT = 'UPDATE-NEW-SONG-TEXT';\r\nconst UPDATE_NEW_NEWS_TEXT = 'UPDATE-NEW-NEWS-TEXT';\r\n\r\nconst UPDATE_NEW_PICTURE_TEXT = 'UPDATE-NEW-PICTURE-TEXT';\r\n\r\n\r\nlet store = {\r\n\r\n    _state: {\r\n        profile: {\r\n            posts: [\r\n\r\n                {\r\n                    id:1,\r\n                    post: 'First Friend GEna DaUn',\r\n                    user: 'Гена',\r\n                    time: 'сегодня в 11 утра',\r\n                    picture: 'https://sun9-35.userapi.com/impf/c846522/v846522118/18d9eb/E5pvZnPh9hU.jpg?size=1920x1080&quality=96&sign=028f51047f18db27b0be9c3f5f266980&type=album',\r\n                    avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    time: 'сегодня',\r\n                    post: 'У меня такой же )))',\r\n                    user: 'Gena',\r\n                    avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n\r\n                    picture: 'https://avatarko.ru/img/kartinka/1/Crazy_Frog.jpg',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    post: '1111',\r\n                    user: 'Pavel  -   ',\r\n                    time: 'сегодня в ',\r\n                    picture: 'https://99px.ru/sstorage/53/2020/12/mid_318736_308803.jpg',\r\n                    avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album'\r\n                },\r\n\r\n                {\r\n                    id: 4,\r\n                    post: '222222222',\r\n                    user: 'Maks  -   ',\r\n                    time: 'сегодня в 11 ',\r\n                    picture: 'https://oir.mobi/uploads/posts/2021-03/1616973116_8-p-fon-dlya-rabochego-stola-zhivie-oboi-9.jpg',\r\n                    avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album'\r\n                },\r\n                {\r\n                    id: 5,\r\n                    post: '33333333333333',\r\n                    user: 'Ga4ibyan  -   ',\r\n                    time: 'сегодня в 11 утра',\r\n                    picture: 'https://wallpapershome.ru/images/pages/ico_h/21906.jpg',\r\n                    avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album'\r\n                }\r\n            ],\r\n            newnewstext: '',\r\n            newpicturetext: '',\r\n\r\n        },\r\n        dialogs: {\r\n            messages: [\r\n                {id: 1, message: 'loh gena loh'},\r\n                {id: 2, message: 'loh misha loh'},\r\n                {id: 3, message: 'loh pasha loh'},\r\n                {id: 4, message: 'loh nikita loh'},\r\n                {id: 5, message: 'loh tima loh'},\r\n            ],\r\n            dialogs: [\r\n                {id: 1, name: 'gena'},\r\n                {id: 2, name: 'misha'},\r\n                {id: 3, name: 'pasha'},\r\n                {id: 4, name: 'nikita'},\r\n                {id: 5, name: 'tima'},\r\n            ],\r\n            newmessagetext: '',\r\n        },\r\n        friends: {\r\n            friendDate: [\r\n                {\r\n                    id: 1,\r\n                    link: 'https://vk.com/dank_af',\r\n                    name: 'Геннадий',\r\n                    avatar: 'https://meragor.com/files/styles//ava_800_800_wm/ava-241.jpg',\r\n                    surname: 'Льянов'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    link: 'https://vk.com/get_imba',\r\n                    name: 'Тимур',\r\n                    surname: 'Льянов',\r\n                    avatar: 'https://i.pinimg.com/originals/d2/27/67/d22767e3ecd58f14c839092e1dfe3852.jpg'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    link: 'https://vk.com/evgeniasims',\r\n                    name: 'Евгение',\r\n                    surname: 'ЗигХайретдинов',\r\n                    avatar: 'http://sun9-67.userapi.com/s/v1/ig2/6JU7DbnLm46xuMVj9w2gHBOoagBCXOCkTilVO__oHcVOxVdwYVIxZAfEKG7R9_EnXUb-CLjsqkl-cuetoovsmwDU.jpg?size=200x0&quality=96&crop=1,1,1197,1197&ava=1'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    link: 'https://vk.com/id153839551',\r\n                    name: 'Кекс',\r\n                    surname: 'Слесырев',\r\n                    avatar: 'https://anime-fans.ru/wp-content/uploads/2021/01/Ochen-smeshnye-anime-avy_01.jpg'\r\n                },\r\n                {\r\n                    id: 5,\r\n                    link: 'https://vk.com/steelfella',\r\n                    name: 'Макс',\r\n                    surname: 'Куриборг',\r\n                    avatar: 'https://cspromogame.ru//storage/upload_images/avatars/3935.jpg'\r\n                },\r\n                {\r\n                    id: 6,\r\n                    link: 'https://vk.com/relaxwithbatya',\r\n                    name: 'lov',\r\n                    surname: 'u',\r\n                    avatar: 'https://i.ytimg.com/vi/Q7fMCVoal08/sddefault.jpg'\r\n                },\r\n            ]\r\n        },\r\n        sidebar: {\r\n            bestfriends: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Геннадий',\r\n                    avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                    surname: 'Льянов'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Тимур',\r\n                    surname: 'Льянов',\r\n                    avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Никита',\r\n                    surname: 'кесырев',\r\n                    avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album'\r\n                }\r\n            ]\r\n        },\r\n        musics: {\r\n            songs: [\r\n                {\r\n                    id: 1, nameSong: 'gachimuchi -' +\r\n                        ' А как насчёт ♂ANAL?♂'\r\n                },\r\n                {\r\n                    id: 2, nameSong: 'GACHIMUCHI -' +\r\n                        ' Чудо (right version)'\r\n                },\r\n                {\r\n                    id: 3, nameSong: 'gachimuchi -' +\r\n                        ' ♂️Филипп Киркоров - Это не снег♂'\r\n                },\r\n                {\r\n                    id: 4, nameSong: 'gachimuchi -' +\r\n                        ' ♂️Спокойная ночь - Кино♂'\r\n                },\r\n                {\r\n                    id: 5, nameSong: 'GachiMuchi -' +\r\n                        ' Я назову планету'\r\n                },\r\n            ],\r\n            newsongtext: \"\",\r\n        },\r\n        news: {\r\n            new: [\r\n                {\r\n                    id: 1,\r\n                    time: 'сегодня в 11 утра',\r\n                    post: 'Вчера посмотрел атаку титанов, это просто 12 из 10 археэпично',\r\n                    user: 'Timur Brat',\r\n                    avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album',\r\n                    picture: 'https://cdn.shazoo.ru/351151_Z0bYpFdK6E_8010ba67_497b_4038_9c6e_f9b0fa9c.jpg',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    time: 'сегодня в 9 утра',\r\n                    post: 'Посмотрел \"Твое Имя\", мне понравилось',\r\n                    user: 'Gena Daun',\r\n                    avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                    picture: 'https://www.mirf.ru/wp-content/uploads/2020/09/update_1___multi_sourced_4k__kimi_no_na_wa_by_assassinwarrior_dajydsn-fullview.jpg',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    time: 'вчера в 12 ночи',\r\n                    post: 'Всем привет, я посмотрел жожо, кто пойдет играть в тим форстрес?? А еще мать в канаве моя',\r\n                    user: 'Pavel Palov',\r\n                    avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album',\r\n                    picture: 'https://cdn.shazoo.ru/c800x360/308676_lBgur9s5CP_cherry.jpg',\r\n                },\r\n                {\r\n                    id: 4,\r\n                    time: 'позавчера',\r\n                    post: 'Я русский хуле',\r\n                    user: 'Maks Voin',\r\n                    avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album',\r\n                    picture: 'https://cdni.rbth.com/rbthmedia/images/2020.07/original/5f1e888885600a2608563f65.jpg',\r\n                },\r\n                {\r\n                    id: 5,\r\n                    time: 'ну он просто лох',\r\n                    post: 'я бабизян че тут сказать',\r\n                    user: 'Sergey Ga4ibyan',\r\n                    avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album',\r\n                    picture: 'https://icdn.lenta.ru/images/2021/01/20/16/20210120164051128/wide_4_3_ad0a8dedf4f24c1002d87743b6451b83.jpg',\r\n                },\r\n                {\r\n                    id: 6,\r\n                    time: 'пару лет назал',\r\n                    post: 'я трахнул твою мать',\r\n                    user: 'Nikita Kesыrev',\r\n                    avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album',\r\n                    picture: 'https://sun9-82.userapi.com/impg/ziamtmx6MeWC86P94nk9X4L2SLpjv0dZGL3M8A/w0n8GaVm8RQ.jpg?size=952x916&quality=96&sign=cf73c41996bb64455764b18ebbfbdd63&type=album',\r\n                }\r\n            ],\r\n\r\n        },\r\n    },\r\n\r\n    _reRenderAllTree() {\r\n        console.log('state changed')\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._reRenderAllTree = observer;\r\n    },\r\n\r\n\r\n    dispatch(action) {\r\n\r\n        this._state = profileReducer(this._state, action)\r\n        this._state.dialogs = dialogReducer(this._state.dialogs, action)\r\n        this._state.musics = musicReducer(this._state.musics, action)\r\n        this._state.friends = friendsReducer(this._state.friends, action)\r\n\r\n        this._reRenderAllTree(this._state);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    window.store = store;","import React from 'react';\r\nimport classes from './GenaPosts.module.css'\r\nimport GenaPost from './GenaPost/GenaPost';\r\nimport {addPost} from \"../../../OldStateOldClassComponents/StoreFirstVersion\";\r\n\r\n\r\nconst GenaPosts = (props) => {\r\n\r\n\r\n\r\n  return <div className={classes.MyPostsAll}>\r\n    <h3> My posts </h3>\r\n    \r\n    <div className={classes.CreateNewPost} >\r\n      Create New Post\r\n    </div>\r\n    <div>\r\n      <div>\r\n                <textarea className={classes.text} />\r\n      </div>\r\n      <div>\r\n        <button className={classes.button} >Send</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default GenaPosts;","import React from 'react';\r\n\r\nimport classes from './GenaProfileInfo.module.css'\r\n\r\nconst GenaProfileInfo = () => {\r\n    return <div>\r\n        <div className={classes.wallpaper}>\r\n            <img\r\n                src=\"https://sun9-78.userapi.com/impg/NrSWcMzkCka2yzSn3A9lmLm2c6Jg5QGPOKYM_A/aZTfjfpwHRo.jpg?size=1600x648&quality=96&sign=2e39caafd67c569a65eca8d1d40f223a&type=album\"/>\r\n        </div>\r\n      <div className={classes.description}>\r\n        <div className={classes.avatar}>\r\n            <img src=\"https://sun9-74.userapi.com/impg/K_kf_03-X8lP2uixO9tzjxIjrNyUztz0yAMcdw/cBvjDD8FRDs.jpg?size=640x640&quality=96&sign=cc6043c92263a14c75dc8e5517f59cf8&type=album\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfileInfo;","import React from 'react';\r\nimport GenaPosts from './GenaPosts/GenaPosts';\r\n\r\nimport GenaProfileInfo from \"./GenaProfileInfo/GenaProfileInfo\";\r\n\r\n\r\nconst GenaProfile = (props) => {\r\n\r\n    return <div>\r\n        <GenaProfileInfo/>\r\n\r\n        <GenaPosts posts={props.posts} dispatch={props.dispatch}/>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfile;","import React from 'react';\r\n\r\n\r\nconst NikitaProfile = (props) => {\r\n\r\n    return <div>\r\n    <img src='https://sun9-59.userapi.com/impg/-0uRmUFYMzw1edpnx6Zf26nyDK5C9k8lfa1ZNA/mY7HJSdsAJU.jpg?size=537x645&quality=96&sign=ebb93117806db9e5e54a3de35211efc0&type=album' />\r\n    </div>\r\n}\r\n\r\nexport default NikitaProfile;","import React from 'react';\r\nimport classes from './Eachmessage.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    message: string\r\n}\r\n\r\n\r\nconst Eachmessage: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.massages}>\r\n                <div className={classes.massage}> {props.message}  </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Eachmessage;","import React from 'react';\r\nimport classes from './Eachdialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    key: number\r\nid: number\r\nname: string\r\n}\r\n\r\nconst Eachdialog: React.FC<PropsType> = (props) => {\r\n\r\n           let path = \"/diallogs/\" + props.id;\r\n    return (\r\n                < div className={classes.dialog + ' ' + classes.active}>\r\n                    <NavLink to={path} activeClassName={classes.activeLink}> {props.name}</NavLink>\r\n                </div >\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Eachdialog;","import React from 'react';\r\nimport classes from './Diallogs.module.css'\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport Eachmessage from \"./Eachmessage/Eachmessage\";\r\nimport Eachdialog from \"./Eachdialog/Eachdialog\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogReducer\";\r\n\r\n\r\n\r\nconst initialValues: MyFormValues = {\r\n    message: 'wish',\r\n}\r\n\r\ntype PropsType = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n    addMessageActionCreator: (newText: string) => void\r\n}\r\n\r\ntype MyFormValues = {\r\n    message: string;\r\n}\r\ntype OnSubmitType = {\r\n    onSubmit: (values: {message: string}) => void\r\n}\r\ntype all = PropsType & MyFormValues & OnSubmitType\r\n\r\nconst Diallogs: React.FC<all>  = (props) => {\r\n    let dialogsElements = props.dialogs.map(el => <Eachdialog key={el.id} id={el.id} name={el.name}/>)\r\n    let messageElements = props.messages.map(el => <Eachmessage key={el.id} message={el.message}/>)\r\n\r\n    const onSubmit = (values: {message: string}) =>{\r\n        props.addMessageActionCreator(values.message)\r\n    }\r\n\r\n    return (\r\n        < div>\r\n           <AddMessageForm onSubmit={onSubmit}/>\r\n            < div className={classes.dialogs}>\r\n\r\n                < div className={classes.dialogsitem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={classes.massages1}>\r\n                    {messageElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst AddMessageForm: React.FC<OnSubmitType> = (props) => {\r\n    return (<Formik initialValues={initialValues} onSubmit={props.onSubmit}>\r\n            <Form >\r\n                <div className={classes.seacrh}>\r\n                    <Field type='text' className={classes.text} name='message' component='textarea'/>\r\n                    <button className={classes.but} type='submit'> Add Message</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Diallogs;","import React from 'react';\r\n\r\nimport {actions } from \"../../redux/dialogReducer\";\r\nimport Diallogs from \"./Diallogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        messages: state.dialogs.messages,\r\n        dialogs: state.dialogs.dialogs\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {...actions}),\r\n    withAuthRedirect\r\n)(Diallogs);","import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"../Profile/MyPosts/MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport * as Yup from 'yup'\r\n\r\n\r\ntype MyFormValues = {\r\n    new: string\r\n    pic: string\r\n}\r\ntype  PropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n}\r\n\r\n\r\n\r\nconst AddPostFormik: React.FC<PropsType> = (props) => {\r\n    const initialValues: MyFormValues = {\r\n        new: '',\r\n        pic: '',\r\n\r\n    }\r\n    const validationSchema = Yup.object({\r\n        new: Yup.string()\r\n            .required('Required')\r\n            .max(50, \"Too many symbols\"),\r\n        pic: Yup.string()\r\n            .required('Required')\r\n    })\r\n\r\n    const onSubmit = ( values: { new: string, pic: string }) => {\r\n        props.addPostActionCreator(values.new, values.pic)\r\n\r\n    }\r\n    return (<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        <Form>\r\n            <span className={classes.fieldPosts}>\r\n\r\n                <div className={classes.error}> <ErrorMessage name='new'/></div>\r\n                <div className={classes.error}><ErrorMessage name='pic'/></div>\r\n                <div> </div>\r\n                <Field className={classes.textarea} placeholder=\"ваша новость\" type='text' name='new'\r\n                      component='textarea'/>\r\n                <Field className={classes.textarea} placeholder=\"ваше картинка\" type='text' name='pic'\r\n                       component='textarea'/>\r\n <button className={classes.button}>Опубликовать</button>\r\n\r\n            </span>\r\n\r\n            </Form>\r\n    </Formik>)\r\n\r\n}\r\nexport default AddPostFormik","import React from 'react';\r\nimport classes from './News.module.css'\r\nimport AddPostFormik from \"../AddPostForm/AddPostForm\";\r\nimport EachNew from \"./EachNew/EachNew\";\r\n\r\nimport {PostsType} from \"../../Types/Types\";\r\n\r\n\r\ntype PropsType = {\r\n    newsElements: Array<PostsType>\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n\r\n}\r\n\r\n\r\nconst News: React.FC<PropsType>  =(props) => {\r\n\r\n    let newsElements = props.newsElements\r\n\r\n    return (\r\n        < div className={classes.content}>\r\n           <div>\r\n               <div>\r\n                   <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n               </div>\r\n           </div>\r\n            {newsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './EachNew.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    post: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n}\r\n\r\nconst EachNew: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.news}>\r\n\r\n                <div className={classes.newsName}>\r\n\r\n                <img src={props.avatar} className={classes.ava} />\r\n                    <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={classes.content}>\r\n                        {props.post}\r\n                    </div>\r\n\r\n                <img src={props.picture} className={classes.picture}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachNew;","import React from 'react';\r\nimport News from \"./News\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {actions} from \"../../redux/profileReducer\";\r\nimport EachNew from \"./EachNew/EachNew\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        newsElements: state.news.new.map(el => <EachNew key={el.id} post={el.post} time={el.time} avatar={el.avatar} user={el.user}\r\n                                                        picture={el.picture}/>)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,{...actions}),\r\n     withAuthRedirect\r\n)\r\n(News)\r\n","import React from 'react';\r\nimport classes from './Best.module.css'\r\nimport {bestfriendsType} from \"../../redux/sideBarReducer\";\r\n\r\ntype PropsType = {\r\n    key: number\r\n    name: string\r\n    surname: string\r\n    avatar: string\r\n}\r\n\r\nconst Best: React.FC<PropsType>  = (props) => {\r\n    return <div>\r\n\r\n\r\n        <div className={classes.item}>\r\n            <img src={props.avatar} />\r\n            <span className={classes.name} > {props.name} {props.surname}</span>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Best;","import React from 'react';\r\nimport classes from './NavBar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Best from \"./Best\";\r\nimport {bestfriendsType} from \"../../redux/sideBarReducer\";\r\n\r\n\r\ntype PropsType = {\r\n  bestfriends: Array<bestfriendsType>\r\n}\r\n\r\n\r\nconst NavBar: React.FC<PropsType>  = (props) => {\r\n\r\n   let bestfriends = props.bestfriends.map(el =>  <Best key={el.id} name = {el.name} surname= {el.surname} avatar={el.avatar}/>)\r\n\r\n  return <nav className={classes.nav}>\r\n\r\n    <div className = {classes.item}>\r\n      <NavLink to = \"/profile\" activeClassName={classes.activeLink}>My page</NavLink>\r\n    </div>\r\n    <div className = {classes.item}>\r\n      <NavLink  to = '/news' activeClassName={classes.activeLink}>News</NavLink>\r\n    </div>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/diallogs' activeClassName={classes.activeLink}>Messages</NavLink>\r\n    </div>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/friends' activeClassName={classes.activeLink}> Friends</NavLink>\r\n    </div>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/users' activeClassName={classes.activeLink}> Пользователи</NavLink>\r\n    </div>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/music' activeClassName={classes.activeLink}>Music</NavLink>\r\n    </div>\r\n    <div className={classes.BestFriends}>\r\n      Best Friends\r\n    </div>\r\n    <span> {bestfriends} </span>\r\n  </nav>\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport NavBar from \"./NavBar\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n  return {\r\n    bestfriends: state.sideBar.bestfriends\r\n  }\r\n}\r\nlet mapDispatchToProps =() => {\r\n  return {\r\n    }\r\n}\r\n\r\nlet NavBarContainer = connect(mapStateToProps, mapDispatchToProps)(NavBar)\r\n\r\nexport default NavBarContainer;","export default __webpack_public_path__ + \"static/media/DZIAss-5O_I.d5bd3e11.jpg\";","import React from \"react\";\r\nimport classes from \"./users.module.css\";\r\nimport photoAva from \"../../assets/images/DZIAss-5O_I.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {photosType, UserType} from \"../../Types/Types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    key: number\r\n    unfollowThunk: (userId: number) => void\r\n    followThunk: (id: number, photo: string | null, name: string) => void\r\n}\r\n\r\nlet EachUser: React.FC<PropsType> = (props) => {\r\n    let user= props.user\r\n    return <div key={user.id} className={classes.newUsers}>\r\n                <div className={classes.userInfo}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : photoAva} className={classes.userPhoto}/>\r\n                    </NavLink>\r\n                    <span className={classes.userInfoShort}>\r\n                <div className={classes.fullname}>\r\n                    {user.name}\r\n                </div>\r\n                <div className={classes.status}>\r\n                    {user.status != null ? user.status : 'я тут'}\r\n                </div>\r\n                 <div className={classes.country}>\r\n                    Russia\r\n                 </div>\r\n                <div className={classes.city}>\r\n                    Moscow\r\n                </div>\r\n            </span>\r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button onClick={() => { props.unfollowThunk(user.id) }} className={classes.buttons}> Удалить из друзей </button> :\r\n                        <button className={classes.buttons} onClick={() => { props.followThunk(user.id, user.photos.small, user.name)}}> Добавить в друзья </button>}\r\n                </div>\r\n\r\n            </div>\r\n}\r\n\r\nexport default EachUser","import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages:  Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber -1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={classes.paginator}>\r\n        {portionNumber >1 &&\r\n        <button onClick={()=> { setPortionNumber(portionNumber-1)}}> back </button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={cn ({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                }}> {p} </span>\r\n            })}\r\n        {portionCount> portionNumber &&\r\n        <button onClick={()=> {setPortionNumber(portionNumber + 1)}}> next </button>}\r\n        <button onClick={()=> {setPortionNumber(portionNumber=portionCount)}}> last </button>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport EachUser from \"./EachUser\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport {photosType, UserType} from \"../../Types/Types\";\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    unfollowThunk: (userId: number) => void\r\n    followThunk: (id: number, photo: string | null, name: string) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = (props)  => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage}\r\n                    totalItemsCount={props.totalItemsCount}\r\n                    pageSize={props.pageSize}\r\n                    onPageChanged={props.onPageChanged}\r\n                   portionSize={10}/>\r\n       <div>{\r\n            props.users.map(u => <EachUser user={u}\r\n                                           key={u.id}\r\n                                           unfollowThunk={props.unfollowThunk}\r\n                                           followThunk={props.followThunk} />)\r\n        }</div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Users","export default __webpack_public_path__ + \"static/media/04de2e31234507.564a1d23645bf.1cbc65b1.gif\";","import preLoader from \"../../../assets/images/04de2e31234507.564a1d23645bf.gif\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preLoader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","\r\n\r\n\r\n\r\n// export  const getFriendsUsers =(state) =>{\r\n//     return state.friends.users\r\n// }\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\nexport  const getUsers =(state: AppStateType) =>{\r\n    return state.friends.users\r\n}\r\nexport  const getAPageSize =(state: AppStateType) =>{\r\n    return state.friends.pageSize\r\n}\r\nexport  const getTotalCount =(state: AppStateType) =>{\r\n    return state.friends.totalItemsCount\r\n}\r\nexport  const getCurrentPage =(state: AppStateType) =>{\r\n    return state.friends.currentPage\r\n}\r\nexport  const getisFetching =(state: AppStateType) =>{\r\n    return state.friends.isFetching\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUsersThunkCreater, unfollowThunk, followThunk\r\n} from \"../../redux/friendsReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloder/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getAPageSize,\r\n    getCurrentPage,\r\n    getisFetching,\r\n    getTotalCount, getUsers\r\n} from \"../../redux/friendsSelectors\";\r\nimport {UserType} from \"../../Types/Types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    unfollowThunk: (userId: number) => void\r\n    followThunk: (id: number, photo: string | null, name: string) => void\r\n    getUsersThunkCreater: (currentPage: number, pageSize: number) => void\r\n\r\n}\r\n\r\ntype OwnPropsType = {\r\n}\r\ntype PropsType = MapStatePropsType  & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} =this.props\r\n        this.props.getUsersThunkCreater(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsersThunkCreater(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n           {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                totalItemsCount={this.props.totalItemsCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollowThunk={this.props.unfollowThunk}\r\n                followThunk={this.props.followThunk}\r\n            />\r\n\r\n\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType  => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getAPageSize(state),\r\n        totalItemsCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getisFetching(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n     withAuthRedirect,\r\n    // <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps,\r\n    {\r\n        getUsersThunkCreater, unfollowThunk, followThunk,\r\n    }))(UsersContainer)","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\ntype all = PropsType\r\n\r\n\r\nconst ProfileStatusWithHooks : React.FC<all> =(props)=>{\r\n\r\n\r\n    let [editMode1, setEditMode1] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( ()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = ()=>{\r\n        setEditMode1(true)\r\n    }\r\n\r\n    const deactivateEditMode = ()=>{\r\n            setEditMode1(false)\r\n       props.updateStatusThunk(status)\r\n\r\n    }\r\n\r\n   const onStatusChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode1 &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n                </div>\r\n                }\r\n                {editMode1 &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport { Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {ProfileType} from \"../../../Types/Types\";\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n\r\n})\r\n\r\ntype PropsType = {\r\n    onSubmit: (values: any) => void\r\n    initialValues: ProfileType\r\n    profile: ProfileType\r\n    saveProfile: (profile: ProfileType) => any\r\n    isError: boolean\r\n}\r\n\r\n\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({initialValues, onSubmit, profile, isError}) =>{\r\n\r\n\r\n\r\n\r\n\r\n    return ( <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form>\r\n            {<div> <button >Save </button></div>}\r\n            <div className={classes.info}>\r\n                Name\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"ваше имя\" type='text' name='fullName'\r\n                   component='textarea'/>\r\n\r\n            <div className={classes.info}>\r\n                <b>Info</b>\r\n            </div>\r\n            <div >\r\n                <b>About me</b>:\r\n            </div>\r\n                <Field className={classes.textarea} placeholder=\"О вас\" type='text' name='aboutMe'\r\n                       component='textarea'/>\r\n            <div >\r\n              <b className={classes.info}> Contacts</b>\r\n                <div>{isError ? <span className={classes.error}> Wrong URL </span> : null} </div>\r\n                {Object.keys(profile.contacts).map(key=>{\r\n              return <div key={key} className={classes.info}>\r\n                <b> {key}: <Field  placeholder={key} type='text' name={\"contacts.\" + key}\r\n                                  component='input'/> </b>\r\n              </div>\r\n\r\n         })}\r\n         </div>\r\n\r\n\r\n            <div><b>lookingForAJob</b> </div>\r\n                <Field className={classes.textarea}  type='checkbox' name='lookingForAJob'/>\r\n\r\n            <div>\r\n                <b>My skills</b>\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"Ваши навыки\" type='text' name='lookingForAJobDescription'\r\n                    component='textarea'/>\r\n\r\n\r\n\r\n            {/*<div>userId - {profile.userId}</div>*/}\r\n            </Form>\r\n        </Formik>\r\n    )}\r\n\r\n\r\nexport default ProfileDataForm","import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloder/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {contactsType, ProfileType} from \"../../../Types/Types\";\r\nimport {promises} from \"dns\";\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile ,status, updateStatusThunk, isOwner, savePhoto, saveProfile, isError} ) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    if(!profile){\r\n        return <Preloader />}\r\n\r\n    const onSubmit = ( values: ProfileType) => {\r\n        saveProfile(values).then(\r\n            ()=>{\r\n                setEditMode(false)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>)=>{\r\n       if( e.target.files?.length){\r\n           // if (r.target.files && e.target.files.lenght){\r\n        savePhoto(e.target.files[0])\r\n       }\r\n    }\r\n\r\n\r\n    return <div>\r\n      <div className={classes.description}>\r\n        <div >\r\n            <img className={classes.avatar} src={ profile.photos.large === null ? 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png' : profile.photos.large }/>\r\n            {isOwner && <input onChange={mainPhotoSelected} type={'file'}/>}\r\n        </div>\r\n          <div className={classes.info}>\r\n              Status (дабл клик и можно менять )\r\n          </div>\r\n          <b><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk}/></b>\r\n          {editMode ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile} saveProfile={saveProfile} isError={isError}/> :\r\n          <ProfileData profile={profile} isOwner={isOwner} goToEditMode={()=> {setEditMode(true)}}/>}\r\n      </div>\r\n    </div>\r\n}\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, isOwner, goToEditMode}) =>{\r\n\r\n   return ( <div>\r\n           {isOwner && <div> <button className={classes.editButton} onClick={goToEditMode} >Edit Profile Info</button></div>}\r\n    <div className={classes.info}>\r\n        Name\r\n    </div>\r\n    <b>{profile.fullName}</b>\r\n\r\n    <div className={classes.info}>\r\n        <b>Info</b>\r\n    </div>\r\n    <div >\r\n        <b>About me</b>:  {profile.aboutMe}\r\n    </div>\r\n    <div >\r\n        <b className={classes.info}>Contacts</b>  :{Object.keys(profile.contacts).map((key)=>{\r\n        return <Contact key={key} contactTitle={key} ContactValue={profile.contacts[key as  keyof contactsType]}/>\r\n    })}\r\n    </div>\r\n\r\n    <div> <b>lookingForAJob</b>  {profile.lookingForAJob ? 'yes' : 'no'  }</div>\r\n    <div>{ profile.lookingForAJob &&\r\n    <div>\r\n        <b> My skills </b> -  {profile.lookingForAJobDescription}\r\n    </div>\r\n    }\r\n\r\n    </div>\r\n    </div>\r\n   )}\r\n\r\ntype ContactsPropsType = {\r\n    contactTitle: string\r\n    ContactValue: string\r\n}\r\nconst Contact: React.FC<ContactsPropsType> = ({contactTitle, ContactValue})=>{\r\n    return <div><b className={classes.info}>{contactTitle}</b>: {ContactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css'\r\nimport {PostsType} from \"../../../../Types/Types\";\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    new: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n    deletePost: ( id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n    let deletePost = ()=>{\r\n        props.deletePost(props.id)\r\n    }\r\n\r\n  return < div>\r\n\r\n    <div className={classes.news}>\r\n\r\n      <div className={classes.newsName}>\r\n\r\n        <img src={props.avatar} className={classes.ava} />\r\n        <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        {props.new}\r\n      </div>\r\n    <div>\r\n      <img src={props.picture} className={classes.picture}/>\r\n        <button onClick={deletePost}> delete post </button>\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport AddPostFormik from \"../../AddPostForm/AddPostForm\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostsType, UserType} from \"../../../Types/Types\";\r\n\r\nexport type MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n    deletePost: ( id: number) => void\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\nconst MyPosts: React.FC<PropsType> = (props)=> {\r\n\r\n    let postDate = props.posts.map(el => <Post key={el.id} id={el.id} new={el.post} time={el.time} avatar={el.avatar} user={el.user} picture={el.picture} deletePost={props.deletePost}/>)\r\n\r\n\r\n    return <div className={classes.MyPostsAll}>\r\n\r\n        <h1> My posts </h1>\r\n\r\n        <div className={classes.CreateNewPost}>\r\n            <h2>Create New Post </h2>\r\n        </div>\r\n        <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n        <div className={classes.posts}>\r\n            {postDate}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts, {MapStatePropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {actions} from \"../../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        posts: state.profile.posts\r\n    } as MapStatePropsType\r\n}\r\n// let mapDispatchToProps: ThunkType =(dispatch) => {\r\n//     return {\r\n//         addPostActionCreator: (newText: string, pic: string) => {\r\n//             dispatch(addPostActionCreator(newText, pic))\r\n//         },\r\n//         deletePost: (id: number) =>{\r\n//             dispatch(deletePost(id))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n let MyPostsContainer = connect(mapStateToProps, {...actions } )(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType, UserType} from \"../../Types/Types\";\r\nimport {number} from \"yup\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo isError={props.isError}  saveProfile={props.saveProfile}  savePhoto={props.savePhoto} isOwner={props.isOwner}  profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk, getStatusThunk, savePhoto, saveProfile, updateStatusThunk} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {ProfileType, UserType} from \"../../Types/Types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null,\r\n    status: string\r\n    AuthorizedUserId: number | null\r\n    isAuth: boolean\r\n    isError: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfileThunk: (userId: number | null) => void\r\n    savePhoto: (file: File) => void\r\n    getStatusThunk: (userId: number) => void\r\n    updateStatusThunk: (status: string) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\ntype PropsType = MapStatePropsType  & MapDispatchPropsType  & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType>{\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.AuthorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfileThunk(userId as number)\r\n        this.props.getStatusThunk(userId as number)\r\n    }\r\n\r\n\r\ncomponentDidMount()\r\n{\r\n    this.refreshProfile()\r\n}\r\n\r\ncomponentDidUpdate(prevProps: PropsType, prevState: AppStateType)\r\n{\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n    }\r\n\r\n}\r\n\r\nrender()\r\n{\r\n    return (\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                 updateStatusThunk={this.props.updateStatusThunk}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 savePhoto={this.props.savePhoto}\r\n                 isError={this.props.isError}\r\n                 saveProfile={this.props.saveProfile}\r\n        />\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType  => {\r\n    return {\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    AuthorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isError: state.profile.isError\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfileThunk, savePhoto, getStatusThunk, updateStatusThunk, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n  getAuthThunk: () => void\r\n  logOutThunk: () => void\r\n  isAuth: boolean\r\n  login: string | null\r\n  userAva: string | null,\r\n}\r\n\r\nconst Header: React.FC<PropsType> = (props) => {\r\n\r\n  return <header className={classes.header} >\r\n    <img className={classes.logo} src=\"http://faytan.ru/wp-content/uploads/2014/07/cut-background-photoshop-9.png\" />\r\n    <img className={classes.track} src=\"https://sun9-32.userapi.com/impg/qg5AFer2dhOhVVyyy4pIpnAVc7GbesiNeYMbNw/rLelgKxHa-A.jpg?size=355x30&quality=96&sign=aa0eceeeaf43cfd5c9144a979d3ff045&type=album\" />\r\n\r\n\r\n      <span className={classes.loginBlock}>\r\n       {props.isAuth? <span>\r\n        <img src={props.userAva as string} className={classes.userAvatar}/>\r\n           <NavLink to=\"/profile\">{props.login}</NavLink>\r\n       <button onClick={props.logOutThunk}> logIot</button></span> : <NavLink to={'/login'}>Sign in</NavLink>}\r\n   </span>\r\n\r\n  </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, ResultCodeEnum, ResultCodeWithCaptchaEnum, securityAPI, usersAPI} from \"../api/api\";\r\n\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\n\r\nconst SET_USER_DATE = 'AUTH/SET_USER_DATE';\r\nconst SET_USER_AVATAR = 'AUTH/SET_USER_AVATAR';\r\nconst SET_ERROR = 'AUTH/SET_ERROR';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'AUTH/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    userAva: null as string | null,\r\n    isError: false,\r\n    captchaUrl: null as string | null,\r\n}\r\n\r\nexport type initialStateType= typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATE:\r\n         return {\r\n                ...state,\r\n             ...action.data,\r\n\r\n            }\r\n\r\n        case SET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                userAva: action.userAva,\r\n\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: SET_USER_DATE,\r\n        data: {\r\n            userId, email, login, isAuth\r\n        }} as const) ,\r\n    setUserAvatar : (avatar: string | null)  => ({\r\n        type: SET_USER_AVATAR,\r\n        userAva: avatar\r\n    }as const),\r\n    setError: (Error: boolean) => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string | null) => ({\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        captchaUrl\r\n    }as const)\r\n}\r\n\r\n\r\nexport const getAuthThunk = (): ThunkType =>async (dispatch) =>{\r\n      let response = await authAPI.getAuth()\r\n                if(response.resultCode === ResultCodeEnum.Success) {\r\n                    let {id, email, login} = response.data\r\n                    dispatch(actions.setAuthUserData(id, email, login, true))\r\n                    usersAPI.getProfilePhoto()\r\n                        .then(response => {\r\n                            dispatch(actions.setUserAvatar(response.photos.small))\r\n                         })\r\n                }\r\n    }\r\n\r\nexport const loginThunk = (email: string, password: string, rememberMe: boolean, captcha: string | null): ThunkType =>async (dispatch) =>{\r\n\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                  await  dispatch(getAuthThunk())\r\n                    dispatch(actions.setError(false))\r\n                    dispatch(actions.getCaptchaUrlSuccess(null))\r\n                }\r\n                 else  {\r\n                    if (response.data.resultCode === ResultCodeWithCaptchaEnum.CaptchaIsRequired){\r\n                        await  dispatch(gerCaptchaUtl())\r\n                    }\r\n                       dispatch(actions.setError(true))\r\n                }\r\n}\r\n\r\nexport const logOutThunk = (): ThunkType =>async (dispatch) =>{\r\n    let response = await authAPI.logOut()\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                    dispatch(actions.setAuthUserData(null, null, null, false))\r\n                }\r\n}\r\nexport const gerCaptchaUtl = (): ThunkType =>async (dispatch) =>{\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n        dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {getAuthThunk, logOutThunk} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    userAva: string | null,\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getAuthThunk: () => void\r\n    logOutThunk: () => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n}\r\ntype PropsType = MapStatePropsType  & MapDispatchPropsType  & OwnPropsType\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType) =>({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userAva: state.auth.userAva\r\n    })\r\n\r\n\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    getAuthThunk, logOutThunk\r\n})(HeaderContainer);","import React from \"react\";\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from './Login.module.css'\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\ntype MyFormValues = {\r\n    email: string\r\n    password: string\r\n    checkbox: boolean\r\n    captcha: string | null\r\n}\r\ntype MapStatePropsType = {\r\n    isAuth?: boolean\r\n    isError: boolean\r\n    captchaUrl: string | null\r\n\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    loginThunk: (email: string, password: string, rememberMe: boolean, captcha: string | null)=> void\r\n}\r\n\r\ntype OwnPropsType= {\r\n\r\n}\r\n\r\nconst initialValues: MyFormValues = {\r\n    email: '',\r\n    password: '',\r\n    checkbox: false,\r\n    captcha: ''\r\n}\r\n\r\ntype all = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    password: Yup.string().required('Required!'),\r\n    email: Yup.string()\r\n        .email('Invalid email format')\r\n        .required('Required'),\r\n\r\n})\r\n\r\n\r\nconst Login: React.FC<all> = (props) => {\r\n\r\n\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div className={classes.All}>\r\n        <h3> Login </h3>\r\n        <LoginForm loginThunk={props.loginThunk} isError={props.isError} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nconst LoginForm: React.FC<all>  = (props)=> {\r\n\r\n    const onSubmit = (values: {email: string,password: string, checkbox: boolean, captcha: string | null }) =>{\r\n        props.loginThunk(values.email, values.password, values.checkbox, values.captcha)\r\n    }\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Form>\r\n                <div>\r\n                    <Field placeholder={'login'} type='text' id='email' name='email' className={classes.field}/>\r\n                    <ErrorMessage name='email' />\r\n                </div>\r\n                <div>\r\n                    <Field placeholder={'password'} type='text' id='password' name='password' className={classes.field}/>\r\n                    <ErrorMessage name='password'/>\r\n                </div>\r\n                <div>{props.isError ? <span className={classes.error}> Wrong Email or Password or Captcha </span> : null} </div>\r\n                <div>\r\n                    <Field type={'checkbox'} name='checkbox' className={classes.field}/>\r\n                </div>\r\n                {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n                {props.captchaUrl && <Field placeholder={'captcha'} type='text' name='captcha' className={classes.field}/>}\r\n\r\n                <button type='submit' className={classes.button}> Submit </button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps =(state: AppStateType)=>({\r\n    isAuth: state.auth.isAuth,\r\n    isError: state.auth.isError,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {loginThunk})(Login)","import {getAuthThunk} from \"./authReducer\";\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({\r\n        type: INITIALIZED_SUCCESS,\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const initialiseApp = () =>{\r\n    return (dispatch: any) =>{\r\n      let promise =  dispatch(getAuthThunk())\r\n        promise.then( ()=> {\r\n            dispatch(actions.initializedSuccess())\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer;","\r\nexport type bestfriendsType ={\r\n    id: number,\r\n    name: string,\r\n    avatar: string\r\n    surname: string\r\n}\r\n\r\nlet initialState = {\r\n        bestfriends: [\r\n            {\r\n                id: 1,\r\n                name: 'Геннадий',\r\n                avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                surname: 'Льянов'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Тимур',\r\n                surname: 'Льянов',\r\n                avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Никита',\r\n                surname: 'кесырев',\r\n                avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album'\r\n            }\r\n        ] as Array<bestfriendsType>\r\n\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nconst sideBarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default sideBarReducer;","import {applyMiddleware, combineReducers, createStore, compose, Action} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport musicReducer from \"./musicReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport sideBarReducer from \"./sideBarReducer\";\r\nimport newsReducer from \"./newsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    dialogs: dialogReducer,\r\n    musics: musicReducer,\r\n    friends: friendsReducer,\r\n    news: newsReducer,\r\n    sideBar: sideBarReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n\r\n})\r\n\r\ntype RootReducersType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\nexport type BaseThunkType <A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store","import React, {lazy, Suspense} from 'react';\nimport './App.css';\n\nimport {HashRouter, Route, Switch, withRouter} from 'react-router-dom'\nimport Friends from \"./components/Friends/Friends\";\nimport GenaProfile from \"./components/ProfileGena/GenaProfile\";\nimport NikitaProfile from \"./components/NikitaProfile\";\nimport DiallogsContainer from \"./components/Diallogs/DiallogsContainer\";\nimport NewsContainer from \"./components/News/NewsContainer\";\nimport NavBarContainer from \"./components/NavBar/NavBarContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialiseApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloder/Preloader\";\nimport {withAuthRedirect} from \"./hoc/withAuthRedirect\";\nimport store, {AppStateType} from \"./redux/reduxStore\";\n\n// import MusicContainer from \"./components/Music/MusicContainer\";\nconst MusicContainer = lazy(() => import('./components/Music/MusicContainer'));\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    initialiseApp: ()=> void\n}\n\ntype PropsType = MapPropsType & DispatchPropsType\nclass App extends React.Component<PropsType> {\n\n    componentDidMount() {\n        this.props.initialiseApp()\n        window.onerror = function myErrorHandler(errorMsg, url, lineNumber) {\n            alert(\"Error occured: \" + errorMsg);//or any message\n            return false;\n        }\n    }\n\n\n\n    render() {\n        if(!this.props.initialized){\n            return <Preloader />\n        }\n\n\n        return (\n\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n\n                <NavBarContainer/>\n\n\n                <div className='app-wrapper-content'>\n\n                    <Switch>\n                        <Route path='/diallogs' render={() => <DiallogsContainer/>}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n\n                        <Route path='/news' render={() => <NewsContainer/>}/>\n                        <Route path='/music'\n                               render={() => {\n                                   return <Suspense fallback={<div>loading...</div>}>\n                                       <MusicContainer/>\n                                   </Suspense>\n                               }}/>\n                        <Route path='/friends'\n                               render={() => <Friends/>}/>\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/login'\n                               render={() => <Login/>}/>\n                       \n                        <Route path='/https://vk.com/dank_af' render={() => <GenaProfile/>}/>\n                        <Route path='/https://vk.com/id153839551' render={() => <NikitaProfile/>}/>\n                        {/*<Route exatc path='/' render={() => <ProfileContainer/>}/>*/}\n                    </Switch>\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps=(state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initialiseApp}\n    ))(App)\n\n\n\nconst AppAllTree: React.FC = () => {\n    return <HashRouter>\n            <Provider store={store}>\n                <AppContainer  />\n            </Provider>\n        </HashRouter>\n\n}\n\nexport default AppAllTree","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom'\nimport AppAllTree from \"./App\";\n\n\n\n\n\nReactDOM.render(<AppAllTree/>, document.getElementById('root'))\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"MyPosts_CreateNewPost__TUHrA\",\"button\":\"MyPosts_button__38MYr\",\"text\":\"MyPosts_text__1mrPN\",\"MyPostsAll\":\"MyPosts_MyPostsAll__3ob6t\",\"posts\":\"MyPosts_posts__2dvRz\",\"error\":\"MyPosts_error__1XihJ\",\"fieldPosts\":\"MyPosts_fieldPosts__3LCzN\",\"textarea\":\"MyPosts_textarea__36VcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__37DVA\",\"userInfo\":\"users_userInfo__1i9af\",\"city\":\"users_city__34Qg4\",\"country\":\"users_country__2YG7o\",\"fullname\":\"users_fullname__t6TvB\",\"status\":\"users_status__P4F29\",\"userInfoShort\":\"users_userInfoShort__Sol0P\",\"buttons\":\"users_buttons__3qoMB\",\"newUsers\":\"users_newUsers__bROM6\",\"selectedPage\":\"users_selectedPage__3TJ-2\",\"page\":\"users_page__1f0Li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendsControl_friend__2wYvH\",\"item\":\"FriendsControl_item__3ygTb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsName\":\"EachNew_newsName__tK9XI\",\"mes\":\"EachNew_mes__1MNfW\",\"ava\":\"EachNew_ava__2_wNX\",\"news\":\"EachNew_news__2410I\",\"picture\":\"EachNew_picture__3xUU_\",\"user\":\"EachNew_user__10HWz\",\"time\":\"EachNew_time__1j6ak\",\"content\":\"EachNew_content__1DBBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1c5fN\",\"nick\":\"Post_nick__2myDA\",\"mes\":\"Post_mes__3HpwP\",\"newsName\":\"Post_newsName__3riSQ\",\"ava\":\"Post_ava__18Tyu\",\"news\":\"Post_news__GR46K\",\"picture\":\"Post_picture__MVs_7\",\"user\":\"Post_user__3UmBl\",\"time\":\"Post_time__3E8hG\",\"content\":\"Post_content__1sHR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__1sda0\",\"All\":\"Login_All__SfU0o\",\"field\":\"Login_field__3tZDj\",\"button\":\"Login_button__39Ufa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Diallogs_dialogs__1c_Mg\",\"dialogsitem\":\"Diallogs_dialogsitem__3dp5x\",\"massages1\":\"Diallogs_massages1__84Vqo\",\"but\":\"Diallogs_but__2QEX_\",\"text\":\"Diallogs_text__30Bvb\",\"seacrh\":\"Diallogs_seacrh__23rDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"All_all__2BRQe\",\"but\":\"All_but__1YGhY\",\"textare\":\"All_textare__3Qmi7\",\"seacrh\":\"All_seacrh__3TRLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__BeMIC\",\"logo\":\"Header_logo__bnw5J\",\"track\":\"Header_track__2AQ2F\",\"poshalka\":\"Header_poshalka__yoAne\",\"loginBlock\":\"Header_loginBlock__2No9o\",\"userAvatar\":\"Header_userAvatar__3eU9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"GenaPosts_CreateNewPost__389UC\",\"button\":\"GenaPosts_button__JV3Av\",\"text\":\"GenaPosts_text__1Kq_C\",\"MyPostsAll\":\"GenaPosts_MyPostsAll__1mnbb\",\"posts\":\"GenaPosts_posts__V2lPh\"};","const ADD_SONG = 'ADD-SONG';\r\nconst UPDATE_NEW_SONG_TEXT = 'UPDATE-NEW-SONG-TEXT';\r\n\r\n\r\n\r\nexport type SongsType = {\r\n    id: number\r\n    nameSong: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n        songs: [\r\n            {\r\n                id: 1, nameSong: 'gachimuchi -' +\r\n                    ' А как насчёт ♂?♂'\r\n            },\r\n            {\r\n                id: 2, nameSong: 'GACHIMUCHI -' +\r\n                    ' Чудо (right version)'\r\n            },\r\n            {\r\n                id: 3, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Филипп Киркоров - Это не снег♂'\r\n            },\r\n            {\r\n                id: 4, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Спокойная ночь - Кино♂'\r\n            },\r\n            {\r\n                id: 5, nameSong: 'GachiMuchi -' +\r\n                    ' Я назову планету'\r\n            },\r\n        ] as Array<SongsType>,\r\n        newsongtext: \"\",\r\n    count: 7\r\n    }\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionTypes = SongOnChangeActionCreatorType | AddSongActionCreatorType\r\n\r\nconst musicReducer = (state = initialState, action: ActionTypes): initialStateType => {\r\n\r\n\r\n    switch (action.type){\r\n        case ADD_SONG: {\r\n            let newSong = {\r\n                id: state.count,\r\n                nameSong: state.newsongtext,\r\n\r\n            };\r\n            return {...state,\r\n                songs: [newSong, ...state.songs],\r\n                newsongtext: '',\r\n                count: state.count+1\r\n            };\r\n        }\r\n        case UPDATE_NEW_SONG_TEXT:\r\n            return  {...state,\r\n                newsongtext: action.newText\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\ntype SongOnChangeActionCreatorType = {\r\n    type: typeof UPDATE_NEW_SONG_TEXT,\r\n    newText: string\r\n}\r\nexport const songOnChangeActionCreator = (text: string): SongOnChangeActionCreatorType => ({\r\n    type: UPDATE_NEW_SONG_TEXT,\r\n    newText: text\r\n})\r\ntype AddSongActionCreatorType = {\r\n    type: typeof ADD_SONG,\r\n}\r\nexport const addSongActionCreator = (): AddSongActionCreatorType => ({type: ADD_SONG});\r\n\r\nexport default musicReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"GenaPost_item__3uH7U\",\"nick\":\"GenaPost_nick__Uu98P\",\"mes\":\"GenaPost_mes__2dgVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"GenaProfileInfo_avatar__zIEQ_\",\"wallpaper\":\"GenaProfileInfo_wallpaper__VCGS4\",\"description\":\"GenaProfileInfo_description__pQC5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Eachdialog_dialog__1psZy\",\"activeLink\":\"Eachdialog_activeLink__VZA7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2-qx_\",\"pageNumber\":\"Paginator_pageNumber__yGoSK\",\"selectedPage\":\"Paginator_selectedPage__OLHGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__G3gcE\",\"name\":\"Friend_name__2DMx9\",\"dropbtn\":\"Friend_dropbtn__mqe2h\",\"dropdown\":\"Friend_dropdown__1Q3hE\",\"dropdowncontent\":\"Friend_dropdowncontent__3gsoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massages\":\"Eachmessage_massages__137J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Best_item__1Ip4m\",\"name\":\"Best_name__3GVrk\"};"],"sourceRoot":""}