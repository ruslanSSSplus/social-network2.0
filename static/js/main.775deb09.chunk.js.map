{"version":3,"sources":["components/ProfileGena/GenaPosts/GenaPost/GenaPost.module.css","components/ProfileGena/GenaProfileInfo/GenaProfileInfo.module.css","components/Diallogs/Eachdialog/Eachdialog.module.css","components/Paginator/Paginator.module.css","components/Friends/All/Friend/Friend.module.css","components/Diallogs/Eachmessage/Eachmessage.module.css","components/News/News.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","api/api.ts","reportWebVitals.js","redux/friendsReducer.ts","components/Friends/All/Friend/Friend.tsx","components/Friends/All/All.tsx","hoc/withAuthRedirect.tsx","components/Friends/All/AllContainerHook.tsx","components/Friends/Friends.tsx","redux/newsReducer.ts","redux/profileReducer.ts","redux/dialogReducer.ts","OldStateOldClassComponents/StoreFirstVersion.js","components/ProfileGena/GenaPosts/GenaPosts.jsx","components/ProfileGena/GenaProfileInfo/GenaProfileInfo.jsx","components/ProfileGena/GenaProfile.jsx","components/NikitaProfile.jsx","components/Diallogs/Eachmessage/Eachmessage.tsx","components/Diallogs/Eachdialog/Eachdialog.tsx","components/Diallogs/Diallogs.tsx","components/Diallogs/DiallogsContainer.tsx","components/AddPostForm/AddPostForm.tsx","components/News/News.tsx","components/News/EachNew/EachNew.tsx","components/News/NewsContainer.tsx","assets/images/04de2e31234507.564a1d23645bf.gif","components/common/Preloder/Preloader.tsx","redux/friendsSelectors.ts","assets/images/DZIAss-5O_I.jpg","components/Users/EachUser.tsx","components/Paginator/Paginator.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","redux/authReducer.ts","redux/appReducer.ts","redux/sideBarReducer.ts","redux/reduxStore.ts","components/Login/LoginFormAuth.tsx","components/Login/Login.tsx","components/Header/Header.tsx","App.tsx","index.js","components/Profile/MyPosts/MyPosts.module.css","components/Users/users.module.css","components/Login/Login.module.css","components/News/EachNew/EachNew.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Diallogs/Diallogs.module.css","components/Header/Header.module.css","components/Friends/All/All.module.css","components/ProfileGena/GenaPosts/GenaPosts.module.css","redux/musicReducer.ts"],"names":["module","exports","ResultCodeEnum","ResultCodeWithCaptchaEnum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","term","friend","get","response","data","id","delete","post","userId","console","warn","profileAPI","getProfile","authAPI","email","password","rememberMe","captcha","securityAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","res","saveProfile","profile","ADD_USER","FRIEND_CHECK","FRIEND_REMOVE","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_ITEMS_COUNT","IS_FETCHING","SET_FILTER","initialState","friendDate","link","name","avatar","surname","friendsAlready","users","totalItemsCount","isFetching","isFriend","filter","actions","friendCheckAC","type","removeFriendAC","idToRemove","follow","unfollow","setUsers","addUserAC","avatarPhoto","isFetchingDispatch","isFetchingBOOL","setTotalItemsCount","Count","setCurrentPage","p","setFilter","payload","getUsersThunkCreater","dispatch","a","items","totalCount","unfollowThunk","resultCode","friendsReducer","state","action","stateCopy","friendDateSet","friendsCollection","Set","newFriendUser","add","Array","from","item","map","u","followed","Friend","props","className","classes","src","to","onClick","dropbtn","All","friendsAll","friends","el","name1","React","createRef","ava1","all","seacrh","textare","ref","but","current","value","addfriend","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","connect","compose","getUsersThunk","i","photos","large","useEffect","Friends","per","new","time","user","picture","newsReducer","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","SET_ERROR","posts","countPosts","isError","newsImport","addPostActionCreator","newText","pic","deletePost","setUsersProfile","savePhotoSuccess","setErrorProfile","Error","setStatus","getProfileThunk","profileReducer","newPost","unshift","ADD_MESSAGE","messages","message","dialogs","count","addMessageActionCreator","dialogReducer","newMessage","store","_state","newnewstext","newpicturetext","newmessagetext","sidebar","bestfriends","musics","songs","nameSong","newsongtext","news","_reRenderAllTree","log","getState","subscribe","observer","musicReducer","window","GenaPosts","MyPostsAll","CreateNewPost","text","button","GenaProfileInfo","wallpaper","description","GenaProfile","NikitaProfile","Eachmessage","massages","massage","Eachdialog","path","dialog","active","activeClassName","activeLink","initialValues","AddMessageForm","onSubmit","component","Diallogs","dialogsElements","messageElements","values","dialogsitem","massages1","AddPostFormik","validationSchema","Yup","required","max","fieldPosts","error","textarea","placeholder","News","newsElements","content","AddPostForm","EachNew","newsName","ava","mes","Preloader","preLoader","getUsers","getAPageSize","getTotalCount","getCurrentPage","getisFetching","getUsersFilter","EachUser","newUsers","userInfo","alt","small","photoAva","userPhoto","userInfoShort","fullname","country","city","buttons","followThunk","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","cn","selectedPage","pageNumber","usersSearchValidation","UsersSearchForm","memo","validate","setSubmitting","onFilterChanged","isSubmitting","placeHolder","as","disabled","Users","useSelector","useDispatch","unfollowThunk1","followThunk1","photo","UsersPage","ProfileStatusWithHooks","editMode1","setEditMode1","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatusThunk","autoFocus","ProfileDataForm","info","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","editButton","fullName","aboutMe","contactTitle","ContactValue","lookingForAJob","lookingForAJobDescription","Contact","ProfileInfo","editMode","setEditMode","target","files","length","Post","MyPosts","postDate","MyPostsContainer","Profile","ProfileContainer","match","params","AuthorizedUserId","history","getStatusThunk","refreshProfile","prevProps","prevState","file","Promise","reject","withRouter","SET_USER_DATE","SET_USER_AVATAR","GET_CAPTCHA_URL_SUCCESS","login","userAva","captchaUrl","getAuthThunk","Success","gerCaptchaUtl","url","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","sideBarReducer","rootReducer","combineReducers","sideBar","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","checkbox","LoginFormAuth","CaptchaIsRequired","field","Login","HeaderComponent","header","loginBlock","signIn","button1","userAvatar","Header","Layout","Content","Footer","Sider","MusicContainer","lazy","App","initialiseApp","onerror","errorMsg","lineNumber","alert","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","theme","mode","defaultSelectedKeys","Item","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","style","padding","height","margin","minHeight","render","DiallogsContainer","NewsContainer","fallback","textAlign","AppContainer","AppAllTree","ReactDOM","document","getElementById","ADD_SONG","UPDATE_NEW_SONG_TEXT","songOnChangeActionCreator","addSongActionCreator","newSong"],"mappings":"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","file":"static/js/main.775deb09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"GenaPost_item__3uH7U\",\"nick\":\"GenaPost_nick__Uu98P\",\"mes\":\"GenaPost_mes__2dgVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"GenaProfileInfo_avatar__zIEQ_\",\"wallpaper\":\"GenaProfileInfo_wallpaper__VCGS4\",\"description\":\"GenaProfileInfo_description__pQC5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Eachdialog_dialog__1psZy\",\"activeLink\":\"Eachdialog_activeLink__VZA7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2-qx_\",\"pageNumber\":\"Paginator_pageNumber__yGoSK\",\"selectedPage\":\"Paginator_selectedPage__OLHGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__G3gcE\",\"name\":\"Friend_name__2DMx9\",\"dropbtn\":\"Friend_dropbtn__mqe2h\",\"dropdown\":\"Friend_dropdown__1Q3hE\",\"dropdowncontent\":\"Friend_dropdowncontent__3gsoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massages\":\"Eachmessage_massages__137J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__1G3TA\",\"textarea\":\"News_textarea__3SkEi\",\"button\":\"News_button__2VTYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__DXWvy\",\"wallpaper\":\"ProfileInfo_wallpaper__2sqrq\",\"description\":\"ProfileInfo_description__2pVo3\",\"info\":\"ProfileInfo_info__39Vzn\",\"error\":\"ProfileInfo_error__2JVZX\",\"editButton\":\"ProfileInfo_editButton__3ZZnL\"};","import axios from \"axios\";\r\nimport {photosType, ProfileType, UserType} from \"../Types/Types\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '1c389392-606e-42a1-8d6e-0ba8e47b4434'\r\n    }\r\n});\r\ntype itemsType = {\r\n    name: string\r\n    id: number\r\n    photos: photosType\r\n    status: string\r\n    followed: boolean\r\n}\r\ntype getUsersType = {\r\n    items: Array<itemsType>\r\n    totalCount: number\r\n    error: null | any\r\n}\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage =1, pageSize = 10, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<getUsersType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? \"\" : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUsersFriends(){\r\n        return instance.get<getUsersType>(`users`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n\r\n    getProfilePhoto(){\r\n    return instance.get<ProfileType>(`profile/9`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n},\r\n    getUnfollow(id: number){\r\n        return instance.delete<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getFollow(id: number){\r\n        return instance.post<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getProfile(userId: number | null){\r\n        console.warn('obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n\r\n}\r\n\r\nexport enum ResultCodeEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\nexport enum ResultCodeWithCaptchaEnum  {\r\n        CaptchaIsRequired = 10\r\n}\r\n\r\ntype getAuthType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\ntype loginType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodeEnum | ResultCodeWithCaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get<getAuthType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email: string, password: string, rememberMe=false, captcha: null | string = null){\r\n        return instance.post<loginType>('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logOut(){\r\n        return instance.delete<ThreeParamsType>('auth/login')\r\n    }\r\n\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\n\r\ntype ThreeParamsType = {\r\n    data: {\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\ntype savePhotoType = {\r\n    data:\r\n        {\r\n            photos: photosType\r\n        }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number | null){\r\n        return instance.get<ProfileType>(`profile/`+ userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ThreeParamsType>(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile: File){\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put<savePhotoType>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res=>res.data)\r\n    },\r\n    saveProfile(profile: ProfileType){\r\n        return instance.put<ThreeParamsType>(`profile`, profile)\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {usersAPI} from \"../api/api\";\r\nimport { UserType} from \"../Types/Types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nconst ADD_USER = 'ADD_USER';\r\nconst FRIEND_CHECK = 'FRIEND_CHECK'\r\nconst FRIEND_REMOVE = 'FRIEND_REMOVE'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_ITEMS_COUNT = 'SET_TOTAL_ITEMS_COUNT'\r\nconst IS_FETCHING = 'IS_FETCHING'\r\nconst SET_FILTER = 'SET_FILTER'\r\n\r\nexport type FriendDateType = {\r\n    id: number,\r\n    link: string,\r\n    name: string,\r\n    avatar: string,\r\n    surname: string,\r\n    friendsAlready: boolean,\r\n\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n    friendDate: [\r\n        {\r\n            id: 1111111,\r\n            link: '/https://vk.com/dank_af',\r\n            name: 'Геннадий',\r\n            avatar: 'https://meragor.com/files/styles//ava_800_800_wm/ava-241.jpg',\r\n            surname: 'Льянов',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 2222222,\r\n            link: 'https://vk.com/get_imba',\r\n            name: 'Тимур',\r\n            surname: 'Льянов',\r\n            avatar: 'https://i.pinimg.com/originals/d2/27/67/d22767e3ecd58f14c839092e1dfe3852.jpg',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 333333,\r\n            link: 'https://vk.com/evgeniasims',\r\n            name: 'Евгения',\r\n            surname: 'Хайретдинов',\r\n            avatar: 'http://sun9-67.userapi.com/s/v1/ig2/6JU7DbnLm46xuMVj9w2gHBOoagBCXOCkTilVO__oHcVOxVdwYVIxZAfEKG7R9_EnXUb-CLjsqkl-cuetoovsmwDU.jpg?size=200x0&quality=96&crop=1,1,1197,1197&ava=1',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 4444444,\r\n            link: 'https://vk.com/id153839551',\r\n            name: 'Кекс',\r\n            surname: 'Слесырев',\r\n            avatar: 'https://anime-fans.ru/wp-content/uploads/2021/01/Ochen-smeshnye-anime-avy_01.jpg',\r\n            friendsAlready: true,\r\n        },\r\n\r\n    ] as Array<FriendDateType> | any,\r\n\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalItemsCount: 222,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFriend: true,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    friendCheckAC :() => ({\r\n        type: FRIEND_CHECK,\r\n    } as const),\r\n    removeFriendAC:(idToRemove: number) => ({\r\n        type: FRIEND_REMOVE,\r\n        idToRemove: idToRemove\r\n    } as const),\r\n    follow:(userId: number) => ({\r\n        type: FOLLOW,\r\n        userId\r\n    } as const),\r\n    unfollow:(userId:number) => ({\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const),\r\n    setUsers:(users: Array<UserType>) => ({\r\n        type: SET_USERS,\r\n        users\r\n    } as const),\r\n    addUserAC:(id: number, avatarPhoto: string | null, name: string) => ({\r\n        type: ADD_USER,\r\n        id: id,\r\n        surname: null,\r\n        avatar: avatarPhoto,\r\n        name: name,\r\n    } as const),\r\n    isFetchingDispatch: (isFetchingBOOL: boolean)  => ({\r\n        type: IS_FETCHING,\r\n        isFetchingBOOL,\r\n    } as const),\r\n    setTotalItemsCount :(Count: number) => ({\r\n        type: SET_TOTAL_ITEMS_COUNT,\r\n        Count,\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n    setFilter: (filter: FilterType) => ({\r\n        type: SET_FILTER,\r\n        payload: filter\r\n    } as const),\r\n}\r\n\r\n\r\nconst friendsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_USER:\r\n            let stateCopy = {...state}\r\n            let friendDateSet = [...stateCopy.friendDate]\r\n            let friendsCollection = new Set(friendDateSet)\r\n            let newFriendUser = {\r\n                id: action.id,\r\n                name: action.name,\r\n                surname: action.surname,\r\n                avatar: action.avatar,\r\n                link: '/profile/' + action.id,\r\n                friendsAlready: true\r\n            };\r\n            friendsCollection.add(newFriendUser)\r\n            return {\r\n                ...state,\r\n                friendDate: Array.from(friendsCollection)\r\n            };\r\n\r\n        case FRIEND_CHECK:\r\n            return {\r\n                ...state,\r\n                isFriend: false\r\n            }\r\n        case FRIEND_REMOVE:\r\n            return {\r\n                ...state,\r\n                friendDate: state.friendDate.filter((item: any) => item.id !== action.idToRemove)\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        case SET_TOTAL_ITEMS_COUNT: {\r\n            return {...state, totalItemsCount: action.Count}\r\n        }\r\n        case IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetchingBOOL}\r\n        }\r\n        case SET_FILTER: {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type ThunkType = BaseThunkType<ActionsType>\r\n\r\nexport const getUsersThunkCreater = (currentPage: number,\r\n                                     pageSize: number,\r\n                                     filter: FilterType): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.isFetchingDispatch(true))\r\n        dispatch(actions.setCurrentPage(currentPage))\r\n        dispatch(actions.setFilter(filter))\r\n        let response = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend)\r\n            dispatch(actions.isFetchingDispatch(false))\r\n            dispatch(actions.setUsers(response.items))\r\n            dispatch(actions.setTotalItemsCount(response.totalCount))\r\n    }\r\n}\r\nexport const getUsersThunk = (isFriend: boolean): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getUsersFriends()\r\n    for (let i = 0; i < 10; i++) {\r\n        if (response.items[i].followed === true && isFriend) {\r\n            dispatch(actions.addUserAC(response.items[i].id, response.items[i].photos.large != null ?\r\n                response.items[i].photos.large : 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', response.items[i].name,))\r\n        }\r\n    }\r\n    dispatch(actions.friendCheckAC())\r\n}\r\nexport const unfollowThunk = (id: number): ThunkType => async (dispatch) => {\r\n    if (id > 100000) {\r\n        dispatch(actions.removeFriendAC(id))\r\n    } else {\r\n        let response = await usersAPI.getUnfollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(actions.unfollow(id))\r\n            dispatch(actions.removeFriendAC(id))\r\n        }\r\n    }\r\n}\r\n    export const followThunk = (id: number, photo: string | null, name: string): ThunkType => async (dispatch ) => {\r\n    let response = await usersAPI.getFollow(id)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actions.follow(id))\r\n        photo != null\r\n            ? dispatch(actions.addUserAC(id, photo, name)) :\r\n            dispatch(actions.addUserAC(id, 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', name))\r\n    }\r\n}\r\n\r\nexport default friendsReducer;","import React from 'react';\r\nimport classes from './Friend.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ProfileType} from \"../../../../Types/Types\";\r\nimport {number} from \"yup\";\r\n\r\n\r\ntype PropsType = {\r\n  key: number\r\n  id: number\r\n  link: string\r\n  name: string\r\n  surname: string\r\n  avatar: string\r\n  unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst Friend: React.FC<PropsType>  = (props) => {\r\n\r\n  let unfollowing = (id: number) => {\r\n      props.unfollowThunk(id)\r\n\r\n  }\r\n\r\n  return <div>\r\n\r\n    <div className={classes.item}>\r\n      <img src={props.avatar} />\r\n      <NavLink to={props.link}> {props.name} {props.surname} </NavLink>\r\n      <button onClick={() =>{unfollowing(props.id)}} className={classes.dropbtn}>Удалить из друзей</button>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport classes from './All.module.css'\r\nimport Friend from \"./Friend/Friend\";\r\nimport {ProfileType} from \"../../../Types/Types\";\r\nimport {number} from \"yup\";\r\nimport {FriendDateType} from \"../../../redux/friendsReducer\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    addfriend: (id: number, avatarPhoto: string, name: string) => void\r\n    friends:  Array<FriendDateType>\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst All: React.FC<PropsType> =(props) => {\r\n\r\n    let friendsAll= props.friends.map(el =>  <Friend key={el.id} id={el.id} link = {el.link} name = {el.name} surname= {el.surname} avatar={el.avatar} unfollowThunk={props.unfollowThunk}/>)\r\n    let name1: any = React.createRef()\r\n    let ava1: any = React.createRef()\r\n\r\n    let addFriend = () => {\r\n        debugger\r\n        ava1.current.value==\"\" ?   props.addfriend(888888, 'https://sun1-93.userapi.com/s/v1/ig2/i3174V5HMNQgKMxXm43MBqaBeqvf9lPbnq34n_NTXqwUY7XMzkok7XT1gZSQjBqJbxhns3gHCZx93ppb6zlqA5wL.jpg?size=200x200&quality=96&crop=53,33,478,478&ava=1', name1.current.value)\r\n        : props.addfriend(888888, ava1.current.value, name1.current.value)\r\n        name1.current.value = '';\r\n        ava1.current.value = '';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        < div className={classes.all}>\r\n            <div className={classes.seacrh}>\r\n                name\r\n                <textarea className={classes.textare} ref={name1} >   </textarea>\r\n                ava\r\n                <textarea className={classes.textare} ref={ava1}> </textarea>\r\n                <button className={classes.but} onClick={addFriend}> Add New Friend </button>\r\n            </div>\r\n            {friendsAll}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default All;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n    class RedirectComponent extends React.Component<mapStateToPropsForRedirectType> {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {actions, FriendDateType, getUsersThunk, unfollowThunk} from \"../../../redux/friendsReducer\";\r\nimport All from \"./All\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    friends: Array<FriendDateType>\r\n    isFriend: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersThunk: (isFriend: boolean) => void\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    addUserAC: (id: number, avatarPhoto: string, name: string) => void\r\n\r\n}\r\n\r\ntype all = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\n\r\nconst AllContainerHook: React.FC<all> =(props)=> {\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( ()=>{\r\n        props.getUsersThunk(props.isFriend)\r\n    }, [])\r\n\r\n\r\n        return <All\r\n                addfriend={props.addUserAC}\r\n                friends={props.friends}\r\n                unfollowThunk={props.unfollowThunk}\r\n            />\r\n}\r\nlet mapStateToProps =(state: AppStateType) => {\r\n\r\n    return {\r\n        friends: state.friends.friendDate,\r\n        isFriend: state.friends.isFriend,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {unfollowThunk, getUsersThunk, ...actions}),    withAuthRedirect,\r\n)(AllContainerHook)\r\n\r\n","import React from 'react';\r\nimport classes from './Friends.module.css'\r\nimport FriendsControl from \"./FriendsControl/FriendsControl\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport AllContainerHook from \"./All/AllContainerHook\";\r\n\r\n\r\n\r\n\r\n\r\nconst Friends =() => {\r\n    return (<div className={classes.per}>\r\n            {/*<FriendsControl />*/}\r\n            <AllContainerHook />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import {PostsType} from \"../Types/Types\";\r\n\r\n\r\nlet initialState = {\r\n    new: [\r\n        {\r\n            id: 1,\r\n            time: 'сегодня в 11 утра',\r\n            post: 'Вчера посмотрел атаку титанов',\r\n            user: 'Timur Brat',\r\n            avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album',\r\n            picture: 'https://cdn.shazoo.ru/351151_Z0bYpFdK6E_8010ba67_497b_4038_9c6e_f9b0fa9c.jpg',\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня в 9 утра',\r\n            post: 'Посмотрел \"Твое Имя\", мне понравилось',\r\n            user: 'Gena Daun',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n            picture: 'https://www.mirf.ru/wp-content/uploads/2020/09/update_1___multi_sourced_4k__kimi_no_na_wa_by_assassinwarrior_dajydsn-fullview.jpg',\r\n        },\r\n        {\r\n            id: 3,\r\n            time: 'вчера в 12 ночи',\r\n            post: 'Всем привет',\r\n            user: 'Pavel Palov',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album',\r\n            picture: 'https://i.pinimg.com/originals/3c/8f/9a/3c8f9ad07c5f305354cdf087cf1d580c.jpg',\r\n        },\r\n        {\r\n            id: 4,\r\n            time: 'позавчера',\r\n            post: 'Я русский ',\r\n            user: 'Maks Voin',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album',\r\n            picture: 'https://cdni.rbth.com/rbthmedia/images/2020.07/original/5f1e888885600a2608563f65.jpg',\r\n        },\r\n        {\r\n            id: 5,\r\n            time: 'ну он просто лох',\r\n            post: 'я бабизян че тут сказать',\r\n            user: 'Sergey Ga4ibyan',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album',\r\n            picture: 'https://icdn.lenta.ru/images/2021/01/20/16/20210120164051128/wide_4_3_ad0a8dedf4f24c1002d87743b6451b83.jpg',\r\n        },\r\n    ] as Array<PostsType>\r\n\r\n}\r\nexport const getNewMassiv = () => { return initialState.new;}\r\ntype ActionTypes = null\r\n\r\nconst newsReducer = (state = initialState, action: ActionTypes) => {\r\n\r\n\r\n            return state;\r\n\r\n\r\n}\r\n\r\nexport default newsReducer;","import {getNewMassiv} from \"./newsReducer\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {photosType, PostsType, ProfileType} from \"../Types/Types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"./reduxStore\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_PHOTO = 'SET_PHOTO'\r\nconst SET_ERROR = 'profile/SET_ERROR';\r\n\r\n\r\n\r\nlet initialState = {\r\n\r\n    posts: [\r\n\r\n        {\r\n            id: 1,\r\n            post: 'First Friend GEna',\r\n            user: 'Гена',\r\n            time: 'сегодня в 11 утра',\r\n            picture: 'https://sun9-35.userapi.com/impf/c846522/v846522118/18d9eb/E5pvZnPh9hU.jpg?size=1920x1080&quality=96&sign=028f51047f18db27b0be9c3f5f266980&type=album',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня',\r\n            post: ')))',\r\n            user: 'Gena',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n\r\n            picture: 'https://avatarko.ru/img/kartinka/1/Crazy_Frog.jpg',\r\n        },\r\n        {\r\n            id: 3,\r\n            post: '1111',\r\n            user: 'Pavel  -   ',\r\n            time: 'сегодня в ',\r\n            picture: 'https://99px.ru/sstorage/53/2020/12/mid_318736_308803.jpg',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album'\r\n        },\r\n\r\n        {\r\n            id: 4,\r\n            post: '222222222',\r\n            user: 'Maks  -   ',\r\n            time: 'сегодня в 11 ',\r\n            picture: 'https://oir.mobi/uploads/posts/2021-03/1616973116_8-p-fon-dlya-rabochego-stola-zhivie-oboi-9.jpg',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album'\r\n        },\r\n        {\r\n            id: 5,\r\n            post: '33333333333333',\r\n            user: 'Ga4ibyan  -   ',\r\n            time: 'сегодня в 11 утра',\r\n            picture: 'https://wallpapershome.ru/images/pages/ico_h/21906.jpg',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album'\r\n        }\r\n    ] as Array<PostsType>,\r\n\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    countPosts: 6,\r\n    isError: false,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nlet newsImport = getNewMassiv();\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.countPosts,\r\n                post: action.newText,\r\n                user: 'Вы  ',\r\n                avatar: \"https://n1s1.hsmedia.ru/30/a5/50/30a550ad429dc5b67118ec6c0a984137/620x440_1_61ebd8b8b757e8b7e6e0c8e6d9f2efbe@2055x1459_0xc0a839a2_12152610071478613656.jpeg\",\r\n                picture: action.pic,\r\n                time: 'сейчас',\r\n            };\r\n            debugger\r\n            newsImport.unshift(newPost)\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n\r\n                countPosts: state.countPosts + 1\r\n            };\r\n        }\r\n\r\n\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter((item) => item.id !== action.idToRemove)}\r\n        }\r\n        case SET_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType};\r\n        }\r\n        case SET_ERROR:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newText: string, pic: string) => ({\r\n        type: ADD_POST,\r\n        newText,\r\n        pic\r\n    } as const),\r\n    deletePost: (idToRemove: number) => ({\r\n        type: DELETE_POST,\r\n        idToRemove\r\n    }as const),\r\n    setUsersProfile: (profile: ProfileType) => ({\r\n        type: SET_USERS_PROFILE,\r\n        profile: profile,\r\n    }as const),\r\n    savePhotoSuccess :(photos: photosType)  => ({\r\n        type: SET_PHOTO,\r\n        photos\r\n    }as const),\r\n    setErrorProfile :(Error: boolean)  => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    setStatus: (status: string) => ({\r\n        type: SET_STATUS,\r\n        status\r\n    }as const)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const  getProfileThunk = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(actions.setUsersProfile(response.data));\r\n}\r\nexport const getStatusThunk = (userId: number):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(response.data));\r\n}\r\nexport const updateStatusThunk = (status: string):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.resultCode === 0){\r\n        debugger\r\n        dispatch(actions.savePhotoSuccess(response.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType):ThunkType => async (dispatch, getState) => {\r\n\r\n    const userId= getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0){\r\n        await dispatch(getProfileThunk(userId));\r\n        dispatch(actions.setErrorProfile(false))\r\n    }\r\n\r\n    else {\r\n        dispatch(actions.setErrorProfile(true))\r\n        return Promise.reject()\r\n    }\r\n}\r\nexport default profileReducer;","import {InferActionsTypes} from \"./reduxStore\";\r\n\r\n\r\nconst ADD_MESSAGE = 'DIALOGS/ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n        messages: [\r\n            {id: 1, message: 'loh gena loh'},\r\n            {id: 2, message: 'loh misha loh'},\r\n            {id: 3, message: 'loh pasha loh'},\r\n            {id: 4, message: 'loh nikita loh'},\r\n            {id: 5, message: 'loh tima loh'},\r\n        ] as Array<MessageType>,\r\n        dialogs: [\r\n            {id: 1, name: 'gena'},\r\n            {id: 2, name: 'misha'},\r\n            {id: 3, name: 'pasha'},\r\n            {id: 4, name: 'nikita'},\r\n            {id: 5, name: 'tima'},\r\n        ] as Array<DialogType>,\r\n    count: 6,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst dialogReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: state.count,\r\n                message: action.message,\r\n            };\r\n\r\n            return {...state,\r\n                messages: [newMessage, ...state.messages],\r\n                count: state.count+1\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addMessageActionCreator: (message: string) => ({\r\n        type: ADD_MESSAGE,\r\n        message\r\n    }as const)\r\n}\r\n\r\n\r\nexport default dialogReducer;","import React from 'react';\r\nimport profileReducer from \"../redux/profileReducer\";\r\nimport dialogReducer from \"../redux/dialogReducer\";\r\nimport musicReducer from \"../redux/musicReducer\";\r\nimport friendsReducer from \"../redux/friendsReducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst ADD_SONG = 'ADD-SONG';\r\nconst ADD_FRIEND = 'ADD-FRIEND';\r\nconst UPDATE_NEW_SONG_TEXT = 'UPDATE-NEW-SONG-TEXT';\r\nconst UPDATE_NEW_NEWS_TEXT = 'UPDATE-NEW-NEWS-TEXT';\r\n\r\nconst UPDATE_NEW_PICTURE_TEXT = 'UPDATE-NEW-PICTURE-TEXT';\r\n\r\n\r\nlet store = {\r\n\r\n    _state: {\r\n        profile: {\r\n            posts: [\r\n\r\n                {\r\n                    id:1,\r\n                    post: 'First Friend GEna DaUn',\r\n                    user: 'Гена',\r\n                    time: 'сегодня в 11 утра',\r\n                    picture: 'https://sun9-35.userapi.com/impf/c846522/v846522118/18d9eb/E5pvZnPh9hU.jpg?size=1920x1080&quality=96&sign=028f51047f18db27b0be9c3f5f266980&type=album',\r\n                    avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    time: 'сегодня',\r\n                    post: 'У меня такой же )))',\r\n                    user: 'Gena',\r\n                    avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n\r\n                    picture: 'https://avatarko.ru/img/kartinka/1/Crazy_Frog.jpg',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    post: '1111',\r\n                    user: 'Pavel  -   ',\r\n                    time: 'сегодня в ',\r\n                    picture: 'https://99px.ru/sstorage/53/2020/12/mid_318736_308803.jpg',\r\n                    avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album'\r\n                },\r\n\r\n                {\r\n                    id: 4,\r\n                    post: '222222222',\r\n                    user: 'Maks  -   ',\r\n                    time: 'сегодня в 11 ',\r\n                    picture: 'https://oir.mobi/uploads/posts/2021-03/1616973116_8-p-fon-dlya-rabochego-stola-zhivie-oboi-9.jpg',\r\n                    avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album'\r\n                },\r\n                {\r\n                    id: 5,\r\n                    post: '33333333333333',\r\n                    user: 'Ga4ibyan  -   ',\r\n                    time: 'сегодня в 11 утра',\r\n                    picture: 'https://wallpapershome.ru/images/pages/ico_h/21906.jpg',\r\n                    avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album'\r\n                }\r\n            ],\r\n            newnewstext: '',\r\n            newpicturetext: '',\r\n\r\n        },\r\n        dialogs: {\r\n            messages: [\r\n                {id: 1, message: 'loh gena loh'},\r\n                {id: 2, message: 'loh misha loh'},\r\n                {id: 3, message: 'loh pasha loh'},\r\n                {id: 4, message: 'loh nikita loh'},\r\n                {id: 5, message: 'loh tima loh'},\r\n            ],\r\n            dialogs: [\r\n                {id: 1, name: 'gena'},\r\n                {id: 2, name: 'misha'},\r\n                {id: 3, name: 'pasha'},\r\n                {id: 4, name: 'nikita'},\r\n                {id: 5, name: 'tima'},\r\n            ],\r\n            newmessagetext: '',\r\n        },\r\n        friends: {\r\n            friendDate: [\r\n                {\r\n                    id: 1,\r\n                    link: 'https://vk.com/dank_af',\r\n                    name: 'Геннадий',\r\n                    avatar: 'https://meragor.com/files/styles//ava_800_800_wm/ava-241.jpg',\r\n                    surname: 'Льянов'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    link: 'https://vk.com/get_imba',\r\n                    name: 'Тимур',\r\n                    surname: 'Льянов',\r\n                    avatar: 'https://i.pinimg.com/originals/d2/27/67/d22767e3ecd58f14c839092e1dfe3852.jpg'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    link: 'https://vk.com/evgeniasims',\r\n                    name: 'Евгение',\r\n                    surname: 'ЗигХайретдинов',\r\n                    avatar: 'http://sun9-67.userapi.com/s/v1/ig2/6JU7DbnLm46xuMVj9w2gHBOoagBCXOCkTilVO__oHcVOxVdwYVIxZAfEKG7R9_EnXUb-CLjsqkl-cuetoovsmwDU.jpg?size=200x0&quality=96&crop=1,1,1197,1197&ava=1'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    link: 'https://vk.com/id153839551',\r\n                    name: 'Кекс',\r\n                    surname: 'Слесырев',\r\n                    avatar: 'https://anime-fans.ru/wp-content/uploads/2021/01/Ochen-smeshnye-anime-avy_01.jpg'\r\n                },\r\n                {\r\n                    id: 5,\r\n                    link: 'https://vk.com/steelfella',\r\n                    name: 'Макс',\r\n                    surname: 'Куриборг',\r\n                    avatar: 'https://cspromogame.ru//storage/upload_images/avatars/3935.jpg'\r\n                },\r\n                {\r\n                    id: 6,\r\n                    link: 'https://vk.com/relaxwithbatya',\r\n                    name: 'lov',\r\n                    surname: 'u',\r\n                    avatar: 'https://i.ytimg.com/vi/Q7fMCVoal08/sddefault.jpg'\r\n                },\r\n            ]\r\n        },\r\n        sidebar: {\r\n            bestfriends: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Геннадий',\r\n                    avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                    surname: 'Льянов'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Тимур',\r\n                    surname: 'Льянов',\r\n                    avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Никита',\r\n                    surname: 'кесырев',\r\n                    avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album'\r\n                }\r\n            ]\r\n        },\r\n        musics: {\r\n            songs: [\r\n                {\r\n                    id: 1, nameSong: 'gachimuchi -' +\r\n                        ' А как насчёт ♂ANAL?♂'\r\n                },\r\n                {\r\n                    id: 2, nameSong: 'GACHIMUCHI -' +\r\n                        ' Чудо (right version)'\r\n                },\r\n                {\r\n                    id: 3, nameSong: 'gachimuchi -' +\r\n                        ' ♂️Филипп Киркоров - Это не снег♂'\r\n                },\r\n                {\r\n                    id: 4, nameSong: 'gachimuchi -' +\r\n                        ' ♂️Спокойная ночь - Кино♂'\r\n                },\r\n                {\r\n                    id: 5, nameSong: 'GachiMuchi -' +\r\n                        ' Я назову планету'\r\n                },\r\n            ],\r\n            newsongtext: \"\",\r\n        },\r\n        news: {\r\n            new: [\r\n                {\r\n                    id: 1,\r\n                    time: 'сегодня в 11 утра',\r\n                    post: 'Вчера посмотрел атаку титанов, это просто 12 из 10 археэпично',\r\n                    user: 'Timur Brat',\r\n                    avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album',\r\n                    picture: 'https://cdn.shazoo.ru/351151_Z0bYpFdK6E_8010ba67_497b_4038_9c6e_f9b0fa9c.jpg',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    time: 'сегодня в 9 утра',\r\n                    post: 'Посмотрел \"Твое Имя\", мне понравилось',\r\n                    user: 'Gena Daun',\r\n                    avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                    picture: 'https://www.mirf.ru/wp-content/uploads/2020/09/update_1___multi_sourced_4k__kimi_no_na_wa_by_assassinwarrior_dajydsn-fullview.jpg',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    time: 'вчера в 12 ночи',\r\n                    post: 'Всем привет, я посмотрел жожо, кто пойдет играть в тим форстрес?? А еще мать в канаве моя',\r\n                    user: 'Pavel Palov',\r\n                    avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album',\r\n                    picture: 'https://cdn.shazoo.ru/c800x360/308676_lBgur9s5CP_cherry.jpg',\r\n                },\r\n                {\r\n                    id: 4,\r\n                    time: 'позавчера',\r\n                    post: 'Я русский хуле',\r\n                    user: 'Maks Voin',\r\n                    avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album',\r\n                    picture: 'https://cdni.rbth.com/rbthmedia/images/2020.07/original/5f1e888885600a2608563f65.jpg',\r\n                },\r\n                {\r\n                    id: 5,\r\n                    time: 'ну он просто лох',\r\n                    post: 'я бабизян че тут сказать',\r\n                    user: 'Sergey Ga4ibyan',\r\n                    avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album',\r\n                    picture: 'https://icdn.lenta.ru/images/2021/01/20/16/20210120164051128/wide_4_3_ad0a8dedf4f24c1002d87743b6451b83.jpg',\r\n                },\r\n                {\r\n                    id: 6,\r\n                    time: 'пару лет назал',\r\n                    post: 'я трахнул твою мать',\r\n                    user: 'Nikita Kesыrev',\r\n                    avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album',\r\n                    picture: 'https://sun9-82.userapi.com/impg/ziamtmx6MeWC86P94nk9X4L2SLpjv0dZGL3M8A/w0n8GaVm8RQ.jpg?size=952x916&quality=96&sign=cf73c41996bb64455764b18ebbfbdd63&type=album',\r\n                }\r\n            ],\r\n\r\n        },\r\n    },\r\n\r\n    _reRenderAllTree() {\r\n        console.log('state changed')\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._reRenderAllTree = observer;\r\n    },\r\n\r\n\r\n    dispatch(action) {\r\n\r\n        this._state = profileReducer(this._state, action)\r\n        this._state.dialogs = dialogReducer(this._state.dialogs, action)\r\n        this._state.musics = musicReducer(this._state.musics, action)\r\n        this._state.friends = friendsReducer(this._state.friends, action)\r\n\r\n        this._reRenderAllTree(this._state);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    window.store = store;","import React from 'react';\r\nimport classes from './GenaPosts.module.css'\r\nimport GenaPost from './GenaPost/GenaPost';\r\nimport {addPost} from \"../../../OldStateOldClassComponents/StoreFirstVersion\";\r\n\r\n\r\nconst GenaPosts = (props) => {\r\n\r\n\r\n\r\n  return <div className={classes.MyPostsAll}>\r\n    <h3> My posts </h3>\r\n    \r\n    <div className={classes.CreateNewPost} >\r\n      Create New Post\r\n    </div>\r\n    <div>\r\n      <div>\r\n                <textarea className={classes.text} />\r\n      </div>\r\n      <div>\r\n        <button className={classes.button} >Send</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default GenaPosts;","import React from 'react';\r\n\r\nimport classes from './GenaProfileInfo.module.css'\r\n\r\nconst GenaProfileInfo = () => {\r\n    return <div>\r\n        <div className={classes.wallpaper}>\r\n            <img\r\n                src=\"https://sun9-78.userapi.com/impg/NrSWcMzkCka2yzSn3A9lmLm2c6Jg5QGPOKYM_A/aZTfjfpwHRo.jpg?size=1600x648&quality=96&sign=2e39caafd67c569a65eca8d1d40f223a&type=album\"/>\r\n        </div>\r\n      <div className={classes.description}>\r\n        <div className={classes.avatar}>\r\n            <img src=\"https://sun9-74.userapi.com/impg/K_kf_03-X8lP2uixO9tzjxIjrNyUztz0yAMcdw/cBvjDD8FRDs.jpg?size=640x640&quality=96&sign=cc6043c92263a14c75dc8e5517f59cf8&type=album\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfileInfo;","import React from 'react';\r\nimport GenaPosts from './GenaPosts/GenaPosts';\r\n\r\nimport GenaProfileInfo from \"./GenaProfileInfo/GenaProfileInfo\";\r\n\r\n\r\nconst GenaProfile = (props) => {\r\n\r\n    return <div>\r\n        <GenaProfileInfo/>\r\n\r\n        <GenaPosts posts={props.posts} dispatch={props.dispatch}/>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfile;","import React from 'react';\r\n\r\n\r\nconst NikitaProfile = (props) => {\r\n\r\n    return <div>\r\n    <img src='https://sun9-59.userapi.com/impg/-0uRmUFYMzw1edpnx6Zf26nyDK5C9k8lfa1ZNA/mY7HJSdsAJU.jpg?size=537x645&quality=96&sign=ebb93117806db9e5e54a3de35211efc0&type=album' />\r\n    </div>\r\n}\r\n\r\nexport default NikitaProfile;","import React from 'react';\r\nimport classes from './Eachmessage.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    message: string\r\n}\r\n\r\n\r\nconst Eachmessage: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.massages}>\r\n                <div className={classes.massage}> {props.message}  </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Eachmessage;","import React from 'react';\r\nimport classes from './Eachdialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst Eachdialog: React.FC<PropsType> = (props) => {\r\n\r\n    let path = \"/diallogs/\" + props.id;\r\n    return (\r\n        < div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path} activeClassName={classes.activeLink}> {props.name}</NavLink>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Eachdialog;","import React from 'react';\r\nimport classes from './Diallogs.module.css'\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport Eachmessage from \"./Eachmessage/Eachmessage\";\r\nimport Eachdialog from \"./Eachdialog/Eachdialog\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogReducer\";\r\n\r\n\r\ntype MyFormValues = {\r\n    message: string;\r\n}\r\nconst initialValues: MyFormValues = {\r\n    message: 'wish',\r\n}\r\n\r\nexport type MapStatePropsType = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n}\r\nexport type MapDispatchPropsType = {\r\n    addMessageActionCreator: (newText: string) => void\r\n}\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\n\r\ntype OnSubmitType = {\r\n    onSubmit: (values: {message: string}) => void\r\n}\r\ntype all = PropsType & MyFormValues & OnSubmitType\r\n\r\nconst Diallogs: React.FC<all>  = (props) => {\r\n    let dialogsElements = props.dialogs.map(el => <Eachdialog key={el.id} id={el.id} name={el.name}/>)\r\n    let messageElements = props.messages.map(el => <Eachmessage key={el.id} message={el.message}/>)\r\n\r\n    const onSubmit = (values: {message: string}) =>{\r\n        props.addMessageActionCreator(values.message)\r\n    }\r\n\r\n    return (\r\n        < div>\r\n           <AddMessageForm onSubmit={onSubmit}/>\r\n            < div className={classes.dialogs}>\r\n\r\n                < div className={classes.dialogsitem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={classes.massages1}>\r\n                    {messageElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst AddMessageForm: React.FC<OnSubmitType> = (props) => {\r\n    return (<Formik initialValues={initialValues} onSubmit={props.onSubmit}>\r\n            <Form >\r\n                <div className={classes.seacrh}>\r\n                    <Field type='text' className={classes.text} name='message' component='textarea'/>\r\n                    <button className={classes.but} type='submit'> Add Message</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Diallogs;","import React from 'react';\r\n\r\nimport {actions } from \"../../redux/dialogReducer\";\r\nimport Diallogs, {MapDispatchPropsType, MapStatePropsType} from \"./Diallogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        messages: state.dialogs.messages,\r\n        dialogs: state.dialogs.dialogs\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {addMessageActionCreator: actions.addMessageActionCreator}),\r\n    withAuthRedirect\r\n)(Diallogs);","import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"../Profile/MyPosts/MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport * as Yup from 'yup'\r\n\r\n\r\ntype MyFormValues = {\r\n    new: string\r\n    pic: string\r\n}\r\ntype  PropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n}\r\n\r\n\r\n\r\nconst AddPostFormik: React.FC<PropsType> = (props) => {\r\n    const initialValues: MyFormValues = {\r\n        new: '',\r\n        pic: '',\r\n\r\n    }\r\n    const validationSchema = Yup.object({\r\n        new: Yup.string()\r\n            .required('Required')\r\n            .max(50, \"Too many symbols\"),\r\n        pic: Yup.string()\r\n            .required('Required')\r\n    })\r\n\r\n    const onSubmit = ( values: { new: string, pic: string }) => {\r\n        props.addPostActionCreator(values.new, values.pic)\r\n\r\n    }\r\n    return (<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        <Form>\r\n            <span className={classes.fieldPosts}>\r\n\r\n                <div className={classes.error}> <ErrorMessage name='new'/></div>\r\n                <div className={classes.error}><ErrorMessage name='pic'/></div>\r\n                <div> </div>\r\n                <Field className={classes.textarea} placeholder=\"ваша новость\" type='text' name='new'\r\n                      component='textarea'/>\r\n                <Field className={classes.textarea} placeholder=\"ваше картинка\" type='text' name='pic'\r\n                       component='textarea'/>\r\n <button className={classes.button}>Опубликовать</button>\r\n\r\n            </span>\r\n\r\n            </Form>\r\n    </Formik>)\r\n\r\n}\r\nexport default AddPostFormik","import React from 'react';\r\nimport classes from './News.module.css'\r\nimport AddPostFormik from \"../AddPostForm/AddPostForm\";\r\n\r\n\r\nimport {PostsType} from \"../../Types/Types\";\r\n\r\n\r\ntype PropsType = {\r\n    newsElements: Array<PostsType>\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n\r\n}\r\n\r\n\r\nconst News: React.FC<PropsType>  =(props) => {\r\n\r\n    let newsElements = props.newsElements\r\n\r\n    return (\r\n        < div className={classes.content}>\r\n           <div>\r\n\r\n                   <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n\r\n           </div>\r\n            {newsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './EachNew.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    post: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n}\r\n\r\nconst EachNew: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.news}>\r\n\r\n                <div className={classes.newsName}>\r\n\r\n                <img src={props.avatar} className={classes.ava} />\r\n                    <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={classes.content}>\r\n                        {props.post}\r\n                    </div>\r\n\r\n                <img src={props.picture} className={classes.picture}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachNew;","import React from 'react';\r\nimport News from \"./News\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {actions} from \"../../redux/profileReducer\";\r\nimport EachNew from \"./EachNew/EachNew\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        newsElements: state.news.new.map(el => <EachNew key={el.id} post={el.post} time={el.time} avatar={el.avatar} user={el.user}\r\n                                                        picture={el.picture}/>)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,{addPostActionCreator: actions.addPostActionCreator}),\r\n     withAuthRedirect\r\n)\r\n(News)\r\n","export default __webpack_public_path__ + \"static/media/04de2e31234507.564a1d23645bf.1cbc65b1.gif\";","import preLoader from \"../../../assets/images/04de2e31234507.564a1d23645bf.gif\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preLoader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","\r\n\r\n\r\n\r\n// export  const getFriendsUsers =(state) =>{\r\n//     return state.friends.users\r\n// }\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\nexport  const getUsers =(state: AppStateType) =>{\r\n    return state.friends.users\r\n}\r\nexport  const getAPageSize =(state: AppStateType) =>{\r\n    return state.friends.pageSize\r\n}\r\nexport  const getTotalCount =(state: AppStateType) =>{\r\n    return state.friends.totalItemsCount\r\n}\r\nexport  const getCurrentPage =(state: AppStateType) =>{\r\n    return state.friends.currentPage\r\n}\r\nexport  const getisFetching =(state: AppStateType) =>{\r\n    return state.friends.isFetching\r\n}\r\nexport  const getUsersFilter =(state: AppStateType) =>{\r\n    return state.friends.filter\r\n}","export default __webpack_public_path__ + \"static/media/DZIAss-5O_I.d5bd3e11.jpg\";","import React from \"react\";\r\nimport classes from \"./users.module.css\";\r\nimport photoAva from \"../../assets/images/DZIAss-5O_I.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { UserType} from \"../../Types/Types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    key: number\r\n    unfollowThunk: (userId: number) => void\r\n    followThunk: (id: number, photo: string | null, name: string) => void\r\n}\r\n\r\nlet EachUser: React.FC<PropsType> = (props) => {\r\n    let user= props.user\r\n    return <div key={user.id} className={classes.newUsers}>\r\n                <div className={classes.userInfo}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img alt=\"avatar\" src={user.photos.small != null ? user.photos.small : photoAva} className={classes.userPhoto}/>\r\n                    </NavLink>\r\n                    <span className={classes.userInfoShort}>\r\n                <div className={classes.fullname}>\r\n                    {user.name}\r\n                </div>\r\n                <div className={classes.status}>\r\n                    {user.status != null ? user.status : 'я тут'}\r\n                </div>\r\n                 <div className={classes.country}>\r\n                    Russia\r\n                 </div>\r\n                <div className={classes.city}>\r\n                    Moscow\r\n                </div>\r\n            </span>\r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button onClick={() => { props.unfollowThunk(user.id) }} className={classes.buttons}> Удалить из друзей </button> :\r\n                        <button className={classes.buttons} onClick={() => { props.followThunk(user.id, user.photos.small, user.name)}}> Добавить в друзья </button>}\r\n                </div>\r\n\r\n            </div>\r\n}\r\n\r\nexport default EachUser","import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages:  Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber -1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={classes.paginator}>\r\n        {portionNumber >1 &&\r\n        <button onClick={()=> { setPortionNumber(portionNumber-1)}}> back </button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={cn ({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                }}> {p} </span>\r\n            })}\r\n        {portionCount> portionNumber &&\r\n        <button onClick={()=> {setPortionNumber(portionNumber + 1)}}> next </button>}\r\n        <button onClick={()=> {setPortionNumber(portionNumber=portionCount)}}> last </button>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/friendsReducer\";\r\n\r\n\r\nconst usersSearchValidation = (values: any)=> {\r\n    const errors = {}\r\n    return errors\r\n}\r\n type PropsType = {\r\n     onFilterChanged: (filter: FilterType) => void\r\n }\r\ntype FormType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\nconst UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const sumbit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            initialValues={{ term: '' , friend: 'null'}}\r\n            validate={usersSearchValidation}\r\n            onSubmit={sumbit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" placeHolder={'Find friend'}/>\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n})\r\n\r\nexport default UsersSearchForm","import React, {useEffect} from \"react\";\r\nimport EachUser from \"./EachUser\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport {UserType} from \"../../Types/Types\";\r\nimport UsersSearchForm from \"./UsersSearchForm\";\r\nimport {FilterType, followThunk, getUsersThunkCreater, unfollowThunk} from \"../../redux/friendsReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getAPageSize,\r\n    getCurrentPage,\r\n    getTotalCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/friendsSelectors\";\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport const Users: React.FC<PropsType> = (props)  => {\r\n\r\n\r\n    const totalItemsCount = useSelector(getTotalCount)\r\n    const users = useSelector(getUsers)\r\n    const  filter = useSelector(getUsersFilter)\r\n    const pageSize = useSelector(getAPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersThunkCreater(currentPage, pageSize, filter))\r\n    }, [])\r\n\r\n   const onPageChanged = (pageNumber: number) => {\r\n     dispatch(getUsersThunkCreater(pageNumber, pageSize, filter))\r\n    }\r\n   const onFilterChanged = (filter: FilterType) => {\r\n       dispatch(getUsersThunkCreater(1, pageSize, filter))\r\n    }\r\n    const unfollowThunk1 = (userId: number) => {\r\n        dispatch(unfollowThunk(userId))\r\n    }\r\n    const followThunk1 =(id: number, photo: string | null, name: string) => {\r\n        dispatch(followThunk(id, photo, name))\r\n    }\r\n\r\n    return <div>\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage}\r\n                    totalItemsCount={totalItemsCount}\r\n                    pageSize={pageSize}\r\n                    onPageChanged={onPageChanged}\r\n                   portionSize={10}/>\r\n       <div>{\r\n           users.map(u => <EachUser user={u}\r\n                                           key={u.id}\r\n                                           unfollowThunk={unfollowThunk1}\r\n                                           followThunk={followThunk1} />)\r\n        }</div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Preloader from \"../common/Preloder/Preloader\";\r\nimport {getisFetching} from \"../../redux/friendsSelectors\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n}\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n    const isFetching = useSelector(getisFetching)\r\n\r\n    return <>\r\n\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n\r\n\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\ntype all = PropsType\r\n\r\n\r\nconst ProfileStatusWithHooks : React.FC<all> =(props)=>{\r\n\r\n\r\n    let [editMode1, setEditMode1] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( ()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = ()=>{\r\n        setEditMode1(true)\r\n    }\r\n\r\n    const deactivateEditMode = ()=>{\r\n            setEditMode1(false)\r\n       props.updateStatusThunk(status)\r\n\r\n    }\r\n\r\n   const onStatusChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode1 &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n                </div>\r\n                }\r\n                {editMode1 &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport { Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {ProfileType} from \"../../../Types/Types\";\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n\r\n})\r\n\r\ntype PropsType = {\r\n    onSubmit: (values: any) => void\r\n    initialValues: ProfileType\r\n    profile: ProfileType\r\n    saveProfile: (profile: ProfileType) => any\r\n    isError: boolean\r\n}\r\n\r\n\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({initialValues, onSubmit, profile, isError}) =>{\r\n\r\n\r\n\r\n\r\n\r\n    return ( <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form>\r\n            {<div> <button >Save </button></div>}\r\n            <div className={classes.info}>\r\n                Name\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"ваше имя\" type='text' name='fullName'\r\n                   component='textarea'/>\r\n\r\n            <div className={classes.info}>\r\n                <b>Info</b>\r\n            </div>\r\n            <div >\r\n                <b>About me</b>:\r\n            </div>\r\n                <Field className={classes.textarea} placeholder=\"О вас\" type='text' name='aboutMe'\r\n                       component='textarea'/>\r\n            <div >\r\n              <b className={classes.info}> Contacts</b>\r\n                <div>{isError ? <span className={classes.error}> Wrong URL </span> : null} </div>\r\n                {Object.keys(profile.contacts).map(key=>{\r\n              return <div key={key} className={classes.info}>\r\n                <b> {key}: <Field  placeholder={key} type='text' name={\"contacts.\" + key}\r\n                                  component='input'/> </b>\r\n              </div>\r\n\r\n         })}\r\n         </div>\r\n\r\n\r\n            <div><b>lookingForAJob</b> </div>\r\n                <Field className={classes.textarea}  type='checkbox' name='lookingForAJob'/>\r\n\r\n            <div>\r\n                <b>My skills</b>\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"Ваши навыки\" type='text' name='lookingForAJobDescription'\r\n                    component='textarea'/>\r\n\r\n\r\n\r\n            {/*<div>userId - {profile.userId}</div>*/}\r\n            </Form>\r\n        </Formik>\r\n    )}\r\n\r\n\r\nexport default ProfileDataForm","import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloder/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {contactsType, ProfileType} from \"../../../Types/Types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile ,status, updateStatusThunk, isOwner, savePhoto, saveProfile, isError} ) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    if(!profile){\r\n        return <Preloader />}\r\n\r\n    const onSubmit = ( values: ProfileType) => {\r\n        saveProfile(values).then(\r\n            ()=>{\r\n                setEditMode(false)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>)=>{\r\n       if( e.target.files?.length){\r\n           // if (r.target.files && e.target.files.lenght){\r\n        savePhoto(e.target.files[0])\r\n       }\r\n    }\r\n\r\n\r\n    return <div>\r\n      <div className={classes.description}>\r\n        <div >\r\n            <img className={classes.avatar} alt=\"avatar\" src={ profile.photos.large === null ? 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png' : profile.photos.large }/>\r\n            {isOwner && <input onChange={mainPhotoSelected} type={'file'}/>}\r\n        </div>\r\n          <div className={classes.info}>\r\n              Status (дабл клик)\r\n          </div>\r\n          <b><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk}/></b>\r\n          {editMode ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile} saveProfile={saveProfile} isError={isError}/> :\r\n          <ProfileData profile={profile} isOwner={isOwner} goToEditMode={()=> {setEditMode(true)}}/>}\r\n      </div>\r\n    </div>\r\n}\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, isOwner, goToEditMode}) =>{\r\n\r\n   return ( <div>\r\n           {isOwner && <div> <button className={classes.editButton} onClick={goToEditMode} >Edit Profile Info</button></div>}\r\n    <div className={classes.info}>\r\n        Name\r\n    </div>\r\n    <b>{profile.fullName}</b>\r\n\r\n    <div className={classes.info}>\r\n        <b>Info</b>\r\n    </div>\r\n    <div >\r\n        <b>About me</b>:  {profile.aboutMe}\r\n    </div>\r\n    <div >\r\n        <b className={classes.info}>Contacts</b>  :{Object.keys(profile.contacts).map((key)=>{\r\n        return <Contact key={key} contactTitle={key} ContactValue={profile.contacts[key as  keyof contactsType]}/>\r\n    })}\r\n    </div>\r\n\r\n    <div> <b>lookingForAJob</b>  {profile.lookingForAJob ? 'yes' : 'no'  }</div>\r\n    <div>{ profile.lookingForAJob &&\r\n    <div>\r\n        <b> My skills </b> -  {profile.lookingForAJobDescription}\r\n    </div>\r\n    }\r\n\r\n    </div>\r\n    </div>\r\n   )}\r\n\r\ntype ContactsPropsType = {\r\n    contactTitle: string\r\n    ContactValue: string\r\n}\r\nconst Contact: React.FC<ContactsPropsType> = ({contactTitle, ContactValue})=>{\r\n    return <div><b className={classes.info}>{contactTitle}</b>: {ContactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    new: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n    deletePost: ( id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n    let deletePost = ()=>{\r\n        props.deletePost(props.id)\r\n    }\r\n\r\n  return < div>\r\n\r\n    <div className={classes.news}>\r\n\r\n      <div className={classes.newsName}>\r\n\r\n        <img src={props.avatar} className={classes.ava}  alt=\"Avatar\"/>\r\n        <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        {props.new}\r\n      </div>\r\n    <div>\r\n      <img src={props.picture} className={classes.picture}  alt=\"avatar\"/>\r\n        <button onClick={deletePost}> delete post </button>\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport AddPostFormik from \"../../AddPostForm/AddPostForm\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostsType} from \"../../../Types/Types\";\r\n\r\nexport type MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n    deletePost: ( id: number) => void\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\nconst MyPosts: React.FC<PropsType> = (props)=> {\r\n\r\n    let postDate = props.posts.map(el => <Post key={el.id} id={el.id} new={el.post} time={el.time} avatar={el.avatar} user={el.user} picture={el.picture} deletePost={props.deletePost}/>)\r\n\r\n\r\n    return <div className={classes.MyPostsAll}>\r\n\r\n        <h1> My posts </h1>\r\n\r\n        <div className={classes.CreateNewPost}>\r\n            <h2>Create New Post </h2>\r\n        </div>\r\n        <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n        <div className={classes.posts}>\r\n            {postDate}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import MyPosts, {MapStatePropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {actions} from \"../../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        posts: state.profile.posts\r\n    } as MapStatePropsType\r\n}\r\n// let mapDispatchToProps: ThunkType =(dispatch) => {\r\n//     return {\r\n//         addPostActionCreator: (newText: string, pic: string) => {\r\n//             dispatch(addPostActionCreator(newText, pic))\r\n//         },\r\n//         deletePost: (id: number) =>{\r\n//             dispatch(deletePost(id))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n let MyPostsContainer = connect(mapStateToProps, {...actions } )(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../Types/Types\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo isError={props.isError}  saveProfile={props.saveProfile}  savePhoto={props.savePhoto} isOwner={props.isOwner}  profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk, getStatusThunk, savePhoto, saveProfile, updateStatusThunk} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {compose} from \"redux\";\r\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {ProfileType} from \"../../Types/Types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null,\r\n    status: string\r\n    AuthorizedUserId: number | null\r\n    isAuth: boolean\r\n    isError: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfileThunk: (userId: number | null) => void\r\n    savePhoto: (file: File) => void\r\n    getStatusThunk: (userId: number) => void\r\n    updateStatusThunk: (status: string) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\ntype PropsType = MapStatePropsType  & MapDispatchPropsType  & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType>{\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.AuthorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfileThunk(userId as number)\r\n        this.props.getStatusThunk(userId as number)\r\n    }\r\n\r\n\r\ncomponentDidMount()\r\n{\r\n    this.refreshProfile()\r\n}\r\n\r\ncomponentDidUpdate(prevProps: PropsType, prevState: AppStateType)\r\n{\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n    }\r\n\r\n}\r\n\r\nrender()\r\n{\r\n    return (\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                 updateStatusThunk={this.props.updateStatusThunk}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 savePhoto={this.props.savePhoto}\r\n                 isError={this.props.isError}\r\n                 saveProfile={this.props.saveProfile}\r\n        />\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType  => {\r\n    return {\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    AuthorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isError: state.profile.isError\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfileThunk, savePhoto, getStatusThunk, updateStatusThunk, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import {authAPI, ResultCodeEnum, ResultCodeWithCaptchaEnum, securityAPI, usersAPI} from \"../api/api\";\r\n\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\n\r\nconst SET_USER_DATE = 'AUTH/SET_USER_DATE';\r\nconst SET_USER_AVATAR = 'AUTH/SET_USER_AVATAR';\r\nconst SET_ERROR = 'AUTH/SET_ERROR';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'AUTH/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    userAva: null as string | null,\r\n    isError: false,\r\n    captchaUrl: null as string | null,\r\n}\r\n\r\nexport type initialStateType= typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATE:\r\n         return {\r\n                ...state,\r\n             ...action.data,\r\n\r\n            }\r\n\r\n        case SET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                userAva: action.userAva,\r\n\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: SET_USER_DATE,\r\n        data: {\r\n            userId, email, login, isAuth\r\n        }} as const) ,\r\n    setUserAvatar : (avatar: string | null)  => ({\r\n        type: SET_USER_AVATAR,\r\n        userAva: avatar\r\n    }as const),\r\n    setError: (Error: boolean) => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string | null) => ({\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        captchaUrl\r\n    }as const)\r\n}\r\n\r\n\r\nexport const getAuthThunk = (): ThunkType =>async (dispatch) =>{\r\n      let response = await authAPI.getAuth()\r\n                if(response.resultCode === ResultCodeEnum.Success) {\r\n                    let {id, email, login} = response.data\r\n                    dispatch(actions.setAuthUserData(id, email, login, true))\r\n                    usersAPI.getProfilePhoto()\r\n                        .then(response => {\r\n                            dispatch(actions.setUserAvatar(response.photos.small))\r\n                         })\r\n                }\r\n    }\r\n\r\nexport const loginThunk = (email: string, password: string, rememberMe: boolean, captcha: string | null): ThunkType =>async (dispatch) =>{\r\n\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                  await  dispatch(getAuthThunk())\r\n                    dispatch(actions.setError(false))\r\n                    dispatch(actions.getCaptchaUrlSuccess(null))\r\n                }\r\n                 else  {\r\n                    if (response.data.resultCode === ResultCodeWithCaptchaEnum.CaptchaIsRequired){\r\n                        await  dispatch(gerCaptchaUtl())\r\n                    }\r\n                       dispatch(actions.setError(true))\r\n                }\r\n}\r\n\r\nexport const logOutThunk = (): ThunkType =>async (dispatch) =>{\r\n    let response = await authAPI.logOut()\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                    dispatch(actions.setAuthUserData(null, null, null, false))\r\n                }\r\n}\r\nexport const gerCaptchaUtl = (): ThunkType =>async (dispatch) =>{\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n        dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer;","import {getAuthThunk} from \"./authReducer\";\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({\r\n        type: INITIALIZED_SUCCESS,\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const initialiseApp = () =>{\r\n    return (dispatch: any) =>{\r\n      let promise =  dispatch(getAuthThunk())\r\n        promise.then( ()=> {\r\n            dispatch(actions.initializedSuccess())\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer;","\r\nexport type bestfriendsType ={\r\n    id: number,\r\n    name: string,\r\n    avatar: string\r\n    surname: string\r\n}\r\n\r\nlet initialState = {\r\n        bestfriends: [\r\n            {\r\n                id: 1,\r\n                name: 'Геннадий',\r\n                avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                surname: 'Льянов'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Тимур',\r\n                surname: 'Льянов',\r\n                avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Никита',\r\n                surname: 'кесырев',\r\n                avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album'\r\n            }\r\n        ] as Array<bestfriendsType>\r\n\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nconst sideBarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default sideBarReducer;","import {applyMiddleware, combineReducers, createStore, compose, Action} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport musicReducer from \"./musicReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport sideBarReducer from \"./sideBarReducer\";\r\nimport newsReducer from \"./newsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    dialogs: dialogReducer,\r\n    musics: musicReducer,\r\n    friends: friendsReducer,\r\n    news: newsReducer,\r\n    sideBar: sideBarReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n\r\n})\r\n\r\ntype RootReducersType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\nexport type BaseThunkType <A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store","import React from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"./Login.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginThunk} from \"../../redux/authReducer\";\r\n\r\ntype MyFormValues = {\r\n    email: string\r\n    password: string\r\n    checkbox: boolean\r\n    captcha: string | null\r\n}\r\nconst initialValues: MyFormValues = {\r\n    email: '',\r\n    password: '',\r\n    checkbox: false,\r\n    captcha: ''\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    password: Yup.string().required('Required!'),\r\n    email: Yup.string()\r\n        .email('Invalid email format')\r\n        .required('Required'),\r\n\r\n})\r\ntype PropsType = {\r\n    captchaUrl: string | null\r\n    isError: boolean\r\n}\r\nexport const LoginFormAuth: React.FC<PropsType>  = (props)=> {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (values: {email: string,password: string, checkbox: boolean, captcha: string | null }) =>{\r\n        dispatch(loginThunk(values.email, values.password, values.checkbox, values.captcha))\r\n    }\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Form>\r\n                <div>\r\n                    <Field placeholder={'login'} type='text' id='email' name='email' className={classes.field}/>\r\n                    <ErrorMessage name='email' />\r\n                </div>\r\n                <div>\r\n                    <Field placeholder={'password'} type='text' id='password' name='password' className={classes.field}/>\r\n                    <ErrorMessage name='password'/>\r\n                </div>\r\n                <div>{props.isError ? <span className={classes.error}> Wrong Email or Password or Captcha </span> : null} </div>\r\n                <div>\r\n                    <Field type={'checkbox'} name='checkbox' className={classes.field}/>\r\n                </div>\r\n                {props.captchaUrl && <img src={props.captchaUrl} alt={'captcha'}/>}\r\n                {props.captchaUrl && <Field placeholder={'captcha'} type='text' name='captcha' className={classes.field}/>}\r\n\r\n                <button type='submit' className={classes.button}> Submit </button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport classes from './Login.module.css'\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {LoginFormAuth} from \"./LoginFormAuth\";\n\n\n\n\n\n\n\nexport const Login: React.FC= (props) => {\n    const captchaUrl = useSelector((state: AppStateType )=> state.auth.captchaUrl)\n    const isError = useSelector((state: AppStateType )=> state.auth.isError)\n    const isAuth = useSelector((state: AppStateType )=> state.auth.isAuth)\n\n\n\n    if(isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n    return <div className={classes.All}>\n        <h3> Login </h3>\n        <LoginFormAuth isError={isError} captchaUrl={captchaUrl} />\n    </div>\n}\n\n\n\n","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {logOutThunk} from \"../../redux/authReducer\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\n\r\n\r\nexport const HeaderComponent: React.FC = (props) => {\r\n\r\n  const isAuth = useSelector((state: AppStateType)=> state.auth.isAuth)\r\n  const login = useSelector((state: AppStateType)=> state.auth.login)\r\n  const userAva = useSelector((state: AppStateType)=> state.auth.userAva)\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  return <header className={classes.header} >\r\n\r\n\r\n      <span className={classes.loginBlock}>\r\n       {isAuth? <span>\r\n           <NavLink to=\"/profile\" className={classes.signIn}>{login}</NavLink>\r\n       <Button className={classes.button1} onClick={() => dispatch(logOutThunk())}> logIot</Button></span> : <NavLink className={classes.signIn} to={'/login'}>Sign in</NavLink>}\r\n          <img alt={'ava'} src={userAva as string} className={classes.userAvatar}/>\r\n   </span>\r\n  </header>\r\n}\r\n","import React, {lazy, Suspense} from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport {HashRouter, Link, Route, Switch, withRouter} from 'react-router-dom'\nimport Friends from \"./components/Friends/Friends\";\nimport GenaProfile from \"./components/ProfileGena/GenaProfile\";\nimport NikitaProfile from \"./components/NikitaProfile\";\nimport DiallogsContainer from \"./components/Diallogs/DiallogsContainer\";\nimport NewsContainer from \"./components/News/NewsContainer\";\nimport NavBarContainer from \"./components/NavBar/NavBarContainer\";\nimport  {UsersPage} from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialiseApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloder/Preloader\";\nimport {withAuthRedirect} from \"./hoc/withAuthRedirect\";\nimport store, {AppStateType} from \"./redux/reduxStore\";\nimport {Login} from \"./components/Login/Login\";\n\n\nimport { Layout, Menu } from 'antd';\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined } from '@ant-design/icons';\nimport classes from \"./components/NavBar/NavBar.module.css\";\nimport {HeaderComponent} from \"./components/Header/Header\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\n\n\n\n// import MusicContainer from \"./components/Music/MusicContainer\";\nconst MusicContainer = lazy(() => import('./components/Music/MusicContainer'));\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    initialiseApp: ()=> void\n}\n\ntype PropsType = MapPropsType & DispatchPropsType\nclass App extends React.Component<PropsType> {\n\n    componentDidMount() {\n        this.props.initialiseApp()\n        window.onerror = function myErrorHandler(errorMsg, url, lineNumber) {\n            alert(\"Error occured: \" + errorMsg);//or any message\n            return false;\n        }\n    }\n\n\n\n    render() {\n        if(!this.props.initialized){\n            return <Preloader />\n        }\n\n\n        return (\n            <Layout>\n                <Sider\n                    className=\"menuShadow\"\n                    breakpoint=\"lg\"\n                    collapsedWidth=\"0\"\n                    onBreakpoint={broken => {\n                        console.log(broken);\n                    }}\n                    onCollapse={(collapsed, type) => {\n                        console.log(collapsed, type);\n                    }}\n                >\n\n\n                    <div className=\"logo\">\n                        <img className={'logo1'} src=\"https://avatanplus.com/files/resources/original/5bf6f0c0b38e91673c9c70df.png\" alt={'logo'}/>\n                    </div>\n\n\n                    <Menu   theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n\n                        <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                            <Link to = \"/profile\">My page</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                            <Link  to = '/news' >News</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n                            <Link to = '/diallogs'>Messages</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"4\" icon={<UserOutlined />}>\n                            <Link to = '/friends' > Friends</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"5\" icon={<UserOutlined />}>\n                            <Link to = '/users' > Пользователи</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"6\" icon={<UserOutlined />}>\n                            <Link to = '/music' >Music</Link>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header className=\"site-layout-sub-header-background\" style={{ padding: 0, height: 68 }} >\n                     <HeaderComponent />\n                    </Header>\n                    <Content style={{ margin: '24px 16px 0' }}>\n                        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n                            <Switch>\n                                             <Route path='/diallogs' render={() => <DiallogsContainer/>}/>\n                                             <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n\n                                          <Route path='/news' render={() => <NewsContainer/>}/>\n                                           <Route path='/music'\n                                              render={() => {\n                                              return <Suspense fallback={<div>loading...</div>}>\n                                                      <MusicContainer/>\n                                                   </Suspense>\n                                               }}/>\n                                         <Route path='/friends'\n                                                render={() => <Friends/>}/>\n                                         <Route path='/users'\n                                               render={() => <UsersPage/>}/>\n                                        <Route path='/login'\n                                                render={() => <Login/>}/>\n\n                                        <Route path='/https://vk.com/dank_af' render={() => <GenaProfile/>}/>\n                                         <Route path='/https://vk.com/id153839551' render={() => <NikitaProfile/>}/>\n                                        {/*<Route exatc path='/' render={() => <ProfileContainer/>}/>*/}\n                                     </Switch>\n                        </div>\n                    </Content>\n                    <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n                </Layout>\n            </Layout>\n            // <div className=\"app-wrapper\">\n            //     <HeaderContainer/>\n            //\n            //     <NavBarContainer/>\n            //\n            //\n            //     <div className='app-wrapper-content'>\n            //         <Switch>\n            //             <Route path='/diallogs' render={() => <DiallogsContainer/>}/>\n            //             <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n            //\n            //             <Route path='/news' render={() => <NewsContainer/>}/>\n            //             <Route path='/music'\n            //                    render={() => {\n            //                        return <Suspense fallback={<div>loading...</div>}>\n            //                            <MusicContainer/>\n            //                        </Suspense>\n            //                    }}/>\n            //             <Route path='/friends'\n            //                    render={() => <Friends/>}/>\n            //             <Route path='/users'\n            //                    render={() => <UsersPage/>}/>\n            //             <Route path='/login'\n            //                    render={() => <Login/>}/>\n            //\n            //             <Route path='/https://vk.com/dank_af' render={() => <GenaProfile/>}/>\n            //             <Route path='/https://vk.com/id153839551' render={() => <NikitaProfile/>}/>\n            //             {/*<Route exatc path='/' render={() => <ProfileContainer/>}/>*/}\n            //         </Switch>\n            //     </div>\n            //\n            // </div>\n\n        );\n    }\n}\n\nconst mapStateToProps=(state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initialiseApp}\n    ))(App)\n\n\n\nconst AppAllTree: React.FC = () => {\n    return <HashRouter>\n            <Provider store={store}>\n                <AppContainer  />\n            </Provider>\n        </HashRouter>\n\n}\n\nexport default AppAllTree","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom'\nimport AppAllTree from \"./App\";\n\n\n\n\n\nReactDOM.render(<AppAllTree/>, document.getElementById('root'))\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"MyPosts_CreateNewPost__TUHrA\",\"button\":\"MyPosts_button__38MYr\",\"text\":\"MyPosts_text__1mrPN\",\"MyPostsAll\":\"MyPosts_MyPostsAll__3ob6t\",\"posts\":\"MyPosts_posts__2dvRz\",\"error\":\"MyPosts_error__1XihJ\",\"fieldPosts\":\"MyPosts_fieldPosts__3LCzN\",\"textarea\":\"MyPosts_textarea__36VcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__37DVA\",\"userInfo\":\"users_userInfo__1i9af\",\"city\":\"users_city__34Qg4\",\"country\":\"users_country__2YG7o\",\"fullname\":\"users_fullname__t6TvB\",\"status\":\"users_status__P4F29\",\"userInfoShort\":\"users_userInfoShort__Sol0P\",\"buttons\":\"users_buttons__3qoMB\",\"newUsers\":\"users_newUsers__bROM6\",\"selectedPage\":\"users_selectedPage__3TJ-2\",\"page\":\"users_page__1f0Li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__1sda0\",\"All\":\"Login_All__SfU0o\",\"field\":\"Login_field__3tZDj\",\"button\":\"Login_button__39Ufa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsName\":\"EachNew_newsName__tK9XI\",\"mes\":\"EachNew_mes__1MNfW\",\"ava\":\"EachNew_ava__2_wNX\",\"news\":\"EachNew_news__2410I\",\"picture\":\"EachNew_picture__3xUU_\",\"user\":\"EachNew_user__10HWz\",\"time\":\"EachNew_time__1j6ak\",\"content\":\"EachNew_content__1DBBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1c5fN\",\"nick\":\"Post_nick__2myDA\",\"mes\":\"Post_mes__3HpwP\",\"newsName\":\"Post_newsName__3riSQ\",\"ava\":\"Post_ava__18Tyu\",\"news\":\"Post_news__GR46K\",\"picture\":\"Post_picture__MVs_7\",\"user\":\"Post_user__3UmBl\",\"time\":\"Post_time__3E8hG\",\"content\":\"Post_content__1sHR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Diallogs_dialogs__1c_Mg\",\"dialogsitem\":\"Diallogs_dialogsitem__3dp5x\",\"massages1\":\"Diallogs_massages1__84Vqo\",\"but\":\"Diallogs_but__2QEX_\",\"text\":\"Diallogs_text__30Bvb\",\"seacrh\":\"Diallogs_seacrh__23rDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__BeMIC\",\"button1\":\"Header_button1__L0Utc\",\"logo\":\"Header_logo__bnw5J\",\"track\":\"Header_track__2AQ2F\",\"signIn\":\"Header_signIn__1J82i\",\"loginBlock\":\"Header_loginBlock__2No9o\",\"userAvatar\":\"Header_userAvatar__3eU9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"All_all__2BRQe\",\"but\":\"All_but__1YGhY\",\"textare\":\"All_textare__3Qmi7\",\"seacrh\":\"All_seacrh__3TRLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"GenaPosts_CreateNewPost__389UC\",\"button\":\"GenaPosts_button__JV3Av\",\"text\":\"GenaPosts_text__1Kq_C\",\"MyPostsAll\":\"GenaPosts_MyPostsAll__1mnbb\",\"posts\":\"GenaPosts_posts__V2lPh\"};","const ADD_SONG = 'ADD-SONG';\r\nconst UPDATE_NEW_SONG_TEXT = 'UPDATE-NEW-SONG-TEXT';\r\n\r\n\r\n\r\nexport type SongsType = {\r\n    id: number\r\n    nameSong: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n        songs: [\r\n            {\r\n                id: 1, nameSong: 'gachimuchi -' +\r\n                    ' А как насчёт ♂?♂'\r\n            },\r\n            {\r\n                id: 2, nameSong: 'GACHIMUCHI -' +\r\n                    ' Чудо (right version)'\r\n            },\r\n            {\r\n                id: 3, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Филипп Киркоров - Это не снег♂'\r\n            },\r\n            {\r\n                id: 4, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Спокойная ночь - Кино♂'\r\n            },\r\n            {\r\n                id: 5, nameSong: 'GachiMuchi -' +\r\n                    ' Я назову планету'\r\n            },\r\n        ] as Array<SongsType>,\r\n        newsongtext: \"\",\r\n    count: 7\r\n    }\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionTypes = SongOnChangeActionCreatorType | AddSongActionCreatorType\r\n\r\nconst musicReducer = (state = initialState, action: ActionTypes): initialStateType => {\r\n\r\n\r\n    switch (action.type){\r\n        case ADD_SONG: {\r\n            let newSong = {\r\n                id: state.count,\r\n                nameSong: state.newsongtext,\r\n\r\n            };\r\n            return {...state,\r\n                songs: [newSong, ...state.songs],\r\n                newsongtext: '',\r\n                count: state.count+1\r\n            };\r\n        }\r\n        case UPDATE_NEW_SONG_TEXT:\r\n            return  {...state,\r\n                newsongtext: action.newText\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\ntype SongOnChangeActionCreatorType = {\r\n    type: typeof UPDATE_NEW_SONG_TEXT,\r\n    newText: string\r\n}\r\nexport const songOnChangeActionCreator = (text: string): SongOnChangeActionCreatorType => ({\r\n    type: UPDATE_NEW_SONG_TEXT,\r\n    newText: text\r\n})\r\ntype AddSongActionCreatorType = {\r\n    type: typeof ADD_SONG,\r\n}\r\nexport const addSongActionCreator = (): AddSongActionCreatorType => ({type: ADD_SONG});\r\n\r\nexport default musicReducer;"],"sourceRoot":""}