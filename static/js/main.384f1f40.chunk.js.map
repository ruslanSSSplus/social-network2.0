{"version":3,"sources":["pages/ProfileGena/GenaPosts/GenaPosts.module.css","pages/Chat/ChatPage.module.css","pages/Diallogs/Eachdialog/Eachdialog.module.css","pages/ProfileGena/GenaProfileInfo/GenaProfileInfo.module.css","pages/Music/Music.module.css","pages/Friends/All/Friend/Friend.module.css","pages/Diallogs/Eachmessage/Eachmessage.module.css","pages/Music/EachSong/EachSong.module.css","pages/Profile/Profile.module.css","pages/News/News.module.css","pages/Friends/Friends.module.css","pages/NewProject/Beer.module.css","pages/Profile/ProfileInfo/ProfileInfo.module.css","api/api.ts","reportWebVitals.js","api/auth-api.ts","api/security-api.ts","api/user-api.ts","redux/authReducer.ts","redux/appReducer.ts","assets/images/04de2e31234507.564a1d23645bf.gif","components/common/Preloder/Preloader.tsx","redux/newsReducer.ts","api/profile-api.ts","api/gif-api.ts","redux/profileReducer.ts","redux/dialogReducer.ts","redux/musicReducer.ts","redux/friendsReducer.ts","redux/sideBarReducer.ts","api/chat-api.ts","redux/chatReducer.ts","api/film-api.ts","redux/filmReducer.ts","redux/mainTest.ts","api/books-api.ts","redux/books.ts","api/anime-api.ts","redux/animeReducer.ts","api/test-api.js","redux/testReducer.js","api/cats-api.js","redux/catsReducer.js","assets/songsKISH/korol-i-shut-bluzhdajut-teni.mp3","assets/songsKISH/korol-i-shut-durak-i-molnija.mp3","assets/songsKISH/korol-i-shut-ispoved-vampira.mp3","assets/songsKISH/korol-i-shut-khozjain-lesa.mp3","assets/songsKISH/korol-i-shut-lesnik.mp3","assets/songsKISH/korol-i-shut-mertvyjj-anarkhist.mp3","assets/songsKISH/korol-i-shut-nevesta-palacha.mp3","assets/songsKISH/korol-i-shut-prygnu-so-skaly.mp3","assets/songsKISH/korol-i-shut-severnyjj-flot.mp3","assets/songsKISH/korol-i-shut-v-parizh-domojj.mp3","assets/songsKISH/korol-i-shut-valet-i-dama.mp3","redux/audioReducer.js","redux/reduxStore.ts","components/Header/Header.tsx","pages/Weather/Loading/Loading.tsx","pages/Weather/Weather/Weather.tsx","api/weather-api.ts","pages/Weather/WeatherContainer.tsx","pages/Chat/ChatPage.tsx","pages/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","pages/Profile/ProfileInfo/ProfileDataForm.tsx","pages/Profile/ProfileInfo/ProfileInfo.tsx","components/AddPostForm/AddPostForm.tsx","pages/Profile/MyPosts/Post/Post.tsx","pages/Profile/MyPosts/MyPosts.tsx","pages/Profile/MyPosts/MyPostsContainer.tsx","pages/Profile/Profile.tsx","pages/Profile/ProfileContainer.tsx","pages/News/News.tsx","pages/News/EachNew/EachNew.tsx","pages/News/NewsContainer.tsx","pages/Friends/All/Friend/Friend.tsx","pages/Friends/All/All.tsx","pages/Friends/All/AllContainerHook.tsx","pages/Friends/Friends.tsx","redux/friendsSelectors.ts","assets/images/DZIAss-5O_I.jpg","pages/Users/EachUser.tsx","components/Paginator/Paginator.tsx","pages/Users/UsersSearchForm.tsx","pages/Users/Users.tsx","pages/Users/UsersContainer.tsx","pages/Login/LoginFormAuth.tsx","pages/Login/Login.tsx","pages/Diallogs/Eachmessage/Eachmessage.tsx","pages/Diallogs/Eachdialog/Eachdialog.tsx","pages/Diallogs/Diallogs.tsx","hoc/withAuthRedirect.tsx","pages/Diallogs/DiallogsContainer.tsx","pages/Films/eachFilm.tsx","pages/Films/Films.tsx","pages/Films/FilmsContainer.tsx","pages/Books/Search.jsx","pages/Books/BookCard.jsx","pages/Books/BookList.jsx","pages/Books/Books.jsx","pages/TestRoute/mainPage.tsx","pages/TestRoute/ProfilePage.tsx","pages/PopUpSlider/PopUpSlider.jsx","pages/Anime/eachAnime.tsx","pages/Anime/SearchAnime.tsx","pages/Anime/Anime.tsx","pages/Anime/AnimeContainer.tsx","pages/ProfileGena/GenaPosts/GenaPosts.jsx","pages/ProfileGena/GenaProfileInfo/GenaProfileInfo.jsx","pages/ProfileGena/GenaProfile.jsx","components/NikitaProfile.jsx","pages/Music/EachSong/EachSong.tsx","pages/Music/Music.tsx","pages/Music/MusicContainer.tsx","pages/NewProject/BeerInt.js","pages/Test/EachUser/EachUser.js","pages/Test/Test.js","pages/Test/TestContainer.js","pages/DataPicker/Days.js","pages/DataPicker/DatePicker.js","pages/Cats/EachCat.js","pages/Cats/FavCats.js","pages/Cats/Cats.js","pages/Audio/components/header/Header.js","pages/Audio/components/playlist/Playlist.js","pages/Audio/components/playlist/Actions.js","pages/Audio/components/Controls.js","pages/Audio/Audio.js","Routes/AllRoutes.js","App.tsx","index.js","pages/Anime/Anime.module.css","pages/Users/users.module.css","pages/DataPicker/DataPicker.module.css","pages/Cats/Cats.module.css","pages/Profile/MyPosts/MyPosts.module.css","pages/Films/Films.module.css","pages/Books/books.module.css","pages/PopUpSlider/PopUpSlider.module.css","pages/Weather/Weather.module.css","pages/Login/Login.module.css","pages/Profile/MyPosts/Post/Post.module.css","pages/News/EachNew/EachNew.module.css","pages/Test/Test.module.css","components/Header/Header.module.css","pages/Audio/audio.module.css","components/Paginator/Paginator.module.css","pages/Diallogs/Diallogs.module.css","pages/TestRoute/mainAndProfilePages.module.css","pages/Friends/All/All.module.css","pages/Test/EachUser/EachUser.module.css","App.module.css"],"names":["module","exports","ResultCodeEnum","ResultCodeWithCaptchaEnum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","authAPI","get","response","data","email","password","rememberMe","captcha","post","delete","securityAPI","usersAPI","currentPage","pageSize","term","friend","id","SET_USER_DATE","SET_USER_AVATAR","SET_ERROR","GET_CAPTCHA_URL_SUCCESS","initialState","userId","login","isAuth","userAva","isError","captchaUrl","actions","type","avatar","Error","getAuthThunk","dispatch","a","resultCode","Success","photos","small","gerCaptchaUtl","url","authReducer","state","action","INITIALIZED_SUCCESS","initialized","appReducer","Preloader","src","preLoader","alt","new","time","user","picture","newsReducer","profileAPI","status","put","photoFile","formData","FormData","append","res","profile","gifApi","images","original","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","SET_OWNER_PHOTO","SET_NEW_GIF","SET_ALL_GIFS","posts","countPosts","photo","gif","newsImport","addPostActionCreator","newText","pic","deletePost","idToRemove","setUsersProfile","savePhotoSuccess","setErrorProfile","setStatus","setOwnerAvatar","setNewGif","setAllGifts","newGifs","getProfileThunk","newGifts","newGif","profileReducer","newPost","unshift","filter","item","stateCopy","i","ADD_MESSAGE","messages","message","dialogs","name","count","addMessageActionCreator","dialogReducer","newMessage","ADD_SONG","UPDATE_NEW_SONG_TEXT","songs","nameSong","newsongtext","musicReducer","newSong","ADD_USER","FRIEND_CHECK","FRIEND_REMOVE","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_ITEMS_COUNT","IS_FETCHING","SET_FILTER","friendDate","link","surname","friendsAlready","users","totalItemsCount","isFetching","isFriend","friendCheckAC","removeFriendAC","follow","unfollow","setUsers","addUserAC","avatarPhoto","isFetchingDispatch","isFetchingBOOL","setTotalItemsCount","Count","setCurrentPage","p","setFilter","payload","getUsersThunkCreater","items","totalCount","unfollowThunk","friendsReducer","friendDateSet","friendsCollection","Set","newFriendUser","add","Array","from","map","u","followed","bestfriends","sideBarReducer","subscribers","ws","closeHandler","notifySubsAboutStatus","setTimeout","createChannel","onMessageHandler","e","JSON","parse","forEach","s","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatApi","eventName","callback","push","send","SET_RECEIVED","STATUS_CHANGED","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","chatReducer","m","v1","index","array","length","filmAPI","movies","ADD_FILM","DELETE_FILM","LIKE_FILM","DISLIKE_FILM","films","isLoading","getFilmsThunkCreater","pageNumber","response2","obj","like","allFilms","deleteFilm","likeFilm","dislikeFilm","filmReducer","UPDATE_NEW_LOGIN_TEXT","UPDATE_NEW_PASSWORD_TEXT","IS_DISABLED","NEED_REDIRECT","newLogintext","newPasswordtext","isDisabled","needRedirect","text","mainTestReducer","booksAPI","smth","NEW_SEARCH","ADD_BOOKS","NEW_SORT","books","searchField","sort","ccleaner","book","volumeInfo","hasOwnProperty","thumbnail","searchBookThunkCreater","cleanBooks","addBooks","handleSearchAC","handleSort","booksReducer","animeAPI","ADD_ANIME","ADD_ANIMES","DELETE_ANIME","LIKE_ANIME","DISLIKE_ANIME","animes","getAnimesThunkCreater","allAnimes","deleteAnime","likeAnime","dislikeAnime","addAnimes","animeReducer","testAPI","fetch","method","body","stringify","json","oldMessages","NEW_MASSEGES","OLD_MASSAGES","newMessagesThunkCreater","oldMessage","testReducer","catsAPI","page","NEW_CATS","NEW_CURRENT_PAGE","SET_FETCHING","SET_FAVORITE","DELETE_FAVORITE","cats","favorite","getNewCats","setFetching","bool","setPage","addFav","deleteFav","catsReducer","favoriteCopy","cat","find","SET_CURRENT_SONG","TOGGLE_RANDOM","TOGGLE_REPEAT","TOGGLE_PLAYING","SET_SONGS_ARRAY","currentSong","repeat","random","playing","audio","song_list","title","artistName","albumTitle","fileUrl","teni","durak","vampor","les","lesnik","anarkhist","nevesta","skala","severni","parij","valet","nextSongThunkCreater","togglePlaying","Math","SetCurrent","songsSet","songArr","toggleRepeat","toggleRandom","audioReducer","log","rootReducer","combineReducers","musics","friends","news","sideBar","auth","app","chat","film","anime","test","maintest","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","HeaderComponent","props","useSelector","useDispatch","useEffect","className","classes","header","loginBlock","to","signIn","button1","onClick","userAvatar","Loading","loading","weatherOptions","Rain","iconName","gradient","subTitle","Snow","Drizzle","Thunderstorm","Dust","Mist","Smoke","Haze","Sand","Ash","Squall","Tornado","Clear","Clouds","Weather","temp","condition","halfContainer","style","backgroundImage","weatherAPI","latitude","longitude","WeatherContainer","useState","setIsLoading","setTemp","setCondition","gerPosition","pos","crd","coords","getWeather","main","weather","getLocation","navigator","geolocation","getCurrentPosition","alert","round","ChatPage","all","Chat","Messages","messagesAnchorRef","useRef","autoScrollIsActive","SetAutoScrollIsActive","current","scrollIntoView","behavior","onScroll","element","currentTarget","abs","scrollHeight","scrollTop","clientHeight","Message","ref","React","memo","ava","userName","AddMassageForm","setMessage","sendMessage","sendMessageThunk","onKeyDown","event","key","preventDefault","stopPropagation","onChange","target","value","disabled","ProfileStatusWithHooks","editMode1","setEditMode1","onDoubleClick","onBlur","updateStatusThunk","autoFocus","validationSchema","Yup","ProfileDataForm","initialValues","onSubmit","info","textarea","placeholder","component","Object","keys","contacts","ProfileData","isOwner","goToEditMode","editButton","fullName","aboutMe","contactTitle","ContactValue","lookingForAJob","lookingForAJobDescription","Contact","ProfileInfo","savePhoto","saveProfile","editMode","setEditMode","gifka","description","large","files","values","AddPostFormik","required","max","fieldPosts","button","Post","newsName","mes","content","MyPosts","postDate","el","MyPostsAll","CreateNewPost","AddPostForm","MyPostsContainer","connect","Profile","ProfileContainer","this","match","params","AuthorizedUserId","history","getStatusThunk","refreshProfile","prevProps","prevState","Component","file","getState","Promise","reject","withRouter","News","newsElements","EachNew","Friend","dropbtn","All","friendsAll","name1","createRef","ava1","seacrh","textare","but","addfriend","getUsersThunk","Friends","per","getUsers","getAPageSize","getTotalCount","getCurrentPage","getisFetching","getUsersFilter","EachUser","newUsers","userInfo","photoAva","userPhoto","userInfoShort","fullname","country","city","buttons","followThunk","Paginator","onPageChanged","portionSize","pagesCount","ceil","pages","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","back","cn","selectedPage","next","last","usersSearchValidation","UsersSearchForm","enableReinitialize","String","validate","setSubmitting","onFilterChanged","isSubmitting","as","Users","useHistory","parsed","queryString","location","search","substr","actualPage","actualFilter","Number","query","pathname","unfollowThunk1","followThunk1","UsersPage","checkbox","LoginFormAuth","CaptchaIsRequired","field","Login","Eachmessage","massages","massage","Eachdialog","path","dialog","active","activeClassName","activeLink","AddMessageForm","Diallogs","dialogsElements","messageElements","dialogsitem","massages1","mapStateToPropsForRedirect","RedirectComponent","EachFilm","d","undefined","genres","eachFilm","large_cover_image","png","rating","des","dislike","Films","filmsElements","description_full","FilmsContainer","Search","searchBook","form","handleSearch","defaultValue","BookCard","eachBook","image","author","published","substring","BookList","fullAll","imageLinks","publisher","publishedDate","Books","sortedBooks","b","parseInt","MainPage","disabledChanger","pass","input","ProfilePage","PopUpSlider","isOpen","setIisOpen","pictures","setI","setImages","changing","open","btnHide","btnOpen","banner","btnBack","btnNext","btnClose","EachAnime","eachAnime","posterImage","episodeCount","startDate","popularityRank","searchAnime","Anime","animesElements","attributes","titles","en","AnimeContainer","GenaPosts","GenaProfileInfo","wallpaper","GenaProfile","NikitaProfile","EachSong","Music","songOnChangeActionCreator","addSongActionCreator","song","MusicContainer","BeerInt","href","AOS","init","Test","getOldMessages","getNewMessages","sendNewMessage","setName","allMessages","allSend","sendNew","inputs","sendNewMessageLocal","TestContainer","oldMessagesThunkCreater","sendNewMessageThunkCreater","Days","isSelected","selectedDay","allDays","select","day","DatePicker","setSelectedDay","setSelectedMonth","month","setSelectedYear","year","formatDate","Date","setSelected_date_element","setAllSelectedDates","allSelectedDates","populateDates","hide","setHide","date","getDate","months","getFullYear","setYear","getMonth","setMonth","mth_element","setMth_element","selected_date_element","selectedMonth","selectedYear","days_element","amount_days","y","prev","exactDate","days","allDates","EachCat","eachCat","includes","fav","FavCats","goToFav","Cats","getNewCatsThunkCreater","document","scrollHandler","documentElement","innerHeight","Header","draggable","header_h3","Playlist","loi","songContainerSelected","songContainer","tmbn_song","CaretRightOutlined","tmbn_song1","songmeta_playlist","songname","songauthors","playlist_btns_group","HeartOutlined","bttn3","SaveOutlined","Actions","album_meta","alb_label","alb","action_btns","actions_button","bttn","DownOutlined","Controls","statevolum","setStateVolum","dur","setDur","currentTime","setCurrentTime","fmtMSS","toggleAudio","paused","play","pause","volume","controls","onTimeUpdate","onCanPlay","duration","onEnded","handleEndThunkCreater","preload","vlme","volum","SoundOutlined","bttn1","q","musicControls","prevSongThunkCreater","StepBackwardOutlined","PauseCircleOutlined","StepForwardOutlined","progressb","songMeta","songtitle","songartistName","compute","currentT","totalT","plsoptions","SwapOutlined","bttn2","ReloadOutlined","Audio","top","AllRoutes","render","NewsContainer","fallback","DiallogsContainer","Layout","Content","Sider","App","needWeather","initialiseApp","onerror","errorMsg","background","height","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","logo","logo1","mode","defaultSelectedKeys","Item","icon","UserOutlined","FireOutlined","BookOutlined","WechatOutlined","SearchOutlined","VideoCameraOutlined","ReadOutlined","ZhihuOutlined","CalendarOutlined","GithubOutlined","setState","CloudOutlined","padding","minHeight","AppContainer","AppAllTree","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.384f1f40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"GenaPosts_CreateNewPost__3YCuk\",\"button\":\"GenaPosts_button__4c0OC\",\"text\":\"GenaPosts_text__RBli3\",\"MyPostsAll\":\"GenaPosts_MyPostsAll__2wZMr\",\"posts\":\"GenaPosts_posts__14O21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ChatPage_ava__3yw9b\",\"messages\":\"ChatPage_messages__3zhfI\",\"all\":\"ChatPage_all__3228m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Eachdialog_dialog__3JqtQ\",\"activeLink\":\"Eachdialog_activeLink__2w1QX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"GenaProfileInfo_avatar__dN_uS\",\"wallpaper\":\"GenaProfileInfo_wallpaper__2E3_U\",\"description\":\"GenaProfileInfo_description__3BE7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Music_content__3VKPA\",\"song\":\"Music_song__37Qb6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__1Se8w\",\"name\":\"Friend_name__3qby0\",\"dropbtn\":\"Friend_dropbtn__2moDQ\",\"dropdown\":\"Friend_dropdown__27x1O\",\"dropdowncontent\":\"Friend_dropdowncontent__J18OZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massages\":\"Eachmessage_massages__1gcWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"EachSong_item__3XCcl\",\"nick\":\"EachSong_nick__1NoLj\",\"mes\":\"EachSong_mes__3q0Ph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Profile_all__pN-Cm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__24HdY\",\"textarea\":\"News_textarea__2FsgO\",\"button\":\"News_button__1BLeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"per\":\"Friends_per__3df8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Beer_button__15Ef-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__2tFT8\",\"wallpaper\":\"ProfileInfo_wallpaper__BZLxF\",\"description\":\"ProfileInfo_description__lZJCC\",\"info\":\"ProfileInfo_info__aipql\",\"error\":\"ProfileInfo_error__2V4xV\",\"editButton\":\"ProfileInfo_editButton__2f07J\",\"gifka\":\"ProfileInfo_gifka__2uf1B\"};","import axios from \"axios\";\r\nimport {photosType} from \"../Types/Types\";\r\n\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '1c389392-606e-42a1-8d6e-0ba8e47b4434'\r\n    }\r\n});\r\nexport type itemsType = {\r\n    name: string\r\n    id: number\r\n    photos: photosType\r\n    status: string\r\n    followed: boolean\r\n}\r\nexport type getUsersType = {\r\n    items: Array<itemsType>\r\n    totalCount: number\r\n    error: null | any\r\n}\r\n\r\n\r\n\r\n\r\nexport enum ResultCodeEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\nexport enum ResultCodeWithCaptchaEnum  {\r\n        CaptchaIsRequired = 10\r\n}\r\n\r\nexport type getAuthType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\nexport type loginType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodeEnum | ResultCodeWithCaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\n\r\n\r\n\r\nexport type ThreeParamsType = {\r\n    data: {\r\n    }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\nexport type savePhotoType = {\r\n    data:\r\n        {\r\n            photos: photosType\r\n        }\r\n    resultCode: ResultCodeEnum\r\n    messages: Array<string>\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {getAuthType, instance, loginType, ThreeParamsType} from \"./api\";\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get<getAuthType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email: string, password: string, rememberMe=false, captcha: null | string = null){\r\n        return instance.post<loginType>('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n    logOut(){\r\n        return instance.delete<ThreeParamsType>('auth/login')\r\n    }\r\n\r\n}","import {instance} from \"./api\";\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}","    import {ProfileType} from \"../Types/Types\";\r\nimport {getUsersType, instance, ThreeParamsType} from \"./api\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage =1, pageSize = 10, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<getUsersType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? \"\" : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUsersFriends(){\r\n        return instance.get<getUsersType>(`users`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n\r\n    getProfilePhoto(){\r\n        return instance.get<ProfileType>(`profile/9`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUnfollow(id: number){\r\n        return instance.delete<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getFollow(id: number){\r\n        return instance.post<ThreeParamsType>(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n}","import {ResultCodeEnum, ResultCodeWithCaptchaEnum} from \"../api/api\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\nimport {usersAPI} from \"../api/user-api\";\r\nconst SET_USER_DATE = 'AUTH/SET_USER_DATE';\r\nconst SET_USER_AVATAR = 'AUTH/SET_USER_AVATAR';\r\nconst SET_ERROR = 'AUTH/SET_ERROR';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'AUTH/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    userAva: null as string | null,\r\n    isError: false,\r\n    captchaUrl: null as string | null,\r\n}\r\n\r\nexport type initialStateType= typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATE:\r\n         return {\r\n                ...state,\r\n             ...action.data,\r\n\r\n            }\r\n\r\n        case SET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                userAva: action.userAva,\r\n\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: SET_USER_DATE,\r\n        data: {\r\n            userId, email, login, isAuth\r\n        }} as const) ,\r\n    setUserAvatar : (avatar: string | null)  => ({\r\n        type: SET_USER_AVATAR,\r\n        userAva: avatar\r\n    }as const),\r\n    setError: (Error: boolean) => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string | null) => ({\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        captchaUrl\r\n    }as const)\r\n}\r\n\r\n\r\nexport const getAuthThunk = (): ThunkType =>async (dispatch) =>{\r\n      let response = await authAPI.getAuth()\r\n                if(response.resultCode === ResultCodeEnum.Success) {\r\n                    let {id, email, login} = response.data\r\n                    dispatch(actions.setAuthUserData(id, email, login, true))\r\n                    usersAPI.getProfilePhoto()\r\n                        .then(response => {\r\n                            dispatch(actions.setUserAvatar(response.photos.small))\r\n                         })\r\n                }\r\n    }\r\n\r\nexport const loginThunk = (email: string, password: string, rememberMe: boolean, captcha: string | null): ThunkType =>async (dispatch) =>{\r\n\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                  await  dispatch(getAuthThunk())\r\n                    dispatch(actions.setError(false))\r\n                    dispatch(actions.getCaptchaUrlSuccess(null))\r\n                }\r\n                 else  {\r\n                    if (response.data.resultCode === ResultCodeWithCaptchaEnum.CaptchaIsRequired){\r\n                        await  dispatch(gerCaptchaUtl())\r\n                    }\r\n                       dispatch(actions.setError(true))\r\n                }\r\n}\r\n\r\nexport const logOutThunk = (): ThunkType =>async (dispatch) =>{\r\n    let response = await authAPI.logOut()\r\n                if(response.data.resultCode === ResultCodeEnum.Success) {\r\n                    dispatch(actions.setAuthUserData(null, null, null, false))\r\n                }\r\n}\r\nexport const gerCaptchaUtl = (): ThunkType =>async (dispatch) =>{\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n        dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport default authReducer;","import {getAuthThunk} from \"./authReducer\";\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({\r\n        type: INITIALIZED_SUCCESS,\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const initialiseApp = () =>{\r\n    return (dispatch: any) =>{\r\n      let promise =  dispatch(getAuthThunk())\r\n        promise.then( ()=> {\r\n            dispatch(actions.initializedSuccess())\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer;","export default __webpack_public_path__ + \"static/media/04de2e31234507.564a1d23645bf.1cbc65b1.gif\";","import preLoader from \"../../../assets/images/04de2e31234507.564a1d23645bf.gif\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preLoader} alt={'loading'}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {PostsType} from \"../Types/Types\";\r\n\r\n\r\nlet initialState = {\r\n    new: [\r\n        {\r\n            id: 1,\r\n            time: 'сегодня в 11 утра',\r\n            post: 'Вчера посмотрел атаку титанов',\r\n            user: 'Timur Brat',\r\n            avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album',\r\n            picture: 'https://cdn.shazoo.ru/351151_Z0bYpFdK6E_8010ba67_497b_4038_9c6e_f9b0fa9c.jpg',\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня в 9 утра',\r\n            post: 'Посмотрел \"Твое Имя\", мне понравилось',\r\n            user: 'Gena Daun',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n            picture: 'https://www.mirf.ru/wp-content/uploads/2020/09/update_1___multi_sourced_4k__kimi_no_na_wa_by_assassinwarrior_dajydsn-fullview.jpg',\r\n        },\r\n        {\r\n            id: 3,\r\n            time: 'вчера в 12 ночи',\r\n            post: 'Всем привет',\r\n            user: 'Pavel Palov',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album',\r\n            picture: 'https://i.pinimg.com/originals/3c/8f/9a/3c8f9ad07c5f305354cdf087cf1d580c.jpg',\r\n        },\r\n        {\r\n            id: 4,\r\n            time: 'позавчера',\r\n            post: 'Я русский ',\r\n            user: 'Maks Voin',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album',\r\n            picture: 'https://cdni.rbth.com/rbthmedia/images/2020.07/original/5f1e888885600a2608563f65.jpg',\r\n        },\r\n        {\r\n            id: 5,\r\n            time: 'ну он просто лох',\r\n            post: 'я бабизян че тут сказать',\r\n            user: 'Sergey Ga4ibyan',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album',\r\n            picture: 'https://icdn.lenta.ru/images/2021/01/20/16/20210120164051128/wide_4_3_ad0a8dedf4f24c1002d87743b6451b83.jpg',\r\n        },\r\n    ] as Array<PostsType>\r\n\r\n}\r\nexport const getNewMassiv = () => { return initialState.new;}\r\ntype ActionTypes = null\r\n\r\nconst newsReducer = (state = initialState, action: ActionTypes) => {\r\n\r\n\r\n            return state;\r\n\r\n\r\n}\r\n\r\nexport default newsReducer;","import {ProfileType} from \"../Types/Types\";\r\nimport {instance, savePhotoType, ThreeParamsType} from \"./api\";\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number | null){\r\n        return instance.get<ProfileType>(`profile/`+ userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ThreeParamsType>(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile: File){\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put<savePhotoType>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res=>res.data)\r\n    },\r\n    saveProfile(profile: ProfileType){\r\n        return instance.put<ThreeParamsType>(`profile`, profile)\r\n    }\r\n}","\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const gifApi = {\r\n    getSmthEvil() {\r\n\r\n        return axios.get<any>(`https://api.giphy.com/v1/gifs/random?api_key=TarQfWOwDk4dQg8syslWxwsWWobrCCaO&tag=&rating=r`)\r\n            .then((data: any) => data.data.data.images.original.url);\r\n    },\r\n    getGiftsForNews() {\r\n\r\n        return axios.get<any>(`https://api.giphy.com/v1/gifs/trending?api_key=TarQfWOwDk4dQg8syslWxwsWWobrCCaO&limit=5&rating=r`)\r\n            .then((data: any) => data.data.data);\r\n    },\r\n}\r\n\r\n","import {getNewMassiv} from \"./newsReducer\";\r\n\r\nimport {photosType, PostsType, ProfileType} from \"../Types/Types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"./reduxStore\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport {gifApi} from \"../api/gif-api\";\r\n\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_PHOTO = 'SET_PHOTO'\r\nconst SET_ERROR = 'profile/SET_ERROR';\r\nconst SET_OWNER_PHOTO = 'profile/SET_OWNER_PHOTO';\r\nconst SET_NEW_GIF = 'profile/SET_NEW_GIF';\r\nconst SET_ALL_GIFS = 'profile/SET_ALL_GIFS';\r\n\r\n\r\nlet initialState = {\r\n\r\n    posts: [\r\n\r\n        {\r\n            id: 1,\r\n            post: 'First Friend GEna',\r\n            user: 'Гена',\r\n            time: 'сегодня в 11 утра',\r\n            picture: '',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            time: 'сегодня',\r\n            post: ')))',\r\n            user: 'Gena',\r\n            avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n            picture: '',\r\n        },\r\n        {\r\n            id: 3,\r\n            post: '1111',\r\n            user: 'Pavel  -   ',\r\n            time: 'сегодня в ',\r\n            picture: '',\r\n            avatar: 'https://sun9-44.userapi.com/impg/UACJRHqPtJbLkJ0-VD5mB4N7QZc1z5lMli1gyA/CCQgY0fVx8Y.jpg?size=810x1080&quality=96&sign=a0025252fa6bb8f7f6b5b55a9719902e&type=album'\r\n        },\r\n\r\n        {\r\n            id: 4,\r\n            post: '222222222',\r\n            user: 'Maks  -   ',\r\n            time: 'сегодня в 11 ',\r\n            picture: '',\r\n            avatar: 'https://sun9-41.userapi.com/impg/QiItVXppdk3B8LT7Yd31GixhGUoETDPGeS82UQ/-gHFtJx41Uc.jpg?size=1080x1350&quality=96&sign=2035d42234fdc4238f96632232064a4b&type=album'\r\n        },\r\n        {\r\n            id: 5,\r\n            post: '33333333333333',\r\n            user: 'Ga4ibyan  -   ',\r\n            time: 'сегодня в 11 утра',\r\n            picture: '',\r\n            avatar: 'https://sun9-44.userapi.com/impg/3ueMAfcHjkVqJK_R-QFh2Vy3fb5voGKMOZFGBA/LEmwuBvrp0g.jpg?size=1440x2160&quality=96&sign=51dab95706014952c015588c5c4f3bbc&type=album'\r\n        }\r\n    ] as Array<PostsType>,\r\n\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    countPosts: 6,\r\n    isError: false,\r\n    photo: null as string | null,\r\n    gif: '',\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nlet newsImport = getNewMassiv();\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.countPosts,\r\n                post: action.newText,\r\n                user: 'Вы  ',\r\n                avatar: \"https://n1s1.hsmedia.ru/30/a5/50/30a550ad429dc5b67118ec6c0a984137/620x440_1_61ebd8b8b757e8b7e6e0c8e6d9f2efbe@2055x1459_0xc0a839a2_12152610071478613656.jpeg\",\r\n                picture: action.pic,\r\n                time: 'сейчас',\r\n            };\r\n            newsImport.unshift(newPost)\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n\r\n                countPosts: state.countPosts + 1\r\n            };\r\n        }\r\n\r\n\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter((item) => item.id !== action.idToRemove)}\r\n        }\r\n        case SET_PHOTO: {\r\n\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType};\r\n        }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.Error,\r\n\r\n            }\r\n        case SET_OWNER_PHOTO:\r\n            return {\r\n                ...state,\r\n                photo: action.photo,\r\n\r\n            }\r\n\r\n        case SET_NEW_GIF:\r\n            return {\r\n                ...state,\r\n                gif: action.gif\r\n            }\r\n\r\n        case SET_ALL_GIFS:\r\n            let stateCopy = {...state}\r\n            stateCopy.posts= [...state.posts]\r\n            for (let i = 0; i < 5; i++)\r\n            {\r\n                stateCopy.posts[i].picture =  action.newGifs[i].images.original.url\r\n            }\r\n\r\n            return stateCopy\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newText: string, pic: string) => ({\r\n        type: ADD_POST,\r\n        newText,\r\n        pic\r\n    } as const),\r\n    deletePost: (idToRemove: number) => ({\r\n        type: DELETE_POST,\r\n        idToRemove\r\n    }as const),\r\n    setUsersProfile: (profile: ProfileType) => ({\r\n        type: SET_USERS_PROFILE,\r\n        profile: profile,\r\n    }as const),\r\n    savePhotoSuccess :(photos: photosType)  => ({\r\n        type: SET_PHOTO,\r\n        photos\r\n    }as const),\r\n    setErrorProfile :(Error: boolean)  => ({\r\n        type: SET_ERROR,\r\n        Error\r\n    }as const),\r\n    setStatus: (status: string) => ({\r\n        type: SET_STATUS,\r\n        status\r\n    }as const),\r\n    setOwnerAvatar: (photo: string | null) => ({\r\n        type: SET_OWNER_PHOTO,\r\n        photo\r\n    }as const),\r\n    setNewGif: (gif: string ) => ({\r\n        type: SET_NEW_GIF,\r\n        gif\r\n    }as const),\r\n    setAllGifts: (newGifs: any) => ({\r\n        type: SET_ALL_GIFS,\r\n        newGifs\r\n    }as const),\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const  getProfileThunk = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let newGifts = await gifApi.getGiftsForNews()\r\n    dispatch(actions.setAllGifts(newGifts));\r\n    let newGif =  await gifApi.getSmthEvil()\r\n    dispatch(actions.setNewGif(newGif));\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setUsersProfile(response.data));\r\n}\r\n\r\n\r\nexport const  getOwnerAva = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setOwnerAvatar(response.data.photos.small));\r\n}\r\nexport const getStatusThunk = (userId: number):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(response.data));\r\n}\r\nexport const updateStatusThunk = (status: string):ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File):ThunkType => async (dispatch) => {\r\n\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.resultCode === 0){\r\n        dispatch(actions.savePhotoSuccess(response.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType):ThunkType => async (dispatch, getState) => {\r\n\r\n    const userId= getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0){\r\n        await dispatch(getProfileThunk(userId));\r\n        dispatch(actions.setErrorProfile(false))\r\n    }\r\n\r\n    else {\r\n        dispatch(actions.setErrorProfile(true))\r\n        return Promise.reject()\r\n    }\r\n}\r\nexport default profileReducer;","import {InferActionsTypes} from \"./reduxStore\";\r\n\r\n\r\nconst ADD_MESSAGE = 'DIALOGS/ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n        messages: [\r\n            {id: 1, message: 'loh gena loh'},\r\n            {id: 2, message: 'loh misha loh'},\r\n            {id: 3, message: 'loh pasha loh'},\r\n            {id: 4, message: 'loh nikita loh'},\r\n            {id: 5, message: 'loh tima loh'},\r\n        ] as Array<MessageType>,\r\n        dialogs: [\r\n            {id: 1, name: 'gena'},\r\n            {id: 2, name: 'misha'},\r\n            {id: 3, name: 'pasha'},\r\n            {id: 4, name: 'nikita'},\r\n            {id: 5, name: 'tima'},\r\n        ] as Array<DialogType>,\r\n    count: 6,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst dialogReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: state.count,\r\n                message: action.message,\r\n            };\r\n\r\n            return {...state,\r\n                messages: [newMessage, ...state.messages],\r\n                count: state.count+1\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addMessageActionCreator: (message: string) => ({\r\n        type: ADD_MESSAGE,\r\n        message\r\n    }as const)\r\n}\r\n\r\n\r\nexport default dialogReducer;","const ADD_SONG = 'ADD-SONG';\r\nconst UPDATE_NEW_SONG_TEXT = 'UPDATE-NEW-SONG-TEXT';\r\n\r\n\r\n\r\nexport type SongsType = {\r\n    id: number\r\n    nameSong: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n        songs: [\r\n            {\r\n                id: 1, nameSong: 'gachimuchi -' +\r\n                    ' А как насчёт ♂?♂'\r\n            },\r\n            {\r\n                id: 2, nameSong: 'GACHIMUCHI -' +\r\n                    ' Чудо (right version)'\r\n            },\r\n            {\r\n                id: 3, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Филипп Киркоров - Это не снег♂'\r\n            },\r\n            {\r\n                id: 4, nameSong: 'gachimuchi -' +\r\n                    ' ♂️Спокойная ночь - Кино♂'\r\n            },\r\n            {\r\n                id: 5, nameSong: 'GachiMuchi -' +\r\n                    ' Я назову планету'\r\n            },\r\n        ] as Array<SongsType>,\r\n        newsongtext: \"\",\r\n    count: 7\r\n    }\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionTypes = SongOnChangeActionCreatorType | AddSongActionCreatorType\r\n\r\nconst musicReducer = (state = initialState, action: ActionTypes): initialStateType => {\r\n\r\n\r\n    switch (action.type){\r\n        case ADD_SONG: {\r\n            let newSong = {\r\n                id: state.count,\r\n                nameSong: state.newsongtext,\r\n\r\n            };\r\n            return {...state,\r\n                songs: [newSong, ...state.songs],\r\n                newsongtext: '',\r\n                count: state.count+1\r\n            };\r\n        }\r\n        case UPDATE_NEW_SONG_TEXT:\r\n            return  {...state,\r\n                newsongtext: action.newText\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\ntype SongOnChangeActionCreatorType = {\r\n    type: typeof UPDATE_NEW_SONG_TEXT,\r\n    newText: string\r\n}\r\nexport const songOnChangeActionCreator = (text: string): SongOnChangeActionCreatorType => ({\r\n    type: UPDATE_NEW_SONG_TEXT,\r\n    newText: text\r\n})\r\ntype AddSongActionCreatorType = {\r\n    type: typeof ADD_SONG,\r\n}\r\nexport const addSongActionCreator = (): AddSongActionCreatorType => ({type: ADD_SONG});\r\n\r\nexport default musicReducer;","\r\nimport { UserType} from \"../Types/Types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {usersAPI} from \"../api/user-api\";\r\n\r\nconst ADD_USER = 'ADD_USER';\r\nconst FRIEND_CHECK = 'FRIEND_CHECK'\r\nconst FRIEND_REMOVE = 'FRIEND_REMOVE'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_ITEMS_COUNT = 'SET_TOTAL_ITEMS_COUNT'\r\nconst IS_FETCHING = 'IS_FETCHING'\r\nconst SET_FILTER = 'SET_FILTER'\r\n\r\nexport type FriendDateType = {\r\n    id: number,\r\n    link: string,\r\n    name: string,\r\n    avatar: string,\r\n    surname: string,\r\n    friendsAlready: boolean,\r\n\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n    friendDate: [\r\n        {\r\n            id: 1111111,\r\n            link: '/https://vk.com/dank_af',\r\n            name: 'Геннадий',\r\n            avatar: 'https://meragor.com/files/styles//ava_800_800_wm/ava-241.jpg',\r\n            surname: 'Льянов',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 2222222,\r\n            link: 'https://vk.com/get_imba',\r\n            name: 'Тимур',\r\n            surname: 'Льянов',\r\n            avatar: 'https://i.pinimg.com/originals/d2/27/67/d22767e3ecd58f14c839092e1dfe3852.jpg',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 333333,\r\n            link: 'https://vk.com/evgeniasims',\r\n            name: 'Евгения',\r\n            surname: 'Хайретдинов',\r\n            avatar: 'http://sun9-67.userapi.com/s/v1/ig2/6JU7DbnLm46xuMVj9w2gHBOoagBCXOCkTilVO__oHcVOxVdwYVIxZAfEKG7R9_EnXUb-CLjsqkl-cuetoovsmwDU.jpg?size=200x0&quality=96&crop=1,1,1197,1197&ava=1',\r\n            friendsAlready: true,\r\n        },\r\n        {\r\n            id: 4444444,\r\n            link: 'https://vk.com/id153839551',\r\n            name: 'Кекс',\r\n            surname: 'Слесырев',\r\n            avatar: 'https://anime-fans.ru/wp-content/uploads/2021/01/Ochen-smeshnye-anime-avy_01.jpg',\r\n            friendsAlready: true,\r\n        },\r\n\r\n    ] as Array<FriendDateType> | any,\r\n\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalItemsCount: 222,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFriend: true,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    friendCheckAC :() => ({\r\n        type: FRIEND_CHECK,\r\n    } as const),\r\n    removeFriendAC:(idToRemove: number) => ({\r\n        type: FRIEND_REMOVE,\r\n        idToRemove: idToRemove\r\n    } as const),\r\n    follow:(userId: number) => ({\r\n        type: FOLLOW,\r\n        userId\r\n    } as const),\r\n    unfollow:(userId:number) => ({\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const),\r\n    setUsers:(users: Array<UserType>) => ({\r\n        type: SET_USERS,\r\n        users\r\n    } as const),\r\n    addUserAC:(id: number, avatarPhoto: string | null, name: string) => ({\r\n        type: ADD_USER,\r\n        id: id,\r\n        surname: null,\r\n        avatar: avatarPhoto,\r\n        name: name,\r\n    } as const),\r\n    isFetchingDispatch: (isFetchingBOOL: boolean)  => ({\r\n        type: IS_FETCHING,\r\n        isFetchingBOOL,\r\n    } as const),\r\n    setTotalItemsCount :(Count: number) => ({\r\n        type: SET_TOTAL_ITEMS_COUNT,\r\n        Count,\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n    setFilter: (filter: FilterType) => ({\r\n        type: SET_FILTER,\r\n        payload: filter\r\n    } as const),\r\n}\r\n\r\n\r\nconst friendsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_USER:\r\n            let stateCopy = {...state}\r\n            let friendDateSet = [...stateCopy.friendDate]\r\n            let friendsCollection = new Set(friendDateSet)\r\n            let newFriendUser = {\r\n                id: action.id,\r\n                name: action.name,\r\n                surname: action.surname,\r\n                avatar: action.avatar,\r\n                link: '/profile/' + action.id,\r\n                friendsAlready: true\r\n            };\r\n            friendsCollection.add(newFriendUser)\r\n            return {\r\n                ...state,\r\n                friendDate: Array.from(friendsCollection)\r\n            };\r\n\r\n        case FRIEND_CHECK:\r\n            return {\r\n                ...state,\r\n                isFriend: false\r\n            }\r\n        case FRIEND_REMOVE:\r\n            return {\r\n                ...state,\r\n                friendDate: state.friendDate.filter((item: any) => item.id !== action.idToRemove)\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        case SET_TOTAL_ITEMS_COUNT: {\r\n            return {...state, totalItemsCount: action.Count}\r\n        }\r\n        case IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetchingBOOL}\r\n        }\r\n        case SET_FILTER: {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type ThunkType = BaseThunkType<ActionsType>\r\n\r\nexport const getUsersThunkCreater = (currentPage: number,\r\n                                     pageSize: number,\r\n                                     filter: FilterType): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.isFetchingDispatch(true))\r\n        dispatch(actions.setCurrentPage(currentPage))\r\n        dispatch(actions.setFilter(filter))\r\n        let response = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend)\r\n            dispatch(actions.isFetchingDispatch(false))\r\n            dispatch(actions.setUsers(response.items))\r\n            dispatch(actions.setTotalItemsCount(response.totalCount))\r\n    }\r\n}\r\nexport const getUsersThunk = (isFriend: boolean): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getUsersFriends()\r\n    for (let i = 0; i < 10; i++) {\r\n        if (response.items[i].followed === true && isFriend) {\r\n            dispatch(actions.addUserAC(response.items[i].id, response.items[i].photos.large != null ?\r\n                response.items[i].photos.large : 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', response.items[i].name,))\r\n        }\r\n    }\r\n    dispatch(actions.friendCheckAC())\r\n}\r\nexport const unfollowThunk = (id: number): ThunkType => async (dispatch) => {\r\n    if (id > 100000) {\r\n        dispatch(actions.removeFriendAC(id))\r\n    } else {\r\n        let response = await usersAPI.getUnfollow(id)\r\n        if (response.resultCode === 0) {\r\n            dispatch(actions.unfollow(id))\r\n            dispatch(actions.removeFriendAC(id))\r\n        }\r\n    }\r\n}\r\n    export const followThunk = (id: number, photo: string | null, name: string): ThunkType => async (dispatch ) => {\r\n    let response = await usersAPI.getFollow(id)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actions.follow(id))\r\n        photo != null\r\n            ? dispatch(actions.addUserAC(id, photo, name)) :\r\n            dispatch(actions.addUserAC(id, 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png', name))\r\n    }\r\n}\r\n\r\nexport default friendsReducer;","\r\nexport type bestfriendsType ={\r\n    id: number,\r\n    name: string,\r\n    avatar: string\r\n    surname: string\r\n}\r\n\r\nlet initialState = {\r\n        bestfriends: [\r\n            {\r\n                id: 1,\r\n                name: 'Геннадий',\r\n                avatar: 'https://sun9-75.userapi.com/impg/aYFVgULQds2uRK4ftm0VLGIE2pI63Pua3beoPg/d1vQS_fajKI.jpg?size=695x1056&quality=96&sign=e5baf9a52d7ac0e40e6a4fe9b9338c4c&type=album',\r\n                surname: 'Льянов'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Тимур',\r\n                surname: 'Льянов',\r\n                avatar: 'https://sun9-42.userapi.com/impf/c844416/v844416714/12ff0b/DZIAss-5O_I.jpg?size=1024x1024&quality=96&sign=38589b1a8a876c2796ef79f1fab05059&type=album'\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Никита',\r\n                surname: 'кесырев',\r\n                avatar: 'https://sun9-23.userapi.com/impg/qjKg0gKdIBW-1YKG9dVgh68dCnD1mPjrUqQvgg/Bh8eNjyakC0.jpg?size=512x384&quality=96&sign=89f25cbca2cdc38325352d639a4a7e51&type=album'\r\n            }\r\n        ] as Array<bestfriendsType>\r\n\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nconst sideBarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default sideBarReducer;","\r\n\r\nconst subscribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\n\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubsAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\n\r\nconst onMessageHandler = (e: MessageEvent)=> {\r\n    const newMessage = JSON.parse(e.data)\r\n    subscribers['messages-received'].forEach(s => s(newMessage))\r\n};\r\nconst openHandler = ()=> {\r\n    notifySubsAboutStatus('ready')\r\n};\r\nconst errorHandler = ()=> {\r\n    notifySubsAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n};\r\n\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', onMessageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\n\r\nconst notifySubsAboutStatus = (status: StatusType) => {\r\n    subscribers[\"status-changed\"].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n        ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubsAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', onMessageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\n\r\nexport const chatApi = {\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType |  StatusChangedSubscriberType) {\r\n        //@ts-ignore\r\n        subscribers[eventName].push(callback)\r\n        return () => {\r\n            //@ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    // тоже самое, что и ретурнит субскрайб, просто другой вариант\r\n    unSubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        //@ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n       ws?.send(message)\r\n    },\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop () {\r\n        subscribers['messages-received'] = []\r\n        subscribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type ChatMessageAPIType = {\r\n    userId: number,\r\n    userName: string,\r\n    message: string,\r\n    photo: string\r\n}\r\n\r\nexport type StatusType = 'pending' | 'ready' | 'error'\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void","import {v1} from 'uuid'\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {chatApi, ChatMessageAPIType, StatusType} from \"../api/chat-api\"\r\nimport {Dispatch} from \"redux\";\r\nconst SET_RECEIVED = 'CHAT/SET_RECEIVED';\r\nconst STATUS_CHANGED = 'CHAT/STATUS_CHANGED';\r\n\r\ntype ChatMessageType = ChatMessageAPIType & {id: string}\r\n\r\nlet initialState = {\r\n   messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n}\r\n\r\nexport type initialStateType= typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n// type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nconst chatReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_RECEIVED:\r\n\r\n         return {\r\n                ...state,\r\n            messages: [...state.messages, ...action.payload.messages.map(m => ({...m, id: v1() }))]\r\n                .filter((m, index, array) =>  index >= array.length - 100)\r\n            }\r\n        case STATUS_CHANGED:\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    messagesReceivedAC: (messages: ChatMessageAPIType[]) => ({\r\n        type: SET_RECEIVED,\r\n        payload: {messages}\r\n    }as const),\r\n    statusChanged: (status: StatusType) => ({\r\n        type: STATUS_CHANGED,\r\n        payload: {status}\r\n    }as const),\r\n\r\n}\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\nconst newMessageHandlerCreator= (dispatch: Dispatch) =>  {\r\n    if(_newMessageHandler === null) {\r\n        _newMessageHandler = (messages)=> {\r\n            dispatch(actions.messagesReceivedAC(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator= (dispatch: Dispatch) =>  {\r\n    if(_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status)=> {\r\n            dispatch(actions.statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesThunk = (): ThunkType =>async (dispatch) =>{\r\n    chatApi.start()\r\n    chatApi.subscribe('messages-received'  ,newMessageHandlerCreator(dispatch))\r\n    chatApi.subscribe('status-changed'  ,statusChangedHandlerCreator(dispatch))\r\n}\r\nexport const stopMessagesThunk = (): ThunkType =>async (dispatch) =>{\r\n    chatApi.unSubscribe('messages-received' , newMessageHandlerCreator(dispatch))\r\n    chatApi.unSubscribe('status-changed'  ,statusChangedHandlerCreator(dispatch))\r\n    chatApi.stop()\r\n}\r\nexport const sendMessageThunk = (message: string): ThunkType =>async (dispatch) =>{\r\n    chatApi.sendMessage(message)\r\n}\r\n\r\nexport default chatReducer;","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const filmAPI = {\r\n    getFilms(currentPage =1) {\r\n        return axios.get(`https://yts.mx/api/v2/list_movies.json?page=${currentPage}`).then(res=>res.data.data.movies)\r\n    },\r\n\r\n}","import {InferActionsTypes} from \"./reduxStore\";\r\nimport {filmAPI} from \"../api/film-api\";\r\nconst SET_CURRENT_PAGE = 'FILMS/SET_CURRENT_PAGE'\r\nconst ADD_FILM = 'FILMS/ADD_FILM';\r\nconst DELETE_FILM = 'FILMS/DELETE_FILM'\r\nconst LIKE_FILM = 'FILMS/LIKE_FILM'\r\nconst DISLIKE_FILM = 'FILMS/DISLIKE_FILM'\r\n\r\nexport type FilmType ={\r\n    background_image: string\r\n    background_image_original: string\r\n    date_uploaded: string\r\n    date_uploaded_unix: number\r\n    description_full: string\r\n    genres: Array<string>\r\n    id: number\r\n    imdb_code: string\r\n    language: string\r\n    large_cover_image: string\r\n    medium_cover_image: string\r\n    mpa_rating: string\r\n    rating: number\r\n    runtime: number\r\n    slug: string\r\n    small_cover_image:string\r\n    state: string\r\n    summary: string\r\n    synopsis: string\r\n    title: string\r\n    title_english: string\r\n    title_long: string\r\n    torrents: any\r\nurl: string\r\nyear: number\r\nyt_trailer_code: string\r\n    like?: boolean\r\n}\r\n\r\n\r\nlet initialState = {\r\n    films: [] as Array<FilmType> | any,\r\n    isLoading: true,\r\n    currentPage: 1\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst filmReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_FILM:\r\n            return {...state, films: action.films, isLoading: false}\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        case DELETE_FILM: {\r\n            return {...state, films: state.films.filter((item: FilmType) => item.id !== action.idToRemove)}\r\n        }\r\n        case LIKE_FILM: {\r\n            let stateCopy = {...state}\r\n            stateCopy.films = [...state.films]\r\n            state.films.map((item: FilmType) => {\r\n                if ( item.id === action.id)\r\n                {\r\n                    item.like = true\r\n                    return item\r\n                }return item})\r\n                return stateCopy\r\n\r\n\r\n        }\r\n        case DISLIKE_FILM: {\r\n            return {...state, films: state.films.filter((item: FilmType) => {\r\n                if ( item.id === action.id){\r\n                    item.like = false\r\n                    return item\r\n                }return item\r\n                })}\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getFilmsThunkCreater = (pageNumber: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(actions.setCurrentPage(pageNumber))\r\n        const response = await filmAPI.getFilms(pageNumber)\r\n        const response2 = response.map( (obj: FilmType) => {\r\n            obj.like = false;\r\n            return obj;\r\n        })\r\n        await dispatch(actions.allFilms(response2))\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport const actions = {\r\n    allFilms: (films: Array<FilmType>)  => ({\r\n        type: ADD_FILM,\r\n        films,\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n    deleteFilm: (idToRemove: number) => ({\r\n        type: DELETE_FILM,\r\n        idToRemove\r\n    }as const),\r\n    likeFilm: (id: number) => ({\r\n        type: LIKE_FILM,\r\n        id\r\n    }as const),\r\n    dislikeFilm: (id: number) => ({\r\n        type: DISLIKE_FILM,\r\n        id\r\n    }as const),\r\n}\r\n\r\n\r\nexport default filmReducer;","\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\n\r\nconst UPDATE_NEW_LOGIN_TEXT = 'MAINTEST/UPDATE_NEW_LOGIN_TEXT';\r\nconst UPDATE_NEW_PASSWORD_TEXT = 'MAINTEST/UPDATE_NEW_PASSWORD_TEXT';\r\nconst IS_DISABLED = 'MAINTEST/IS_DISABLED';\r\nconst NEED_REDIRECT = 'MAINTEST/NEED_REDIRECT';\r\n\r\nlet initialState = {\r\n    newLogintext: \"\",\r\n    newPasswordtext: \"\",\r\n    isDisabled: true,\r\n    needRedirect: false,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst mainTestReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case UPDATE_NEW_LOGIN_TEXT:\r\n            return  {...state,\r\n                newLogintext: action.newText\r\n            }\r\n        case UPDATE_NEW_PASSWORD_TEXT:\r\n            return  {...state,\r\n                newPasswordtext: action.newText\r\n            }\r\n        case IS_DISABLED:\r\n            return  {...state,\r\n                isDisabled: false\r\n            }\r\n        case NEED_REDIRECT:\r\n            return  {...state,\r\n                needRedirect: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    loginOnChangeActionCreator: (text: string) => ({\r\n        type: UPDATE_NEW_LOGIN_TEXT,\r\n        newText: text,\r\n    } as const ),\r\n    passwordOnChangeActionCreator: (text: string) => ({\r\n    type: UPDATE_NEW_PASSWORD_TEXT,\r\n    newText: text\r\n    } as const),\r\n    isDisabledAC: () => ({\r\n        type: IS_DISABLED,\r\n    } as const),\r\n    needRedirectAC: () => ({\r\n        type: NEED_REDIRECT,\r\n    } as const)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default mainTestReducer;","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const booksAPI = {\r\n    getBooks(smth = 'javascript') {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${smth}`).then(res=>res.data.items)\r\n    },\r\n}","import {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {booksAPI} from \"../api/books-api\";\r\n\r\n\r\nconst NEW_SEARCH = 'BOOKS/NEW_SEARCH'\r\nconst ADD_BOOKS = 'BOOKS/ADD_BOOKS';\r\nconst NEW_SORT = 'BOoKS/NEW_SORT'\r\n\r\n\r\nlet initialState = {\r\n    books: [] as Array<any>,\r\n    searchField: '',\r\n    sort: ''\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\n\r\nconst booksReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_BOOKS:\r\n            // @ts-ignore\r\n            return {...state, books: action.data,}\r\n        case NEW_SEARCH:\r\n            return {...state, searchField: action.text,}\r\n        case NEW_SORT:\r\n            return {...state, sort: action.text,}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst ccleaner = (data: any) => {\r\n    const cleanedData = data.map((book: any) => {\r\n        if (!book.volumeInfo.hasOwnProperty('publishedDate')) {\r\n            book.volumeInfo['publishedDate'] = '0000'\r\n        } else if (!book.volumeInfo.hasOwnProperty('imageLinks')) {\r\n            book.volumeInfo['imageLinks'] = {thumbnail: 'https://img3.akspic.ru/originals/2/8/8/7/4/147882-poni-rozovyj-liniya-kartinka-televideniye-750x1334.jpg'}\r\n        }\r\n        return book;\r\n    })\r\n    return cleanedData\r\n}\r\n\r\nexport const getBooksThunkCreater = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await booksAPI.getBooks()\r\n        let cleanBooks = ccleaner(data)\r\n        dispatch(actions.addBooks(cleanBooks))\r\n    }\r\n}\r\n\r\nexport const searchBookThunkCreater = (searchField: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await booksAPI.getBooks(searchField)\r\n        let cleanBooks = ccleaner(data)\r\n        dispatch(actions.addBooks(cleanBooks))\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addBooks: (data: Array<any>) => ({\r\n        type: ADD_BOOKS,\r\n        data,\r\n    } as const),\r\n    handleSearchAC: (text: string) => ({\r\n        type: NEW_SEARCH,\r\n        text\r\n    } as const),\r\n    handleSort: (text: string) => ({\r\n        type: NEW_SORT,\r\n        text\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default booksReducer;","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const animeAPI = {\r\n    getAnimes(currentPage =1, smth: string) {\r\n        if(smth === \"\"){\r\n            smth =\"tokyo\"\r\n        }\r\n        currentPage = currentPage -1\r\n        return axios.get(`https://kitsu.io/api/edge/anime?page[limit]=10&page[offset]=${currentPage*10}&filter[text]=${smth}`).then(res=>res.data.data)\r\n    },\r\n}","import {InferActionsTypes} from \"./reduxStore\";\r\nimport {animeAPI} from \"../api/anime-api\";\r\nconst ADD_ANIME = 'ANIME/ADD_ANIME';\r\nconst ADD_ANIMES = 'ANIME/ADD_ANIMES';\r\nconst DELETE_ANIME = 'ANIME/DELETE_ANIME'\r\nconst LIKE_ANIME = 'ANIME/LIKE_ANIME'\r\nconst DISLIKE_ANIME = 'ANIME/DISLIKE_ANIME'\r\nconst NEW_SEARCH = 'ANIME/NEW_SEARCH'\r\nconst SET_CURRENT_PAGE = 'ANIME/SET_CURRENT_PAGE'\r\n\r\nexport type AnimesType ={\r\n    attributes: {\r\n        posterImage: {\r\n            large: string\r\n        } | null,\r\n        description: string,\r\n\r\n        popularityRank: number,\r\n        titles: {\r\n            en: string\r\n        }\r\n        episodeCount: number,\r\n        startDate: string,\r\n        status: string\r\n    },\r\n    id: number,\r\n    like: boolean,\r\n    type: string\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n    animes: [] as Array<AnimesType> | any,\r\n    isLoading: true,\r\n    searchField: '',\r\n    currentPage: 1\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst animeReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type){\r\n        case ADD_ANIME:\r\n            return {...state, animes: action.animes, isLoading: false}\r\n        case DELETE_ANIME: {\r\n            return {...state, animes: state.animes.filter((item: AnimesType) => item.id !== action.idToRemove)}\r\n        }\r\n        case LIKE_ANIME: {\r\n            let stateCopy = {...state}\r\n            stateCopy.animes = [...state.animes]\r\n            state.animes.map((item: AnimesType) => {\r\n                if ( item.id === action.id)\r\n                {\r\n                    item.like = true\r\n                    return item\r\n                }return item})\r\n                return stateCopy\r\n        }\r\n        case DISLIKE_ANIME: {\r\n            return {...state, animes: state.animes.filter((item: AnimesType) => {\r\n                if ( item.id === action.id){\r\n                    item.like = false\r\n                    return item\r\n                }return item\r\n                })}\r\n\r\n        }\r\n        case ADD_ANIMES:\r\n\r\n            return {...state, animes: action.data,}\r\n        case NEW_SEARCH:\r\n            return {...state, searchField: action.text,}\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.p}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getAnimesThunkCreater = (pageNumber: number, searchField: string) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(actions.setCurrentPage(pageNumber))\r\n        const response = await animeAPI.getAnimes(pageNumber, searchField)\r\n        await dispatch(actions.allAnimes(response))\r\n        }\r\n    }\r\n\r\n\r\nexport const actions = {\r\n    allAnimes: (animes: Array<AnimesType>)  => ({\r\n        type: ADD_ANIME,\r\n        animes,\r\n    } as const),\r\n\r\n    deleteAnime: (idToRemove: number) => ({\r\n        type: DELETE_ANIME,\r\n        idToRemove\r\n    }as const),\r\n    likeAnime: (id: number) => ({\r\n        type: LIKE_ANIME,\r\n        id\r\n    }as const),\r\n    dislikeAnime: (id: number) => ({\r\n        type: DISLIKE_ANIME,\r\n        id\r\n    }as const),\r\n    addAnimes: (data: Array<AnimesType>) => ({\r\n        type: ADD_ANIMES,\r\n        data,\r\n    } as const),\r\n    handleSearchAC: (text: string) => ({\r\n        type: NEW_SEARCH,\r\n        text\r\n    } as const),\r\n    setCurrentPage: (p: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        p,\r\n    } as const),\r\n}\r\n\r\n\r\nexport default animeReducer;","\r\n\r\nexport const testAPI = {\r\n    sendMessage(data) {\r\n        return fetch(`https://testback123321.herokuapp.com/AddNewMessage`, {\r\n            method: 'POST', headers: {\r\n                'Content-type': 'application/json',\r\n            }, body: JSON.stringify(data)\r\n        }).then(response => response.json())\r\n    },\r\n    getOldMessages(id, oldMessages) {\r\n        return fetch(`https://testback123321.herokuapp.com/LoadMessages/?actionName=MessagesLoad&messageId=${id}&oldMessage=${oldMessages}`, {\r\n            method: 'GET',\r\n        }).then(response => response.json())\r\n    },\r\n    getNewMessages(id, oldMessages) {\r\n        return fetch(`https://testback123321.herokuapp.com/LoadMessages/?actionName=MessagesLoad&messageId=${id}&oldMessage=${oldMessages}`, {\r\n            method: 'GET',\r\n        }).then(response => response.json())\r\n    },\r\n}","import {testAPI} from \"../api/test-api\";\r\n\r\nconst NEW_MASSEGES = 'TEST/NEW_MASSEGES';\r\nconst OLD_MASSAGES = 'TEST/OLD_MASSAGES';\r\n\r\n\r\n\r\nlet initialState = {\r\n    messages: [{\r\n        \"id\": 1,\r\n        \"user\": \"test\",\r\n        \"message\": \"hello from test\"\r\n    },\r\n        {\r\n            \"id\": 2,\r\n            \"user\": \"test\",\r\n            \"message\": \"hello from test\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"user\": \"test\",\r\n            \"message\": \"hello from test\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"user\": \"test\",\r\n            \"message\": \"hello from test\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"user\": \"test\",\r\n            \"message\": \"hello from test\"\r\n        },]\r\n}\r\n\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NEW_MASSEGES:\r\n            return {...state, messages: action.messages}\r\n        case OLD_MASSAGES:\r\n            return {...state, messages: action.messages}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const newMessagesThunkCreater = (id = 0, oldMessages = false) => {\r\n    return async (dispatch) => {\r\n        let response = await testAPI.getNewMessages(id, oldMessages)\r\n        await dispatch(actions.newMessage(response))\r\n\r\n    }\r\n}\r\n\r\nexport const oldMessagesThunkCreater = (id = 0, oldMessages = true) => {\r\n    return async (dispatch) => {\r\n        let response = await testAPI.getOldMessages(id, oldMessages)\r\n           await dispatch(actions.oldMessage(response))\r\n\r\n    }\r\n}\r\nexport const sendNewMessageThunkCreater = (name, message) => {\r\n    return async (dispatch) => {\r\n        let data = {user: name, message: message}\r\n        let response = await testAPI.sendMessage(data)\r\n         await  dispatch(actions.newMessage(response))\r\n\r\n    }\r\n}\r\nexport const actions = {\r\n    newMessage: (messages) => ({\r\n        type: NEW_MASSEGES, messages,\r\n    }), oldMessage: (messages) => ({\r\n        type: OLD_MASSAGES, messages,\r\n    }),\r\n}\r\n\r\n\r\nexport default testReducer;","import axios from \"axios\";\r\n\r\nexport const catsAPI = {\r\n    getCats(page) {\r\n        return axios.get(`https://api.thecatapi.com/v1/images/search?limit=20&page=${page}&order=Desc`).then(response => response.data)\r\n    },\r\n}","import {catsAPI} from \"../api/cats-api\";\r\n\r\nconst NEW_CATS = 'CATS/NEW_CATS';\r\nconst NEW_CURRENT_PAGE = 'CATS/NEW_CURRENT_PAGE';\r\nconst SET_FETCHING = 'CATS/SET_FETCHING';\r\nconst SET_FAVORITE = 'CATS/SET_FAVORITE';\r\nconst DELETE_FAVORITE = 'CATS/DELETE_FAVORITE';\r\n\r\nlet initialState = {\r\n    cats: [],\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    favorite: []\r\n}\r\n\r\n\r\nconst catsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_CATS:\r\n            return {...state, cats: [...state.cats, ...action.cats]}\r\n        case SET_FETCHING:\r\n            return {...state, isFetching: action.bool}\r\n        case NEW_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: state.currentPage + 1\r\n            };\r\n        case SET_FAVORITE:\r\n            let stateCopy = {...state}\r\n            let favoriteCopy = [...stateCopy.cats]\r\n            let cat = favoriteCopy.find(cat => cat.id === action.id)\r\n            return {...state, favorite: [...state.favorite, cat]}\r\n        case DELETE_FAVORITE:\r\n            return {...state, favorite: state.favorite.filter((item) => item.id !== action.idToRemove)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const getNewCatsThunkCreater = (currentPage) => {\r\n    return async (dispatch) => {\r\n        let response = await catsAPI.getCats(currentPage)\r\n        await dispatch(actions.getNewCats(response))\r\n        dispatch(actions.setPage())\r\n        dispatch(actions.setFetching(false))\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    getNewCats: (cats) => ({\r\n        type: NEW_CATS, cats,\r\n    }),\r\n    setFetching: (bool) => ({\r\n        type: SET_FETCHING, bool,\r\n    }),\r\n    setPage: () => ({\r\n        type: NEW_CURRENT_PAGE,\r\n    }),\r\n    addFav: (id) => ({\r\n        type: SET_FAVORITE, id\r\n    }),\r\n    deleteFav: (idToRemove) => ({\r\n        type: DELETE_FAVORITE, idToRemove\r\n    }),\r\n}\r\n\r\n\r\nexport default catsReducer;","export default __webpack_public_path__ + \"static/media/korol-i-shut-bluzhdajut-teni.7db183c8.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-durak-i-molnija.83a33911.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-ispoved-vampira.fea44f64.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-khozjain-lesa.25dcfafe.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-lesnik.7aac8407.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-mertvyjj-anarkhist.44d049b0.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-nevesta-palacha.ec9d927e.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-prygnu-so-skaly.ff32d08a.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-severnyjj-flot.535a048f.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-v-parizh-domojj.48370913.mp3\";","export default __webpack_public_path__ + \"static/media/korol-i-shut-valet-i-dama.9f628a52.mp3\";","import teni from '../assets/songsKISH/korol-i-shut-bluzhdajut-teni.mp3'\r\nimport durak from '../assets/songsKISH/korol-i-shut-durak-i-molnija.mp3'\r\nimport vampor from '../assets/songsKISH/korol-i-shut-ispoved-vampira.mp3'\r\nimport les from '../assets/songsKISH/korol-i-shut-khozjain-lesa.mp3'\r\nimport lesnik from '../assets/songsKISH/korol-i-shut-lesnik.mp3'\r\nimport anarkhist from '../assets/songsKISH/korol-i-shut-mertvyjj-anarkhist.mp3'\r\nimport nevesta from '../assets/songsKISH/korol-i-shut-nevesta-palacha.mp3'\r\nimport skala from '../assets/songsKISH/korol-i-shut-prygnu-so-skaly.mp3'\r\nimport severni from '../assets/songsKISH/korol-i-shut-severnyjj-flot.mp3'\r\nimport parij from '../assets/songsKISH/korol-i-shut-v-parizh-domojj.mp3'\r\nimport valet from '../assets/songsKISH/korol-i-shut-valet-i-dama.mp3'\r\n\r\n\r\n\r\nconst SET_CURRENT_SONG = 'AUDIO/SET_CURRENT_SONG';\r\nconst TOGGLE_RANDOM = 'AUDIO/TOGGLE_RANDOM';\r\nconst TOGGLE_REPEAT = 'AUDIO/TOGGLE_OPTIONS';\r\nconst TOGGLE_PLAYING = 'AUDIO/TOGGLE_PLAYING';\r\nconst SET_SONGS_ARRAY = 'AUDIO/SET_SONGS_ARRAY';\r\n\r\nlet initialState = {\r\n    currentSong: 10,\r\n    repeat: false,\r\n    random: false,\r\n    playing: false,\r\n    audio: null,\r\n\r\n    song_list : [\r\n        {\r\n            title: 'Блуждают тени',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl: teni\r\n                },\r\n        {\r\n            title: 'Дурак и молния',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:durak },\r\n        {\r\n            title: 'Исповедь вампира',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:vampor},\r\n        {\r\n            title: 'Хозяин леса',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:les},\r\n        {\r\n            title: 'Лесник',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:lesnik},\r\n        {\r\n            title: 'Мертвый анархист',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:anarkhist},\r\n        {\r\n            title: 'Невеста палача',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:nevesta},\r\n        {\r\n            title: 'Прыгну со скалы',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:skala},\r\n        {\r\n            title: 'Северный флот',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:severni},\r\n        {\r\n            title: 'В Папиж домой',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:parij},\r\n        {\r\n            title: 'Валет и Дама',\r\n            artistName: 'Король и Шут',\r\n            albumTitle: \"Прекрасный альбом, очень люблю\",\r\n            fileUrl:valet},\r\n    ],\r\n\r\n\r\n}\r\n\r\n\r\nconst audioReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SONGS_ARRAY:\r\n            return {\r\n                ...state,\r\n                song_list: action.data,\r\n            }\r\n        case SET_CURRENT_SONG:\r\n            return {\r\n                ...state,\r\n                currentSong: action.data,\r\n                playing: true,\r\n            }\r\n        case TOGGLE_RANDOM:\r\n            return {\r\n                ...state,\r\n                random: action.data,\r\n            }\r\n        case TOGGLE_REPEAT:\r\n            console.log(action.data)\r\n            return {\r\n                ...state,\r\n                repeat: action.data,\r\n            }\r\n        case TOGGLE_PLAYING:\r\n            return {\r\n                ...state,\r\n                playing: action.data,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const prevSongThunkCreater = (currentSong, songs) => {\r\n    return async (dispatch) => {\r\n            await dispatch(actions.SetCurrent(currentSong === 0? songs.length - 1 : currentSong - 1))\r\n        }\r\n    }\r\n\r\n\r\nexport const nextSongThunkCreater = (currentSong, songs, random=false) => {\r\n    return (dispatch) => {\r\n        dispatch(actions.togglePlaying(true))\r\n        if (random) {\r\n            return dispatch({\r\n                type: SET_CURRENT_SONG,\r\n                data: ~~(Math.random() * songs.length),\r\n            })\r\n        } else {\r\n            dispatch(actions.SetCurrent(currentSong === songs.length - 1 ? 0 : currentSong + 1))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const handleEndThunkCreater = (random, repeat, currentSong, song_list) => {\r\n    return async (dispatch) => {\r\n        if (random && !repeat) {\r\n            return await dispatch({\r\n                type: SET_CURRENT_SONG,\r\n                data: ~~(Math.random() * song_list.length),\r\n            })\r\n        } else {\r\n            if (repeat) {\r\n                await  dispatch(nextSongThunkCreater(currentSong, song_list))\r\n            } else\r\n                console.log(2)\r\n                return await  dispatch(nextSongThunkCreater(currentSong, song_list))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    songsSet: (songArr) => ({\r\n        type: SET_SONGS_ARRAY, data: songArr,\r\n    }),\r\n    togglePlaying: (playing) => ({\r\n        type: TOGGLE_PLAYING, data: !playing\r\n    }),\r\n    SetCurrent: (id) => ({\r\n        type: SET_CURRENT_SONG, data: id\r\n    }),\r\n    toggleRepeat: (repeat) => ({\r\n        type: TOGGLE_REPEAT, data: !repeat\r\n    }),\r\n    toggleRandom: (random) => ({\r\n        type: TOGGLE_RANDOM, data: !random\r\n    }),\r\n\r\n}\r\n\r\n\r\nexport default audioReducer;","import {applyMiddleware, combineReducers, createStore, compose, Action} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\n\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport musicReducer from \"./musicReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport sideBarReducer from \"./sideBarReducer\";\r\nimport newsReducer from \"./newsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\nimport chatReducer from \"./chatReducer\";\r\nimport filmReducer from \"./filmReducer\";\r\nimport mainTestReducer from \"./mainTest\";\r\nimport booksReducer from './books'\r\nimport animeReducer from \"./animeReducer\";\r\nimport testReducer from \"./testReducer\";\r\nimport catsReducer from \"./catsReducer\";\r\nimport audioReducer from \"./audioReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    dialogs: dialogReducer,\r\n    musics: musicReducer,\r\n    friends: friendsReducer,\r\n    news: newsReducer,\r\n    sideBar: sideBarReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    chat: chatReducer,\r\n    film: filmReducer,\r\n    book: booksReducer,\r\n    anime: animeReducer,\r\n    cats: catsReducer,\r\n    test: testReducer,\r\n    maintest: mainTestReducer,\r\n    audio: audioReducer\r\n})\r\n\r\ntype RootReducersType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\nexport type BaseThunkType <A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store\r\n\r\n","import React, {useEffect} from 'react';\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {logOutThunk} from \"../../redux/authReducer\";\r\nimport {Button} from \"antd\";\r\nimport {getOwnerAva} from \"../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\nexport const HeaderComponent: React.FC = (props) => {\r\n\r\n  const isAuth = useSelector((state: AppStateType)=> state.auth.isAuth)\r\n  const login = useSelector((state: AppStateType)=> state.auth.login)\r\n const avatar = useSelector((state: AppStateType) => state.profile.photo)\r\n    const profile = useSelector((state: AppStateType) => state.profile.profile)\r\n  const dispatch = useDispatch()\r\n\r\n    useEffect( () => {\r\n        dispatch(getOwnerAva(18579))\r\n    }, [profile])\r\n\r\n  return <header className={classes.header} >\r\n\r\n\r\n      <span className={classes.loginBlock}>\r\n       {isAuth? <span>\r\n           <NavLink to=\"/profile\" className={classes.signIn}>{login}</NavLink>\r\n       <Button className={classes.button1} onClick={() => dispatch(logOutThunk())}> Logout</Button>\r\n\r\n          <img alt={'ava'} src={avatar===null ? 'null' : avatar} className={classes.userAvatar}/> </span> : <NavLink className={classes.signIn} to={'/login'}>Sign in</NavLink>}\r\n\r\n   </span>\r\n  </header>\r\n}\r\n","import React from \"react\";\r\nimport classes from '../Weather.module.css'\r\n\r\n\r\nexport function Loading () {\r\n    return (<div >\r\n        <span className={classes.loading}>Loading...</span>\r\n    </div>)\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport classes from '../Weather.module.css'\r\n\r\n\r\ntype weatherOptionsType = {\r\n    iconName: string\r\n    title: string,\r\n    subTitle: string\r\n    gradient?: [string, string, string?]\r\n}\r\n\r\n\r\nexport const weatherOptions = {\r\n    Rain: {\r\n        iconName: '☔',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'На улице дождь',\r\n        subTitle: 'Не забудьте зонтик'\r\n    } as weatherOptionsType,\r\n    Snow: {\r\n        iconName: '❄',\r\n        // iconName: 'snowflake',\r\n        gradient: ['#83a4d4', '#b6fbff'],\r\n        title: 'Идет снег',\r\n        subTitle: 'Оденься потеплее'\r\n    } as weatherOptionsType,\r\n    Drizzle: {\r\n        iconName: '🌧',\r\n        // iconName: 'weather-rainy',\r\n        gradient: ['#3A7BD5', '#3A6073'],\r\n        title: 'Моросит слегка',\r\n        subTitle: 'Не заболей'\r\n    } as weatherOptionsType,\r\n    Thunderstorm: {\r\n        iconName: '🌩',\r\n        // iconName: 'weather-lightning',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Сейчас гроза',\r\n        subTitle: 'На улицу не ходи'\r\n    } as weatherOptionsType,\r\n    Dust: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-windy-variant',\r\n        gradient: ['#B79891', '#947168'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Mist: {\r\n        iconName: '💨',\r\n        //  conName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Очень туманно',\r\n        subTitle: 'Прям как в Англии'\r\n    } as weatherOptionsType,\r\n    Smoke: {\r\n        iconName: '💨',\r\n        // iconName: 'weather-windy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Почти туман',\r\n        subTitle: 'Но не туман'\r\n    } as weatherOptionsType,\r\n    Haze: {\r\n        iconName: '💨',\r\n        //iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Почти туман',\r\n        subTitle: 'Но не туман'\r\n    } as weatherOptionsType,\r\n    Sand: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-hazy',\r\n        gradient: ['#3E5151', '#DECBA4'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Ash: {\r\n        iconName: '💨',\r\n        //  iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Там пыльно',\r\n        subTitle: 'Будь аккуратнее'\r\n    } as weatherOptionsType,\r\n    Squall: {\r\n        iconName: '💨',\r\n        //   iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'На улице шквал',\r\n        subTitle: 'Не ходи'\r\n    } as weatherOptionsType,\r\n    Tornado: {\r\n        iconName: '🌪',\r\n        //   iconName: 'weather-hazy',\r\n        gradient: ['#4c669f', '#3b5998', '#192f6a'],\r\n        title: 'Бушует торнадо',\r\n        subTitle: 'Сиди дома'\r\n    } as weatherOptionsType,\r\n    Clear: {\r\n        iconName: '🌈',\r\n        //    iconName: 'weather-sunny',\r\n        gradient: ['#56CCF2', '#2F80ED'],\r\n        title: 'Погода супер',\r\n        subTitle: 'Сходи, погоняй мяч'\r\n    } as weatherOptionsType,\r\n    Clouds: {\r\n        iconName: '⛅',\r\n        //    iconName: 'weather-cloudy',\r\n        gradient: ['#757F9A', '#D7DDE8'],\r\n        title: 'Облачно',\r\n        subTitle: 'Гулять можно'\r\n    } as weatherOptionsType,\r\n\r\n}\r\n\r\ntype WeatherType = {\r\n    temp: number,\r\n    condition: keyof typeof weatherOptions;\r\n}\r\n\r\nexport const Weather: React.FC<WeatherType> = ({temp, condition}) => {\r\n\r\n    return (<div className={classes.halfContainer} style={{ backgroundImage: `linear-gradient(to right, ${weatherOptions[condition].gradient})`, }}>\r\n            <div className={classes.temp}>  {weatherOptions[condition].iconName}</div>\r\n            <div className={classes.temp}> {temp}° </div>\r\n            <div className={classes.title}> {weatherOptions[condition].title} </div>\r\n            <div className={classes.subTitle}> {weatherOptions[condition].subTitle} </div>\r\n            <div className={classes.close}> спрятать </div>\r\n        </div>\r\n  )\r\n}\r\n\r\n // Weather.propTypes = {\r\n //    temp: PropTypes.number.isRequired,\r\n //    condition: PropTypes.oneOf(['Thunderstorm', 'Drizzle', 'Rain',\r\n //         'Snow', 'Dust', 'Mist','Smoke',\r\n //         'Haze', 'Fog', 'Sand',\r\n //         'Ash', 'Squall', 'Tornado',\r\n //         'Clear', 'Clouds']).isRequired }\r\n\r\n","\r\nimport axios from \"axios\";\r\nconst API_KEY = '979ab0a1c46cbdc9cb27c613e41479b4'\r\n\r\nexport const weatherAPI = {\r\n    getWeather(latitude: number, longitude: number ) {\r\n        return axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`)\r\n    },\r\n\r\n}","import React, {useEffect, useState} from 'react';\nimport {Loading} from \"./Loading/Loading\";\nimport {Weather, weatherOptions} from \"./Weather/Weather\";\nimport {weatherAPI} from \"../../api/weather-api\";\n\n\n\n\nexport const WeatherContainer : React.FC =()=>{\n\n\n    let [isLoading, setIsLoading] = useState(true)\n    let [temp, setTemp] = useState(1)\n    let [condition, setCondition] = useState('' as  keyof typeof weatherOptions)\n\n    let gerPosition = async (pos: any) => {\n        let crd = pos.coords;\n     await getWeather(crd.latitude, crd.longitude)\n    }\n\n\n let getWeather = async (latitude: number, longitude: number) => {\n\n      const {data: {main: {temp}, weather}} = await weatherAPI.getWeather(latitude, longitude)\n      setTemp(temp)\n     setCondition( weather[0].main as  keyof typeof weatherOptions)\n     setIsLoading(false)\n  }\n\n\n   const getLocation = async () => {\n\n        try{\n            await navigator.geolocation.getCurrentPosition(gerPosition);\n        } catch (error) {\n           alert(\"can't detect location\")\n        }\n    }\n\n useEffect( () => {\n    getLocation()\n }, [])\n\n\n    return (\n    isLoading ? <Loading/> : <Weather temp={Math.round(temp)} condition={condition} />\n    )\n}\n\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport classes from './ChatPage.module.css'\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessageThunk, startMessagesThunk, stopMessagesThunk} from \"../../redux/chatReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {ChatMessageAPIType} from \"../../api/chat-api\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const ChatPage: React.FC =() => {\r\n\r\n    return <div className={classes.all}>\r\n    <Chat />\r\n    </div>\r\n\r\n\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n      const dispatch =  useDispatch()\r\n\r\n\r\n        const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    useEffect( () => {\r\n        dispatch(startMessagesThunk())\r\n        return () => {\r\n            dispatch(stopMessagesThunk())\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return <div>\r\n        {status === 'error' && <div> ERROR. PLS REFRESH PAGE</div> }\r\n           <>\r\n               <Messages/>\r\n               <AddMassageForm  />\r\n           </>\r\n\r\n    </div>\r\n}\r\n\r\nconst Messages: React.FC= () => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [autoScrollIsActive, SetAutoScrollIsActive] = useState(false)\r\n\r\n    const scrollHandled = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n            const element = e.currentTarget\r\n        if( Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300)\r\n        {\r\n           !autoScrollIsActive && SetAutoScrollIsActive(true)\r\n        } else {\r\n            autoScrollIsActive && SetAutoScrollIsActive(false)\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(autoScrollIsActive) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n    }, [messages])\r\n\r\n\r\n    return <div className={classes.messages} onScroll={scrollHandled}>\r\n        {messages.map((u, index) => <Message key={u.id} message={u} />)}\r\n        <div ref={messagesAnchorRef}> </div>\r\n    </div>\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n\r\n    return <div>\r\n        <img className={classes.ava} src={message.photo===null ? 'https://sun1-15.userapi.com/s/v1/if1/a8Ep8gIxK5zIt7COi4LUocGkvkP54fNVSUy930nxS75fGdWGjq5XwuFHwV65qOC_F2WD7Xna.jpg?size=200x200&quality=96&crop=0,0,1024,1024&ava=1'\r\n        : message.photo } alt={'ava'}/>  <b> {message.userName} </b>\r\n        <br />\r\n        <b> {message.message}</b>\r\n        <hr />\r\n    </div>\r\n})\r\n\r\nconst AddMassageForm: React.FC= () => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    const onKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>): void => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const sendMessage = () =>{\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessageThunk(message))\r\n        setMessage('')\r\n    }\r\n\r\n     return <div>\r\n         <div>\r\n             <textarea onKeyDown={onKeyDown} onChange={(e) => setMessage(e.target.value)} value={message}/>\r\n         </div>\r\n         <div>\r\n             <button disabled={status !== 'ready'} onClick={sendMessage} > send </button>\r\n         </div>\r\n     </div>\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\ntype all = PropsType\r\n\r\n\r\nconst ProfileStatusWithHooks : React.FC<all> =(props)=>{\r\n\r\n\r\n    let [editMode1, setEditMode1] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( ()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = ()=>{\r\n        setEditMode1(true)\r\n    }\r\n\r\n    const deactivateEditMode = ()=>{\r\n            setEditMode1(false)\r\n       props.updateStatusThunk(status)\r\n\r\n    }\r\n\r\n   const onStatusChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode1 &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n                </div>\r\n                }\r\n                {editMode1 &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport { Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {ProfileType} from \"../../../Types/Types\";\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n\r\n})\r\n\r\ntype PropsType = {\r\n    onSubmit: (values: any) => void\r\n    initialValues: ProfileType\r\n    profile: ProfileType\r\n    saveProfile: (profile: ProfileType) => any\r\n    isError: boolean\r\n}\r\n\r\n\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({initialValues, onSubmit, profile, isError}) =>{\r\n\r\n\r\n\r\n\r\n\r\n    return ( <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form>\r\n            {<div> <button >Save </button></div>}\r\n            <div className={classes.info}>\r\n                Name\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"ваше имя\" type='text' name='fullName'\r\n                   component='textarea'/>\r\n\r\n            <div className={classes.info}>\r\n                <b>Info</b>\r\n            </div>\r\n            <div >\r\n                <b>About me</b>:\r\n            </div>\r\n                <Field className={classes.textarea} placeholder=\"О вас\" type='text' name='aboutMe'\r\n                       component='textarea'/>\r\n            <div >\r\n              <b className={classes.info}> Contacts</b>\r\n                <div>{isError ? <span className={classes.error}> Wrong URL </span> : null} </div>\r\n                {Object.keys(profile.contacts).map(key=>{\r\n              return <div key={key} className={classes.info}>\r\n                <b> {key}: <Field  placeholder={key} type='text' name={\"contacts.\" + key}\r\n                                  component='input'/> </b>\r\n              </div>\r\n\r\n         })}\r\n         </div>\r\n\r\n\r\n            <div><b>lookingForAJob</b> </div>\r\n                <Field className={classes.textarea}  type='checkbox' name='lookingForAJob'/>\r\n\r\n            <div>\r\n                <b>My skills</b>\r\n            </div>\r\n            <Field className={classes.textarea} placeholder=\"Ваши навыки\" type='text' name='lookingForAJobDescription'\r\n                    component='textarea'/>\r\n\r\n\r\n\r\n            {/*<div>userId - {profile.userId}</div>*/}\r\n            </Form>\r\n        </Formik>\r\n    )}\r\n\r\n\r\nexport default ProfileDataForm","import React, {ChangeEvent, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../components/common/Preloder/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {contactsType, ProfileType} from \"../../../Types/Types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile ,status, updateStatusThunk, isOwner, savePhoto, saveProfile, isError} ) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const gifka= useSelector((state: AppStateType) => state.profile.gif)\r\n\r\n    if(!profile){\r\n        return <Preloader />}\r\n\r\n    const onSubmit = ( values: ProfileType) => {\r\n        saveProfile(values).then(\r\n            ()=>{\r\n                setEditMode(false)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>)=>{\r\n       if( e.target.files?.length){\r\n           // if (r.target.files && e.target.files.lenght){\r\n        savePhoto(e.target.files[0])\r\n       }\r\n    }\r\n\r\n\r\n    return <div>\r\n      <div className={classes.description}>\r\n\r\n        <div >\r\n            <span>\r\n            <img className={classes.avatar} alt=\"avatar\" src={ profile.photos.large === null ? 'https://i.pinimg.com/originals/26/a2/0a/26a20a99d83cf280fe907a14674c1ad6.png' : profile.photos.large }/>\r\n            {isOwner && <input onChange={mainPhotoSelected} type={'file'}/>}\r\n                </span>\r\n            <span>\r\n                     <img src={gifka}  className={classes.gifka}/>\r\n            </span>\r\n        </div>\r\n\r\n          <div className={classes.info}>\r\n              Status (дабл клик по статусу ниже и меняй)\r\n          </div>\r\n          <b><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk}/></b>\r\n          {editMode ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile} saveProfile={saveProfile} isError={isError}/> :\r\n          <ProfileData profile={profile} isOwner={isOwner} goToEditMode={()=> {setEditMode(true)}}/>}\r\n      </div>\r\n    </div>\r\n}\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, isOwner, goToEditMode}) =>{\r\n\r\n   return ( <div>\r\n           {isOwner && <div> <button className={classes.editButton} onClick={goToEditMode} >Edit Profile Info</button></div>}\r\n    <div className={classes.info}>\r\n        Name\r\n    </div>\r\n    <b>{profile.fullName}</b>\r\n\r\n    <div className={classes.info}>\r\n        <b>Info</b>\r\n    </div>\r\n    <div >\r\n        <b>About me</b>:  {profile.aboutMe}\r\n    </div>\r\n    <div >\r\n        <b className={classes.info}>Contacts</b>  :{Object.keys(profile.contacts).map((key)=>{\r\n        return <Contact key={key} contactTitle={key} ContactValue={profile.contacts[key as  keyof contactsType]}/>\r\n    })}\r\n    </div>\r\n\r\n    <div> <b>lookingForAJob</b>  {profile.lookingForAJob ? 'yes' : 'no'  }</div>\r\n    <div>{ profile.lookingForAJob &&\r\n    <div>\r\n        <b> My skills </b> -  {profile.lookingForAJobDescription}\r\n    </div>\r\n    }\r\n\r\n    </div>\r\n    </div>\r\n   )}\r\n\r\ntype ContactsPropsType = {\r\n    contactTitle: string\r\n    ContactValue: string\r\n}\r\nconst Contact: React.FC<ContactsPropsType> = ({contactTitle, ContactValue})=>{\r\n    return <div><b className={classes.info}>{contactTitle}</b>: {ContactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"../../pages/Profile/MyPosts/MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport * as Yup from 'yup'\r\n\r\n\r\ntype MyFormValues = {\r\n    new: string\r\n    pic: string\r\n}\r\ntype  PropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n}\r\n\r\n\r\n\r\nconst AddPostFormik: React.FC<PropsType> = (props) => {\r\n    const initialValues: MyFormValues = {\r\n        new: '',\r\n        pic: '',\r\n\r\n    }\r\n    const validationSchema = Yup.object({\r\n        new: Yup.string()\r\n            .required('Required')\r\n            .max(50, \"Too many symbols\"),\r\n        pic: Yup.string()\r\n            .required('Required')\r\n    })\r\n\r\n    const onSubmit = ( values: { new: string, pic: string }) => {\r\n        props.addPostActionCreator(values.new, values.pic)\r\n\r\n    }\r\n    return (<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        <Form>\r\n            <span className={classes.fieldPosts}>\r\n\r\n                <div className={classes.error}> <ErrorMessage name='new'/></div>\r\n                <div className={classes.error}><ErrorMessage name='pic'/></div>\r\n                <div> </div>\r\n                <Field className={classes.textarea} placeholder=\"ваша новость\" type='text' name='new'\r\n                      component='textarea'/>\r\n                <Field className={classes.textarea} placeholder=\"ваше картинка\" type='text' name='pic'\r\n                       component='textarea'/>\r\n <button className={classes.button}>Опубликовать</button>\r\n\r\n            </span>\r\n\r\n            </Form>\r\n    </Formik>)\r\n\r\n}\r\nexport default AddPostFormik","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    new: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n    deletePost: ( id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    let deletePost = ()=>{\r\n        props.deletePost(props.id)\r\n    }\r\n\r\n  return < div>\r\n\r\n    <div className={classes.news}>\r\n\r\n      <div className={classes.newsName}>\r\n\r\n        <img src={props.avatar} className={classes.ava}  alt=\"Avatar\"/>\r\n        <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        {props.new}\r\n      </div>\r\n    <div>\r\n      <img src={props.picture} className={classes.picture}  alt=\"picture\"/>\r\n        <button onClick={deletePost}> delete post </button>\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport AddPostFormik from \"../../../components/AddPostForm/AddPostForm\";\r\nimport Post from \"./Post/Post\";\r\nimport {PostsType} from \"../../../Types/Types\";\r\nimport {\r\n    savePhoto,\r\n} from \"../../../redux/profileReducer\";\r\n\r\n\r\n\r\nexport type MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n    deletePost: ( id: number) => void\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\nconst MyPosts: React.FC<PropsType> = (props)=> {\r\n\r\n\r\n\r\n\r\n    let postDate = props.posts.map(el => <Post key={el.id} id={el.id} new={el.post} time={el.time} avatar={el.avatar} user={el.user} picture={el.picture} deletePost={props.deletePost}/>)\r\n\r\n\r\n    return <div className={classes.MyPostsAll}>\r\n\r\n        <h1> My posts </h1>\r\n\r\n        <div className={classes.CreateNewPost}>\r\n            <h2>Create New Post </h2>\r\n        </div>\r\n        <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n\r\n        <div className={classes.posts}>\r\n            {postDate}\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import MyPosts, {MapStatePropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {actions} from \"../../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        posts: state.profile.posts\r\n    } as MapStatePropsType\r\n}\r\n// let mapDispatchToProps: ThunkType =(dispatch) => {\r\n//     return {\r\n//         addPostActionCreator: (newText: string, pic: string) => {\r\n//             dispatch(addPostActionCreator(newText, pic))\r\n//         },\r\n//         deletePost: (id: number) =>{\r\n//             dispatch(deletePost(id))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n let MyPostsContainer = connect(mapStateToProps, {...actions } )(MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../Types/Types\";\r\nimport classes from './Profile.module.css'\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isError: boolean\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    return <div className={classes.all}>\r\n        <ProfileInfo  isError={props.isError}  saveProfile={props.saveProfile}  savePhoto={props.savePhoto} isOwner={props.isOwner}  profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk,\r\n    getStatusThunk,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatusThunk\r\n} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {compose} from \"redux\";\r\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {ProfileType} from \"../../Types/Types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null,\r\n    status: string\r\n    AuthorizedUserId: number | null\r\n    isAuth: boolean\r\n    isError: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getProfileThunk: (userId: number | null) => void\r\n    savePhoto: (file: File) => void\r\n    getStatusThunk: (userId: number) => void\r\n    updateStatusThunk: (status: string) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\ntype PropsType = MapStatePropsType  & MapDispatchPropsType  & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType>{\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.AuthorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfileThunk(userId as number)\r\n        this.props.getStatusThunk(userId as number)\r\n    }\r\n\r\n\r\ncomponentDidMount()\r\n{\r\n\r\n    this.refreshProfile()\r\n\r\n}\r\n\r\ncomponentDidUpdate(prevProps: PropsType, prevState: AppStateType)\r\n{\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n    }\r\n}\r\n\r\nrender()\r\n{\r\n    return (\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                 updateStatusThunk={this.props.updateStatusThunk}\r\n                 isOwner={!this.props.match.params.userId}\r\n                 savePhoto={this.props.savePhoto}\r\n                 isError={this.props.isError}\r\n                 saveProfile={this.props.saveProfile}\r\n        />\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType  => {\r\n    return {\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    AuthorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isError: state.profile.isError\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfileThunk, savePhoto, getStatusThunk, updateStatusThunk, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport classes from './News.module.css'\r\nimport AddPostFormik from \"../../components/AddPostForm/AddPostForm\";\r\nimport {PostsType} from \"../../Types/Types\";\r\n\r\n\r\ntype PropsType = {\r\n    newsElements: Array<PostsType>\r\n    addPostActionCreator: (newText: string, pic: string) => void\r\n\r\n}\r\n\r\n\r\nconst News: React.FC<PropsType>  =(props) => {\r\n\r\n    let newsElements = props.newsElements\r\n\r\n    return (\r\n        < div className={classes.content}>\r\n           <div>\r\n\r\n                   <AddPostFormik addPostActionCreator={props.addPostActionCreator}/>\r\n\r\n           </div>\r\n            {newsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './EachNew.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    post: string\r\n    time: string\r\n    avatar: string\r\n    user: string\r\n    picture: string\r\n}\r\n\r\nconst EachNew: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.news}>\r\n\r\n                <div className={classes.newsName}>\r\n\r\n                <img src={props.avatar} className={classes.ava} />\r\n                    <span className={classes.mes}>\r\n                        <span className={classes.user}  > {props.user}   </span>\r\n                        <span className={classes.time}> {props.time}  </span>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={classes.content}>\r\n                        {props.post}\r\n                    </div>\r\n\r\n                <img src={props.picture} className={classes.picture}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachNew;","import React from 'react';\r\nimport News from \"./News\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {actions} from \"../../redux/profileReducer\";\r\nimport EachNew from \"./EachNew/EachNew\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        newsElements: state.news.new.map(el => <EachNew key={el.id} post={el.post} time={el.time} avatar={el.avatar} user={el.user}\r\n                                                        picture={el.picture}/>)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,{addPostActionCreator: actions.addPostActionCreator}),\r\n     // withAuthRedirect\r\n)\r\n(News)\r\n","import React from 'react';\r\nimport classes from './Friend.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n  key: number\r\n  id: number\r\n  link: string\r\n  name: string\r\n  surname: string\r\n  avatar: string\r\n  unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst Friend: React.FC<PropsType>  = (props) => {\r\n\r\n  let unfollowing = (id: number) => {\r\n      props.unfollowThunk(id)\r\n\r\n  }\r\n\r\n  return <div>\r\n\r\n    <div className={classes.item}>\r\n      <img alt={'ku'} src={props.avatar} />\r\n      <NavLink to={props.link}> {props.name} {props.surname} </NavLink>\r\n      <button onClick={() =>{unfollowing(props.id)}} className={classes.dropbtn}>Удалить из друзей</button>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport classes from './All.module.css'\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nimport {FriendDateType} from \"../../../redux/friendsReducer\";\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n    addfriend: (id: number, avatarPhoto: string, name: string) => void\r\n    friends:  Array<FriendDateType>\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\n\r\nconst All: React.FC<PropsType> =(props) => {\r\n\r\n    let friendsAll= props.friends.map(el =>  <Friend key={el.id} id={el.id} link = {el.link} name = {el.name} surname= {el.surname} avatar={el.avatar} unfollowThunk={props.unfollowThunk}/>)\r\n    let name1: any = React.createRef()\r\n    let ava1: any = React.createRef()\r\n\r\n    let addFriend = () => {\r\n\r\n        ava1.current.value ===\"\" ?   props.addfriend(888888, 'https://sun1-93.userapi.com/s/v1/ig2/i3174V5HMNQgKMxXm43MBqaBeqvf9lPbnq34n_NTXqwUY7XMzkok7XT1gZSQjBqJbxhns3gHCZx93ppb6zlqA5wL.jpg?size=200x200&quality=96&crop=53,33,478,478&ava=1', name1.current.value)\r\n        : props.addfriend(888888, ava1.current.value, name1.current.value)\r\n        name1.current.value = '';\r\n        ava1.current.value = '';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        < div className={classes.all}>\r\n            <div className={classes.seacrh}>\r\n                name\r\n                <textarea className={classes.textare} ref={name1} >   </textarea>\r\n                ava\r\n                <textarea className={classes.textare} ref={ava1}> </textarea>\r\n                <button className={classes.but} onClick={addFriend}> Add New Friend </button>\r\n            </div>\r\n            {friendsAll}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default All;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {actions, FriendDateType, getUsersThunk, unfollowThunk} from \"../../../redux/friendsReducer\";\r\nimport All from \"./All\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    friends: Array<FriendDateType>\r\n    isFriend: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersThunk: (isFriend: boolean) => void\r\n    unfollowThunk: (Id: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    addUserAC: (id: number, avatarPhoto: string, name: string) => void\r\n\r\n}\r\n\r\ntype all = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\n\r\nconst AllContainerHook: React.FC<all> =(props)=> {\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( ()=>{\r\n        props.getUsersThunk(props.isFriend)\r\n    }, [])\r\n\r\n\r\n        return <All\r\n                addfriend={props.addUserAC}\r\n                friends={props.friends}\r\n                unfollowThunk={props.unfollowThunk}\r\n            />\r\n}\r\nlet mapStateToProps =(state: AppStateType) => {\r\n\r\n    return {\r\n        friends: state.friends.friendDate,\r\n        isFriend: state.friends.isFriend,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {unfollowThunk, getUsersThunk, ...actions}),\r\n   // withAuthRedirect,\r\n)(AllContainerHook)\r\n\r\n","import React from 'react';\r\nimport classes from './Friends.module.css'\r\n\r\nimport AllContainerHook from \"./All/AllContainerHook\";\r\n\r\n\r\n\r\n\r\n\r\nconst Friends =() => {\r\n    return (<div className={classes.per}>\r\n            {/*<FriendsControl />*/}\r\n            <AllContainerHook />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","\r\n\r\n\r\n\r\n// export  const getFriendsUsers =(state) =>{\r\n//     return state.friends.users\r\n// }\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\nexport  const getUsers =(state: AppStateType) =>{\r\n    return state.friends.users\r\n}\r\nexport  const getAPageSize =(state: AppStateType) =>{\r\n    return state.friends.pageSize\r\n}\r\nexport  const getTotalCount =(state: AppStateType) =>{\r\n    return state.friends.totalItemsCount\r\n}\r\nexport  const getCurrentPage =(state: AppStateType) =>{\r\n    return state.friends.currentPage\r\n}\r\nexport  const getisFetching =(state: AppStateType) =>{\r\n    return state.friends.isFetching\r\n}\r\nexport  const getUsersFilter =(state: AppStateType) =>{\r\n    return state.friends.filter\r\n}","export default __webpack_public_path__ + \"static/media/DZIAss-5O_I.d5bd3e11.jpg\";","import React from \"react\";\r\nimport classes from \"./users.module.css\";\r\nimport photoAva from \"../../assets/images/DZIAss-5O_I.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { UserType} from \"../../Types/Types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    key: number\r\n    unfollowThunk: (userId: number) => void\r\n    followThunk: (id: number, photo: string | null, name: string) => void\r\n}\r\n\r\nlet EachUser: React.FC<PropsType> = (props) => {\r\n    let user= props.user\r\n    return <div key={user.id} className={classes.newUsers}>\r\n                <div className={classes.userInfo}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img alt=\"avatar\" src={user.photos.small != null ? user.photos.small : photoAva} className={classes.userPhoto}/>\r\n                    </NavLink>\r\n                    <span className={classes.userInfoShort}>\r\n                <div className={classes.fullname}>\r\n                    {user.name}\r\n                </div>\r\n                <div className={classes.status}>\r\n                    {user.status != null ? user.status : 'я тут'}\r\n                </div>\r\n                 <div className={classes.country}>\r\n                    Russia\r\n                 </div>\r\n                <div className={classes.city}>\r\n                    Moscow\r\n                </div>\r\n            </span>\r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button onClick={() => { props.unfollowThunk(user.id) }} className={classes.buttons}> Удалить из друзей </button> :\r\n                        <button className={classes.buttons} onClick={() => { props.followThunk(user.id, user.photos.small, user.name)}}> Добавить в друзья </button>}\r\n                </div>\r\n\r\n            </div>\r\n}\r\n\r\nexport default EachUser","import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages:  Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber -1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={classes.paginator}>\r\n        {portionNumber >1 &&\r\n        <button className={classes.back} onClick={()=> { setPortionNumber(portionNumber-1)}}> back </button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={cn ({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                }}> {p} </span>\r\n            })}\r\n        {portionCount> portionNumber &&\r\n        <button className={classes.next} onClick={()=> {setPortionNumber(portionNumber + 1)}}> next </button>}\r\n        <button className={classes.last} onClick={()=> {setPortionNumber(portionNumber=portionCount)}}> last </button>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/friendsReducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/friendsSelectors\";\r\n\r\n\r\nconst usersSearchValidation = (values: any)=> {\r\n    const errors = {}\r\n    return errors\r\n}\r\n type PropsType = {\r\n     onFilterChanged: (filter: FilterType) => void\r\n }\r\n\r\n type FriendFormType = 'true' | 'false' | 'null'\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n\r\n    const sumbit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n            validate={usersSearchValidation}\r\n            onSubmit={sumbit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" placeholder={'Find friend'}/>\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n})\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport EachUser from \"./EachUser\";\r\nimport Paginator from \"../../components/Paginator/Paginator\";\r\nimport classes from \"./users.module.css\";\r\n\r\nimport {FilterType, followThunk, getUsersThunkCreater, unfollowThunk} from \"../../redux/friendsReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getAPageSize,\r\n    getCurrentPage,\r\n    getTotalCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/friendsSelectors\";\r\nimport {useHistory} from \"react-router\";\r\nimport * as queryString from \"querystring\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\n\r\ntype PropsType = {}\r\nexport type QueryType = {term?: string, page?: string, friend?: string}\r\n\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    const totalItemsCount = useSelector(getTotalCount)\r\n    const users = useSelector(getUsers)\r\n    const filter = useSelector(getUsersFilter)\r\n    const pageSize = useSelector(getAPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if(!!parsed.page) actualPage = Number(parsed.page)\r\n        if(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch (parsed.friend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null }\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true }\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false }\r\n                break;\r\n        }\r\n\r\n        dispatch(getUsersThunkCreater(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        const query: QueryType = {}\r\n\r\n       if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getUsersThunkCreater(pageNumber, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsersThunkCreater(1, pageSize, filter))\r\n    }\r\n    const unfollowThunk1 = (userId: number) => {\r\n        dispatch(unfollowThunk(userId))\r\n    }\r\n    const followThunk1 = (id: number, photo: string | null, name: string) => {\r\n        dispatch(followThunk(id, photo, name))\r\n    }\r\n\r\n    return <div className={classes.all}>\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage}\r\n                   totalItemsCount={totalItemsCount}\r\n                   pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}\r\n                   portionSize={10}/>\r\n        <div>{\r\n            users.map(u => <EachUser user={u}\r\n                                     key={u.id}\r\n                                     unfollowThunk={unfollowThunk1}\r\n                                     followThunk={followThunk1}/>)\r\n        }</div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Preloader from \"../../components/common/Preloder/Preloader\";\r\nimport {getisFetching} from \"../../redux/friendsSelectors\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n}\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n    const isFetching = useSelector(getisFetching)\r\n\r\n    return <>\r\n\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n\r\n\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"./Login.module.css\";\r\nimport * as Yup from \"yup\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginThunk} from \"../../redux/authReducer\";\r\n\r\ntype MyFormValues = {\r\n    email: string\r\n    password: string\r\n    checkbox: boolean\r\n    captcha: string | null\r\n}\r\nconst initialValues: MyFormValues = {\r\n    email: '',\r\n    password: '',\r\n    checkbox: false,\r\n    captcha: ''\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    password: Yup.string().required('Required!'),\r\n    email: Yup.string()\r\n        .email('Invalid email format')\r\n        .required('Required'),\r\n\r\n})\r\ntype PropsType = {\r\n    captchaUrl: string | null\r\n    isError: boolean\r\n}\r\nexport const LoginFormAuth: React.FC<PropsType>  = (props)=> {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (values: {email: string,password: string, checkbox: boolean, captcha: string | null }) =>{\r\n        dispatch(loginThunk(values.email, values.password, values.checkbox, values.captcha))\r\n    }\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Form>\r\n                <div>\r\n                    <Field placeholder={'login'} type='text' id='email' name='email' className={classes.field}/>\r\n                    <ErrorMessage name='email' />\r\n                </div>\r\n                <div>\r\n                    <Field placeholder={'password'} type='text' id='password' name='password' className={classes.field}/>\r\n                    <ErrorMessage name='password'/>\r\n                </div>\r\n                <div>{props.isError ? <span className={classes.error}> Wrong Email or Password or Captcha </span> : null} </div>\r\n                <div>\r\n                    <Field type={'checkbox'} name='checkbox' className={classes.field}/>\r\n                </div>\r\n                {props.captchaUrl && <img src={props.captchaUrl} alt={'captcha'}/>}\r\n                {props.captchaUrl && <Field placeholder={'captcha'} type='text' name='captcha' className={classes.field}/>}\r\n\r\n                <button type='submit' className={classes.button}> Submit </button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport classes from './Login.module.css'\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {LoginFormAuth} from \"./LoginFormAuth\";\n\n\n\n\n\n\n\nexport const Login: React.FC= (props) => {\n    const captchaUrl = useSelector((state: AppStateType )=> state.auth.captchaUrl)\n    const isError = useSelector((state: AppStateType )=> state.auth.isError)\n    const isAuth = useSelector((state: AppStateType )=> state.auth.isAuth)\n\n\n\n    if(isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n    return <div className={classes.All}>\n        <h3> Login </h3>\n        <LoginFormAuth isError={isError} captchaUrl={captchaUrl} />\n    </div>\n}\n\n\n\n","import React from 'react';\r\nimport classes from './Eachmessage.module.css'\r\n\r\ntype PropsType = {\r\n    key: number\r\n    message: string\r\n}\r\n\r\n\r\nconst Eachmessage: React.FC<PropsType> = (props) => {\r\n    return (\r\n        < div>\r\n\r\n            <div className={classes.massages}>\r\n                <div className={classes.massage}> {props.message}  </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Eachmessage;","import React from 'react';\r\nimport classes from './Eachdialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    key: number\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst Eachdialog: React.FC<PropsType> = (props) => {\r\n\r\n    let path = \"/diallogs/\" + props.id;\r\n    return (\r\n        < div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path} activeClassName={classes.activeLink}> {props.name}</NavLink>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Eachdialog;","import React from 'react';\r\nimport classes from './Diallogs.module.css'\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport Eachmessage from \"./Eachmessage/Eachmessage\";\r\nimport Eachdialog from \"./Eachdialog/Eachdialog\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogReducer\";\r\n\r\n\r\ntype MyFormValues = {\r\n    message: string;\r\n}\r\nconst initialValues: MyFormValues = {\r\n    message: 'wish',\r\n}\r\n\r\nexport type MapStatePropsType = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n}\r\nexport type MapDispatchPropsType = {\r\n    addMessageActionCreator: (newText: string) => void\r\n}\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\n\r\ntype OnSubmitType = {\r\n    onSubmit: (values: {message: string}) => void\r\n}\r\ntype all = PropsType & MyFormValues & OnSubmitType\r\n\r\nconst Diallogs: React.FC<all>  = (props) => {\r\n    let dialogsElements = props.dialogs.map(el => <Eachdialog key={el.id} id={el.id} name={el.name}/>)\r\n    let messageElements = props.messages.map(el => <Eachmessage key={el.id} message={el.message}/>)\r\n\r\n    const onSubmit = (values: {message: string}) =>{\r\n        props.addMessageActionCreator(values.message)\r\n    }\r\n\r\n    return (\r\n        < div>\r\n           <AddMessageForm onSubmit={onSubmit}/>\r\n            < div className={classes.dialogs}>\r\n\r\n                < div className={classes.dialogsitem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={classes.massages1}>\r\n                    {messageElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst AddMessageForm: React.FC<OnSubmitType> = (props) => {\r\n    return (<Formik initialValues={initialValues} onSubmit={props.onSubmit}>\r\n            <Form >\r\n                <div className={classes.seacrh}>\r\n                    <Field type='text' className={classes.text} name='message' component='textarea'/>\r\n                    <button className={classes.but} type='submit'> Add Message</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Diallogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n    class RedirectComponent extends React.Component<mapStateToPropsForRedirectType> {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from 'react';\r\n\r\nimport {actions } from \"../../redux/dialogReducer\";\r\nimport Diallogs, {MapDispatchPropsType, MapStatePropsType} from \"./Diallogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps =(state: AppStateType) => {\r\n    return {\r\n        messages: state.dialogs.messages,\r\n        dialogs: state.dialogs.dialogs\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {addMessageActionCreator: actions.addMessageActionCreator}),\r\n    withAuthRedirect\r\n)(Diallogs);","import React from 'react';\r\nimport classes from \"./Films.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/filmReducer\";\r\n\r\n\r\n\r\n\r\n\r\ntype propsType ={\r\n    key: number,\r\n    name: string,\r\n    large_cover_image: string,\r\n    description: string,\r\n    genres: Array<string>,\r\n    rating: number,\r\n    id: number,\r\n    like: boolean | undefined\r\n}\r\n\r\nconst EachFilm: React.FC<propsType> = (props) => {\r\n\r\n    let d = null\r\n\r\n    if(props.genres !== undefined){\r\n        d = props.genres.map(p=> <div>\r\n            •{p}\r\n        </div>)\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const deletePost = (id: number) =>{\r\n        dispatch(actions.deleteFilm(id))\r\n\r\n    }\r\n    const likeFilm = (id: number) =>{\r\n        dispatch(actions.likeFilm(id))\r\n    }\r\n    const  dislikeFilm = (id: number) =>{\r\n        dispatch(actions.dislikeFilm(id))\r\n    }\r\n\r\n    return <div className={classes.eachFilm} >\r\n          <div>\r\n              <img alt={'sorry image not found'} src={props.large_cover_image} className={classes.png}/>\r\n          </div>\r\n       <div>\r\n\r\n                 <h2> {props.name} {props.like && <span> 🧡 </span>} <span className={classes.rating}> {props.rating} / 10 </span>  </h2>\r\n\r\n\r\n           <h4> {props.description}</h4>\r\n           <h3 className={classes.des}> {d}</h3>\r\n           { !props.like && <button onClick={()=> likeFilm(props.id)} className={classes.like}> like </button> }\r\n           { props.like && <button onClick={()=> dislikeFilm(props.id)} className={classes.dislike}> dislike </button> }\r\n           <button onClick={()=> deletePost(props.id)} className={classes.delete}> delete </button>\r\n       </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default EachFilm;","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FilmType, getFilmsThunkCreater} from \"../../redux/filmReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport EachFilm from \"./eachFilm\";\r\nimport Paginator from \"../../components/Paginator/Paginator\";\r\nimport classes from \"./Films.module.css\";\r\n\r\n\r\nexport const Films: React.FC = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getFilmsThunkCreater(pageNumber))\r\n    }\r\n\r\n    //TODO\r\n    const {currentPage, films} = useSelector((state: AppStateType) => state.film)\r\n\r\n\r\n\r\n    let filmsElements = films.map((el: FilmType) => <EachFilm rating={el.rating} genres={el.genres}\r\n                                                              description={el.description_full}\r\n                                                              large_cover_image={el.large_cover_image}\r\n                                                              key={el.id} id={el.id} name={el.title} like={el.like}/>)\r\n\r\n\r\n\r\n\r\n    return (<div className={classes.all}>\r\n            <div className={classes.paginator}>\r\n                <Paginator currentPage={currentPage}\r\n                           totalItemsCount={2131}\r\n                           pageSize={20}\r\n                           onPageChanged={onPageChanged}\r\n                           portionSize={10}/>\r\n            </div>\r\n            <div>\r\n                {filmsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {getFilmsThunkCreater} from \"../../redux/filmReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {Loading} from \"../Weather/Loading/Loading\";\nimport {Films} from \"./Films\";\n\n\n\n\nexport const FilmsContainer : React.FC =() => {\n\nconst dispatch = useDispatch()\n\n  useEffect( () => {\n      dispatch(getFilmsThunkCreater(1))\n }, [])\n\n    const isLoading = useSelector((state: AppStateType) => state.film.isLoading)\n\n\n    return (\n    <div>\n        {isLoading ? <Loading/> : <Films/>}\n    </div>\n    )\n}\n\n","import React from \"react\";\r\nimport classes from './books.module.css'\r\n\r\nconst Search = (props) => {\r\n    return (<form action='' onSubmit={props.searchBook} className={classes.form} >\r\n        <input type='text' onChange={props.handleSearch}/>\r\n        <button type='submit'>\r\n            Search\r\n        </button>\r\n        <select defaultValue='Sort' onChange={props.handleSort}>\r\n            <option disabled value=\"Sort\">Sort</option>\r\n            <option value=\"Newest\"> Newest</option>\r\n            <option value=\"Oldest\"> Oldest </option>\r\n        </select>\r\n    </form>)\r\n}\r\n\r\nexport default Search","import React from \"react\";\r\nimport classes from './books.module.css'\r\n\r\n\r\nconst BookCard = (props) => {\r\n    return (<div className={classes.eachBook}>\r\n        <div> <img src={props.image} alt='a' className={classes.ava}/></div>\r\n        <div className={classes.info}>\r\n            <h2  >\r\n                {props.title}\r\n            </h2>\r\n            <h3  >\r\n              Author:  {props.author}\r\n            </h3>\r\n            <p >\r\n              Published data:  {props.published === '0000' ? 'Not available' : props.published.substring(0, 4)}\r\n            </p>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default BookCard","import React from \"react\";\r\nimport BookCard from \"./BookCard\";\r\nimport classes from \"./books.module.css\";\r\n\r\nconst BookList = (props) => {\r\n\r\n    return (<div>\r\n        {\r\n            props.books.map( (book, i) => {\r\n                return <span className={classes.fullAll}>\r\n                    <BookCard\r\n                        key={i}\r\n                        image={book.volumeInfo.imageLinks.thumbnail}\r\n                        title={book.volumeInfo.title}\r\n                        author={book.volumeInfo.publisher}\r\n                        published={book.volumeInfo.publishedDate}\r\n                    />\r\n                </span>\r\n            })\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default BookList","import React, {useEffect} from \"react\";\r\nimport Search from \"./Search\";\r\nimport BookList from \"./BookList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actions, getBooksThunkCreater, searchBookThunkCreater} from \"../../redux/books\";\r\nimport classes from './books.module.css'\r\n\r\n\r\n\r\n const Books = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {books, searchField, sort} = useSelector((state) => state.book)\r\n\r\n    useEffect( () => {\r\n        dispatch(getBooksThunkCreater())\r\n    }, [])\r\n\r\n\r\n\r\n    const searchBook = async (e) => {\r\n        e.preventDefault()\r\n        dispatch(searchBookThunkCreater(searchField))\r\n\r\n\r\n    }\r\n    const handleSearch = (e) => {\r\n        dispatch(actions.handleSearchAC(e.target.value))\r\n\r\n    }\r\n    const handleSort = (e) => {\r\n        dispatch(actions.handleSort(e.target.value))\r\n\r\n    }\r\n\r\n\r\n\r\n    const sortedBooks = books.sort((a, b) => {\r\n        if (sort === 'Newest') {\r\n            return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4))\r\n        } else if (sort === 'Oldest') {\r\n            return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={classes.all}>\r\n            <Search searchBook={searchBook} handleSearch={handleSearch} handleSort={handleSort}/>\r\n            <BookList books={sortedBooks}/>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Books\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./mainAndProfilePages.module.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {actions} from \"../../redux/mainTest\";\r\n\r\n\r\nexport const MainPage: React.FC = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        newLogintext,\r\n        newPasswordtext,\r\n        isDisabled,\r\n        needRedirect\r\n    } = useSelector((state: AppStateType) => state.maintest)\r\n\r\n\r\n    let loginOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(actions.loginOnChangeActionCreator(e.currentTarget.value))\r\n        disabledChanger(e.currentTarget.value, newPasswordtext)\r\n    }\r\n    let passwordOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(actions.passwordOnChangeActionCreator(e.currentTarget.value))\r\n        disabledChanger(newLogintext, e.currentTarget.value)\r\n    }\r\n    let disabledChanger = (login: string, pass: string) => {\r\n        if (login === 'developer21' && pass === '123456') {\r\n            dispatch(actions.isDisabledAC())\r\n        }\r\n    }\r\n\r\n\r\n    const login = () => {\r\n        dispatch(actions.needRedirectAC())\r\n    }\r\n\r\n    return <div>\r\n        {needRedirect && <Redirect to='/profiletest'/>}\r\n        <div className={classes.input}>\r\n            <input value={newLogintext}\r\n                   onChange={loginOnChange}/>\r\n        </div>\r\n        <div className={classes.input}>\r\n            <input value={newPasswordtext}\r\n                   onChange={passwordOnChange}/>\r\n        </div>\r\n        <button disabled={isDisabled} onClick={login} className={classes.button}> Log in</button>\r\n\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport classes from \"./mainAndProfilePages.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\nexport const ProfilePage: React.FC= (props) => {\r\n\r\n    const login = useSelector((state: AppStateType) => state.maintest.newLogintext)\r\n\r\n\r\n    return <div className={classes.All}>\r\n\r\n        <h1> {login} </h1>\r\n\r\n    </div>\r\n}","import classes from \"./PopUpSlider.module.css\"\r\nimport React, {useEffect, useState} from \"react\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nconst PopUpSlider = () => {\r\n\r\n    // popUp logic\r\n    let [isOpen, setIisOpen] = useState(false)\r\n    let show = () => {\r\n        setIisOpen(true)\r\n    }\r\n    let close = () => {\r\n        setIisOpen(false)\r\n    }\r\n\r\n    // slider logic\r\n    const pictures = ['https://bipbap.ru/wp-content/uploads/2017/08/04.-risunki-dlya-srisovki-legkie-dlya-devochek.jpg',\r\n        'https://is2-ssl.mzstatic.com/image/thumb/Purple22/v4/77/1b/90/771b90a5-708f-82d9-1a93-3696dfe00f1b/source/256x256bb.jpg',\r\n        'https://forumsmile.ru/u/1/e/0/1e0671ed91ffc54c260b1ae7860bfd75.jpg',\r\n        'https://i.pinimg.com/474x/d4/e0/3b/d4e03b916ea5a3d0c4332974894aad7b.jpg',\r\n        'https://3d-galleru.ru/cards/11/46/opqhit54oezpojr/celuyu-tebya-mnogo-mnogo-raz.jpg',\r\n    'https://image1.thematicnews.com/uploads/topics/preview/00/11/36/47/704e432496_256crop.jpg']\r\n\r\n    let [i, setI] = useState(0)\r\n    let [images, setImages] = useState(pictures[i])\r\n\r\n    useEffect(() => {\r\n        changing()\r\n    }, [i])\r\n\r\n    let BACK = () => {\r\n        if (i === 0) {\r\n            setI(6)\r\n        }\r\n        setI((i) => {\r\n            return i - 1\r\n        })\r\n    }\r\n    let next = () => {\r\n        if (i === 5) {\r\n            setI(-1)\r\n        }\r\n        setI((i) => {\r\n            return i + 1\r\n        })\r\n    }\r\n    let changing = () => {\r\n        setImages(pictures[i])\r\n    }\r\n\r\n\r\n    return <div className={classes.open}>\r\n        <button onClick={() => show()} className={cn({\r\n            [classes.btnHide]: isOpen === true\r\n        }, classes.btnOpen)}>Показать слайдер\r\n        </button>\r\n        <dialog open={isOpen} className={classes.dialog}>\r\n            <div>\r\n                <div>\r\n                    <span className={classes.banner}> Слайдер  </span>\r\n                </div>\r\n                <div>\r\n                    <button className={classes.btnBack} onClick={() => BACK()}> BACK</button>\r\n                    <img src={images} alt={'slider'} className={classes.png}/>\r\n                    <button className={classes.btnNext} onClick={() => next()}> NEXT</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => close()} className={classes.btnClose}>Закрыть</button>\r\n                </div>\r\n            </div>\r\n        </dialog>\r\n\r\n    </div>\r\n}\r\n\r\nexport default PopUpSlider","import React from 'react';\r\nimport classes from \"./Anime.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/animeReducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype propsType ={\r\n    popularityRank: number\r\n    description: string\r\n    posterImage: string\r\n    key: number\r\n    id: number\r\n    name: string\r\n    like: boolean\r\n    genres: string\r\n    episodeCount: number\r\n    startDate: string\r\n    status: string\r\n}\r\n\r\nconst EachAnime: React.FC<propsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const deletePost = (id: number) =>{\r\n        dispatch(actions.deleteAnime(id))\r\n\r\n    }\r\n    const likeFilm = (id: number) =>{\r\n        dispatch(actions.likeAnime(id))\r\n    }\r\n    const  dislikeFilm = (id: number) =>{\r\n        dispatch(actions.dislikeAnime(id))\r\n    }\r\n\r\n    return <div className={classes.eachAnime} >\r\n          <div>\r\n              <img alt={'sorry image not found'} src={props.posterImage} className={classes.png}/>\r\n          </div>\r\n       <div>\r\n           <h2> <span className={classes.name}> {props.name === undefined? \"can't find name\" : props.name} </span>\r\n                {props.like && <span> 🧡 </span>}\r\n               <div>\r\n                   <span>  {props.episodeCount} episodes / </span>\r\n                   <span> start : {props.startDate} / </span> <span> status: {props.status} </span>\r\n               </div>\r\n               <div className={classes.rating}> Popularity rank is {props.popularityRank} </div>  </h2>\r\n\r\n           <h4> {props.description}</h4>\r\n           { !props.like && <button onClick={()=> likeFilm(props.id)} className={classes.like}> like </button> }\r\n           { props.like && <button onClick={()=> dislikeFilm(props.id)} className={classes.dislike}> dislike </button> }\r\n           <button onClick={()=> deletePost(props.id)} className={classes.delete}> delete </button>\r\n       </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default EachAnime;","import React from \"react\";\r\nimport classes from './Anime.module.css'\r\n\r\ntype propsType = {\r\n    searchAnime: (e: any) => void\r\n    handleSearch: (e: any) => void\r\n}\r\n\r\nconst Search: React.FC<propsType> = (props) => {\r\n    return (<form action='' onSubmit={props.searchAnime} className={classes.form} >\r\n        <input type='text' onChange={props.handleSearch}/>\r\n        <button type='submit'>\r\n            Search\r\n        </button>\r\n    </form>)\r\n}\r\n\r\nexport default Search","import React from \"react\";\r\n    import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AnimesType, getAnimesThunkCreater, actions} from \"../../redux/animeReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\nimport Paginator from \"../../components/Paginator/Paginator\";\r\nimport classes from \"./Anime.module.css\";\r\nimport EachAnime from \"./eachAnime\";\r\nimport Search from \"./SearchAnime\";\r\n\r\n\r\nexport const Anime: React.FC = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(getAnimesThunkCreater(pageNumber, searchField ))\r\n    }\r\n\r\n    const {animes, searchField, currentPage} = useSelector((state: AppStateType) => state.anime)\r\n\r\n    let animesElements = animes.map((el: AnimesType) => <EachAnime popularityRank={el.attributes.popularityRank} description={el.attributes.description}\r\n                                                                   posterImage={el.attributes.posterImage === null ?\r\n                                                                       \"https://avatarko.ru/img/kartinka/1/avatarko_anonim.jpg\" : el.attributes.posterImage.large}\r\n                                                                   key={el.id} id={el.id}\r\n                                                                   name={el.attributes.titles.en} like={el.like} genres={el.type}\r\n                                                                   episodeCount={el.attributes.episodeCount} startDate = {el.attributes.startDate} status={el.attributes.status}/>)\r\n\r\n    const searchAnime = async (e: any) => {\r\n        e.preventDefault()\r\n        dispatch(getAnimesThunkCreater(1, searchField))\r\n    }\r\n    const handleSearch = (e: any) => {\r\n        dispatch(actions.handleSearchAC(e.target.value))\r\n    }\r\n\r\n    return (<div className={classes.all}>\r\n            <div className={classes.paginator}>\r\n                <Paginator currentPage={currentPage}\r\n                           totalItemsCount={500}\r\n                           pageSize={10}\r\n                           onPageChanged={onPageChanged}\r\n                           portionSize={10}/>\r\n            </div>\r\n            <Search searchAnime={searchAnime} handleSearch={handleSearch}/>\r\n            <div>\r\n                {animesElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {getAnimesThunkCreater} from \"../../redux/animeReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {Loading} from \"../Weather/Loading/Loading\";\nimport {Anime} from \"./Anime\";\n\n\n\n\n\nexport const AnimeContainer : React.FC =() => {\n\nconst dispatch = useDispatch()\n\n  useEffect( () => {\n      dispatch(getAnimesThunkCreater(1, \"tokyo\"))\n }, [])\n\n    const isLoading = useSelector((state: AppStateType) => state.anime.isLoading)\n\n\n    return (\n    <div>\n        {isLoading ? <Loading/> : <Anime/>}\n    </div>\n    )\n}\n\n","import React from 'react';\r\nimport classes from './GenaPosts.module.css'\r\n\r\n\r\n\r\nconst GenaPosts = (props) => {\r\n\r\n\r\n\r\n  return <div className={classes.MyPostsAll}>\r\n    <h3> My posts </h3>\r\n    \r\n    <div className={classes.CreateNewPost} >\r\n      Create New Post\r\n    </div>\r\n    <div>\r\n      <div>\r\n                <textarea className={classes.text} />\r\n      </div>\r\n      <div>\r\n        <button className={classes.button} >Send</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default GenaPosts;","import React from 'react';\r\n\r\nimport classes from './GenaProfileInfo.module.css'\r\n\r\nconst GenaProfileInfo = () => {\r\n    return <div>\r\n        <div className={classes.wallpaper}>\r\n            <img\r\n                src=\"https://sun9-78.userapi.com/impg/NrSWcMzkCka2yzSn3A9lmLm2c6Jg5QGPOKYM_A/aZTfjfpwHRo.jpg?size=1600x648&quality=96&sign=2e39caafd67c569a65eca8d1d40f223a&type=album\"/>\r\n        </div>\r\n      <div className={classes.description}>\r\n        <div className={classes.avatar}>\r\n            <img src=\"https://sun9-74.userapi.com/impg/K_kf_03-X8lP2uixO9tzjxIjrNyUztz0yAMcdw/cBvjDD8FRDs.jpg?size=640x640&quality=96&sign=cc6043c92263a14c75dc8e5517f59cf8&type=album\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfileInfo;","import React from 'react';\r\nimport GenaPosts from './GenaPosts/GenaPosts';\r\n\r\nimport GenaProfileInfo from \"./GenaProfileInfo/GenaProfileInfo\";\r\n\r\n\r\nconst GenaProfile = (props) => {\r\n\r\n    return <div>\r\n        <GenaProfileInfo/>\r\n\r\n        <GenaPosts posts={props.posts} dispatch={props.dispatch}/>\r\n    </div>\r\n}\r\n\r\nexport default GenaProfile;","import React from 'react';\r\n\r\n\r\nconst NikitaProfile = (props) => {\r\n\r\n    return <div>\r\n    <img src='https://sun9-59.userapi.com/impg/-0uRmUFYMzw1edpnx6Zf26nyDK5C9k8lfa1ZNA/mY7HJSdsAJU.jpg?size=537x645&quality=96&sign=ebb93117806db9e5e54a3de35211efc0&type=album' />\r\n    </div>\r\n}\r\n\r\nexport default NikitaProfile;","import React from 'react';\r\nimport classes from './EachSong.module.css'\r\n\r\n\r\ntype PropsType = {\r\n  nameSong: string\r\n  key: number\r\n}\r\n\r\nconst EachSong: React.FC<PropsType> = (props) => {\r\n\r\n  return <div>\r\n\r\n\r\n    <div className={classes.item}>\r\n      <span className={classes.mes}> {props.nameSong}  </span>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default EachSong;","import React, {ChangeEvent} from 'react';\r\nimport classes from './Music.module.css'\r\nimport EachSong from \"./EachSong/EachSong\";\r\nimport {SongsType} from \"../../redux/musicReducer\";\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    songs: Array<SongsType>\r\n    newsongtext: string\r\n\r\n}\r\nexport type MapDispatchToPropsType = {\r\n    songOnChangeActionCreator: (text: string) => void\r\n    addSongActionCreator: () => void\r\n}\r\ntype PropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\n\r\nconst Music: React.FC<PropsType>  =(props) => {\r\n\r\n    let songs = props.songs.map(el => <EachSong nameSong={el.nameSong} key={el.id}/>)\r\n\r\n\r\n\r\n\r\n    let songOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.songOnChangeActionCreator(e.currentTarget.value)\r\n    }\r\n    let addSong = () => {\r\n        props.addSongActionCreator();\r\n    }\r\n\r\n\r\n    return (\r\n        < div className={classes.content}>\r\n            <input value={props.newsongtext}\r\n                      onChange={songOnChange}/>\r\n\r\n        <button className={classes.button} onClick={addSong}>Add Song</button>\r\n            <div className={classes.song}>\r\n                {songs}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import {addSongActionCreator, songOnChangeActionCreator} from \"../../redux/musicReducer\";\r\nimport Music, {MapDispatchToPropsType, MapStateToPropsType} from \"./Music\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        songs: state.musics.songs,\r\n        newsongtext: state.musics.newsongtext\r\n    }\r\n}\r\n\r\n\r\n\r\nlet MusicContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {songOnChangeActionCreator, addSongActionCreator})(Music)\r\n\r\n\r\nexport default MusicContainer;","import React from \"react\";\r\nimport classes from './Beer.module.css'\r\n\r\n\r\nexport const BeerInt = () =>{\r\n\r\n\r\n\r\n\r\nreturn ( <div>\r\n       <button className={classes.button}>  <a href={'https://ruslansssplus.github.io/beerternational/#/Regulations'} > жми </a> </button>\r\n\r\n\r\n    </div>\r\n)\r\n}","import React from 'react';\r\nimport classes from './EachUser.module.css'\r\nimport AOS from 'aos'\r\nimport 'aos/dist/aos.css';\r\n\r\nconst EachUser = (props) => {\r\n\r\n    AOS.init();\r\n\r\n    return (<div className={classes.All} data-aos=\"fade-right\">\r\n        <img src={'https://cdnimg.rg.ru/img/content/228/88/86/210330_Ryu_Sobakasu_TRL_txtles_2398p_2048_858_Rec709.00430_t_650x433.jpg'}\r\n             alt={'ava'} className={classes.ava}/>\r\n        <div className={classes.info}>\r\n            <div className={classes.name}>{props.name}</div>\r\n            <div> Новость: </div>\r\n            <div className={classes.message}>{props.message}</div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default EachUser","import React, {useState} from 'react';\r\nimport classes from './Test.module.css'\r\nimport EachUser from \"./EachUser/EachUser\";\r\n\r\n\r\n\r\nconst Test = ({getOldMessages, getNewMessages, messages, sendNewMessage}) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    let allMessages = messages.map(el => <EachUser name={el.user} message={el.message} key={el.id}/>)\r\n    console.log(messages)\r\n    const sendNewMessageLocal = (name, message) =>{\r\n        sendNewMessage(name, message)\r\n        setMessage('')\r\n        setName('')\r\n    }\r\n\r\n    return <div className={classes.all}>\r\n        <div>\r\n            <button  className={classes.buttons} onClick={() => getOldMessages(messages[0].id, true)} disabled={messages[0].id === 1}>\r\n                Back\r\n            </button>\r\n            <button className={classes.buttons} onClick={() => getNewMessages(messages[messages.length - 1].id, false)} >\r\n                Next\r\n            </button>\r\n            {allMessages}\r\n        </div>\r\n\r\n\r\n            <div className={classes.allSend}>\r\n                <div className={classes.sendNew}> Отправить новую новость</div>\r\n                <div className={classes.inputs}>\r\n                    <span> Name: </span>\r\n                    <input\r\n                        className={classes.input}\r\n                        onChange={e => setName(e.target.value)}\r\n                        value={name}\r\n                        type=\"text\"\r\n                    />\r\n                    <span> Message </span>\r\n                    <input\r\n                        className={classes.input}\r\n                        onChange={e => setMessage(e.target.value)}\r\n                        value={message}\r\n                        type=\"message\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick={() => sendNewMessageLocal(name, message)} >\r\n                        Send\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n    </div>\r\n        }\r\n\r\nexport default Test;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Test from \"./Test\";\r\nimport {newMessagesThunkCreater, oldMessagesThunkCreater, sendNewMessageThunkCreater} from \"../../redux/testReducer\";\r\nimport Preloader from \"../../components/common/Preloder/Preloader\";\r\n\r\n\r\nexport const TestContainer = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const {messages} = useSelector((state) => state.test)\r\n\r\n    useEffect(()=>{ dispatch(newMessagesThunkCreater(0, false))\r\n    }, [])\r\n\r\n\r\n    const getOldMessages = (id, oldMessage) =>{\r\n        dispatch(oldMessagesThunkCreater(id, oldMessage))\r\n    }\r\n\r\n    const getNewMessages = (id, oldMessage) =>{\r\n        dispatch(newMessagesThunkCreater(id, oldMessage))\r\n    }\r\n    const sendNewMessage = (name, message) => {\r\n        dispatch(sendNewMessageThunkCreater(name, message))\r\n    }\r\n\r\n    return (messages === [] ? <Preloader /> : <Test getOldMessages={getOldMessages} getNewMessages={getNewMessages} messages={messages} sendNewMessage={sendNewMessage}/>)\r\n}\r\n","import React, {useState} from \"react\";\r\nimport classes from \"./DataPicker.module.css\";\r\n\r\nconst Days = (props) => {\r\n\r\n    return <span className={!props.isSelected? classes.allDays : classes.selectedDay} onClick={() => props.select(props.day)}>\r\n        {props.day}\r\n    </span>\r\n}\r\n\r\nexport default Days;","import React, {useEffect, useState} from \"react\";\r\nimport classes from './DataPicker.module.css'\r\nimport Days from \"./Days\";\r\nimport {v1} from 'uuid'\r\n\r\n\r\nconst DatePicker = () => {\r\n\r\n    const select = (i) => {\r\n        setSelectedDay(i);\r\n        setSelectedMonth(month);\r\n        setSelectedYear(year);\r\n        let a = formatDate(new Date(year + '-' + (month + 1) + '-' + (i)))\r\n        setSelected_date_element(a);\r\n        setAllSelectedDates([...allSelectedDates, a])\r\n        populateDates();\r\n    }\r\n\r\n\r\n    const [hide, setHide] = useState(true)\r\n    const isHide = () => {\r\n        setHide(!hide)\r\n    }\r\n\r\n    let date = new Date();\r\n    let day = date.getDate();\r\n\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const [year, setYear] = useState(date.getFullYear())\r\n    const [month, setMonth] = useState(date.getMonth())\r\n    const [mth_element, setMth_element] = useState(months[month] + ' ' + year)\r\n    const [selected_date_element, setSelected_date_element] = useState(formatDate(date))\r\n    const [selectedMonth, setSelectedMonth] = useState(month);\r\n    const [selectedYear, setSelectedYear] = useState(year);\r\n    const [selectedDay, setSelectedDay] = useState(day);\r\n    const [allSelectedDates, setAllSelectedDates] = useState([]);\r\n\r\n\r\n    let days_element = [];\r\n\r\n\r\n\r\n\r\n    populateDates();\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(selected_date_element)\r\n    }, [selected_date_element])\r\n\r\n    const goToNextMonth = (m, y) => {\r\n        if (m >= 11) {\r\n            setMonth(0);\r\n            setYear(y + 1);\r\n            setMth_element(months[0] + ' ' + `${y + 1}`);\r\n        } else {\r\n            setMonth(m + 1);\r\n            setMth_element(months[m + 1] + ' ' + y);\r\n        }\r\n        populateDates();\r\n    }\r\n\r\n    const goToPrevMonth = (m, y) => {\r\n        if (m <= 0) {\r\n            setMonth(11);\r\n            setYear(y - 1);\r\n            setMth_element(months[11] + ' ' + `${y - 1}`);\r\n        } else {\r\n            setMonth(m - 1);\r\n            setMth_element(months[m - 1] + ' ' + y)\r\n        }\r\n        populateDates();\r\n    }\r\n\r\n\r\n    function populateDates(e) {\r\n\r\n        let amount_days = 31;\r\n\r\n        if (month === 1) {\r\n            amount_days = 28;\r\n        }\r\n\r\n        for (let i = 0; i < amount_days; i++) {\r\n            if (selectedDay === (i + 1) && selectedYear === year && selectedMonth === month) {\r\n                days_element.push(<Days day={i + 1} isSelected={true} select={select} key={v1()}/>)\r\n            } else {\r\n                days_element.push(<Days day={i + 1} isSelected={false} select={select} key={v1()}/>)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function formatDate(d) {\r\n        let day = d.getDate();\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        let month = d.getMonth() + 1;\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        let year = d.getFullYear();\r\n        return day + ' / ' + month + ' / ' + year;\r\n    }\r\n\r\n\r\n    return <div className={classes.page}>\r\n        <div className={classes.all}>\r\n            <div className={classes.date} onClick={() => isHide()}>\r\n                {selected_date_element}\r\n            </div>\r\n            <hr/>\r\n            {hide ? null :\r\n                <div>\r\n                    <div className={classes.month}>\r\n                        <span onClick={() => goToPrevMonth(month, year)} className={classes.prev}>&lt;</span>\r\n                        <span className={classes.exactDate}>   {mth_element}  </span>\r\n                        <span onClick={() => goToNextMonth(month, year)} className={classes.next}>&gt;</span>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className={classes.days}> {days_element}  </div>\r\n                </div>}\r\n        </div>\r\n\r\n        <div className={classes.allDates}>\r\n            <h3> Выбранные даты</h3>\r\n            {allSelectedDates.map((el) => <div key={v1()}>\r\n                {el}\r\n            </div>)\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DatePicker;","import React from 'react';\r\nimport classes from \"./Cats.module.css\";\r\nimport {actions} from \"../../redux/catsReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst EachCat = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addFav = (id) => {\r\n        dispatch(actions.addFav(id))\r\n    }\r\n    const deleteFav = (id) => {\r\n        dispatch(actions.deleteFav(id))\r\n    }\r\n\r\n\r\n    return <div className={classes.eachCat}>\r\n        <img src={props.url} className={classes.cat} alt={'cat'}/>\r\n        {\r\n            !props.favorite.includes(props.cat) ?\r\n                <button className={classes.fav} onClick={() => addFav(props.id)}>❤</button>\r\n                :\r\n                <button className={classes.fav} onClick={() => deleteFav(props.id)}>💔</button>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default EachCat;","import React from 'react';\r\nimport classes from \"./Cats.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport EachCat from \"./EachCat\";\r\nimport {v1} from \"uuid\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst FavCats = () => {\r\n\r\n    const {favorite} = useSelector((state) => state.cats)\r\n\r\n\r\n    return <div>\r\n        <div className={classes.all}>\r\n            {favorite.map(cat => <EachCat url={cat.url} key={v1()} id={cat.id} cat={cat} favorite={favorite}/>)}\r\n        </div>\r\n        <span>\r\n            <Link to=\"/Cats\" className={classes.goToFav}> все котики</Link>\r\n        </span>\r\n    </div>\r\n\r\n}\r\n\r\nexport default FavCats;","import React, {useEffect} from \"react\";\r\nimport classes from \"./Cats.module.css\";\r\nimport {v1} from 'uuid'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actions, getNewCatsThunkCreater} from \"../../redux/catsReducer\";\r\nimport EachCat from \"./EachCat\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport const Cats = () => {\r\n    const dispatch = useDispatch()\r\n    const {cats, currentPage, isFetching, favorite} = useSelector((state) => state.cats)\r\n\r\n\r\n    useEffect(() => {\r\n        if (isFetching) {\r\n            console.log('fetch')\r\n            dispatch(getNewCatsThunkCreater(currentPage))\r\n        }\r\n    }, [isFetching])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', scrollHandler)\r\n        return function () {\r\n            document.removeEventListener('scroll', scrollHandler)\r\n        }\r\n    })\r\n\r\n    const scrollHandler = (e) => {\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n            dispatch(actions.setFetching(true))\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n\r\n            <div className={classes.all}>\r\n                {cats.map(cat => <EachCat url={cat.url} key={v1()} id={cat.id} favorite={favorite} cat={cat}/>)}\r\n            </div>\r\n            <span>\r\n                <Link to=\"/FavoriteCats\" className={classes.goToFav}>Любимые котики</Link>\r\n                {/* сделал бы через useNavigate, но проект старый, в нем старая версия реакт роутер дом. */}\r\n        </span>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport classes from '../../audio.module.css'\r\n\r\nfunction Header() {\r\n\r\n\r\n  return (\r\n    <header className={classes.draggable}>\r\n      <h3 className={classes.header_h3}>Король и Шут</h3>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actions} from \"../../../../redux/audioReducer\";\r\nimport classes from \"../../audio.module.css\";\r\nimport {CaretRightOutlined, HeartOutlined, SaveOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nfunction Playlist() {\r\n  const { currentSong, song_list } = useSelector((state) => state.audio)\r\n    const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"playlist no_drag\">\r\n      <ul className={classes.loi}>\r\n        {song_list.map((song, i) => (\r\n          <li\r\n              className={currentSong === i ? classes.songContainerSelected : classes.songContainer}\r\n            key={i}\r\n            onClick={() => {\r\n              dispatch(actions.SetCurrent(i))\r\n            }}\r\n          >\r\n            <div className={classes.tmbn_song}>\r\n                <CaretRightOutlined className={classes.tmbn_song1}/>\r\n            </div>\r\n            <div className={classes.songmeta_playlist}>\r\n              <span className={classes.songname}>{song.title}</span>\r\n              <span className={classes.songauthors}>{song.artistName}</span>\r\n            </div>\r\n            <div className={classes.playlist_btns_group}>\r\n              <button className=\"fav_song playlist_btn\">\r\n                  <HeartOutlined className={classes.bttn3}/>\r\n              </button>\r\n              <button className=\"options_song playlist_btn\">\r\n                  <SaveOutlined className={classes.bttn3} />\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Playlist\r\n","import React from 'react'\r\nimport classes from \"../../audio.module.css\";\r\nimport {HeartOutlined, DownOutlined, SaveOutlined}  from  '@ant-design/icons';\r\n\r\n\r\nconst fav = () => {\r\n  console.log('I like this one')\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <div className={classes.actions}>\r\n      <img src=\"https://cdns-images.dzcdn.net/images/cover/80909d7a402560e429eb12746b932270/264x264.jpg\" />\r\n      <div className={classes.album_meta}>\r\n        <span className={classes.alb_label}>Плейлист</span>\r\n        <h2 className={classes.alb}>Мой плейлист Короля и Шута</h2>\r\n      </div>\r\n      <div className={classes.action_btns}>\r\n        <button onClick={() => fav()} className={classes.actions_button}>\r\n            <HeartOutlined className={classes.bttn}/>\r\n        </button>\r\n        <button onClick={() => fav()}  className={classes.actions_button}>\r\n            <DownOutlined className={classes.bttn}/>\r\n        </button>\r\n        <button onClick={() => fav()} className={classes.actions_button}>\r\n            <SaveOutlined className={classes.bttn} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Actions\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n    StepBackwardOutlined, PauseCircleOutlined,StepForwardOutlined ,CaretRightOutlined,\r\n    SoundOutlined, ReloadOutlined, SwapOutlined\r\n} from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actions, handleEndThunkCreater, nextSongThunkCreater, prevSongThunkCreater} from \"../../../redux/audioReducer\";\r\nimport classes from \"../audio.module.css\";\r\n\r\nfunction Controls() {\r\n\r\n  const dispatch = useDispatch()\r\n  const {currentSong,\r\n    repeat,\r\n    random,\r\n    playing,\r\n    song_list} = useSelector((state) => state.audio)\r\n\r\n\r\n\r\n  const audio = useRef('audio_tag')\r\n\r\n  // self State\r\n  const [statevolum, setStateVolum] = useState(0.3)\r\n  const [dur, setDur] = useState(0)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const fmtMSS = (s) => {\r\n    return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + ~~s\r\n  }\r\n\r\n  const toggleAudio = () =>\r\n    audio.current.paused ? audio.current.play() : audio.current.pause()\r\n\r\n  const handleVolume = (q) => {\r\n    setStateVolum(q)\r\n    audio.current.volume = q\r\n  }\r\n\r\n  const handleProgress = (e) => {\r\n    let compute = (e.target.value * dur) / 100\r\n    setCurrentTime(compute)\r\n    audio.current.currentTime = compute\r\n  }\r\n\r\n  useEffect(() => {\r\n    audio.current.volume = statevolum\r\n    if (playing) {\r\n      toggleAudio()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentSong])\r\n\r\n  return (\r\n    <div className={classes.controls}>\r\n      <audio\r\n        onTimeUpdate={(e) => setCurrentTime(e.target.currentTime)}\r\n        onCanPlay={(e) => setDur(e.target.duration)}\r\n        onEnded={()=> dispatch(handleEndThunkCreater(random, repeat, currentSong, song_list))}\r\n        ref={audio}\r\n        type=\"audio/mpeg\"\r\n        preload=\"true\"\r\n        src={song_list[currentSong].fileUrl}\r\n      />\r\n      <div className={classes.vlme}>\r\n        <span className={classes.volum}>\r\n         <SoundOutlined className={classes.bttn1}/>\r\n        </span>\r\n        <input\r\n          value={Math.round(statevolum * 100)}\r\n          type=\"range\"\r\n          name=\"volBar\"\r\n          id=\"volBar\"\r\n          onChange={(e) => handleVolume(e.target.value / 100)}\r\n        />\r\n      </div>\r\n      <div className={classes.musicControls}>\r\n        <span className={classes.prev} onClick={ ()=>  dispatch(prevSongThunkCreater(currentSong, song_list))}>\r\n        <StepBackwardOutlined className={classes.bttn1}/>\r\n        </span>\r\n\r\n        <span\r\n            className={classes.play}\r\n          onClick={() => {\r\n            dispatch(actions.togglePlaying(playing))\r\n            toggleAudio()\r\n          }}\r\n        >\r\n          <span className={!playing ? null : classes.hide}>\r\n          <CaretRightOutlined className={classes.bttn3}/>\r\n          </span>\r\n          <span className={!playing ? classes.hide : null }>\r\n            <PauseCircleOutlined className={classes.bttn3}/>\r\n          </span>\r\n        </span>\r\n\r\n        <span className={classes.next} onClick={ ()=>  dispatch(nextSongThunkCreater(currentSong, song_list, random))}>\r\n         <StepForwardOutlined className={classes.bttn1}/>\r\n        </span>\r\n      </div>\r\n\r\n      <div className={classes.progressb}>\r\n        <div className={classes.songMeta}>\r\n          <span className={classes.songtitle}>{song_list[currentSong].title}</span>\r\n          <span className={classes.songartistName}>\r\n            {song_list[currentSong].artistName}\r\n          </span>\r\n        </div>\r\n        <input\r\n          onChange={handleProgress}\r\n          value={dur ? (currentTime * 100) / dur : 0}\r\n          type=\"range\"\r\n          name=\"progresBar\"\r\n          id=\"prgbar\"\r\n        />\r\n        <span className={classes.currentT}>{fmtMSS(currentTime)}</span>/\r\n        <span className={classes.totalT}>{fmtMSS(dur)}</span>\r\n      </div>\r\n      <div className={classes.plsoptions}>\r\n        <span\r\n          onClick={()=> dispatch(actions.toggleRandom(random))}\r\n          className={'random ' + (random ? 'active' : '')}\r\n        >\r\n         <SwapOutlined className={random ? classes.bttn2 : classes.bttn1}/>\r\n        </span>\r\n        <span\r\n          onClick={()=> dispatch(actions.toggleRepeat(repeat))}\r\n          className={'repeat ' + (repeat ? 'active' : '')}\r\n        >\r\n         <ReloadOutlined className={repeat ? classes.bttn2 : classes.bttn1 }/>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import React from 'react';\r\nimport Header from \"./components/header/Header\";\r\nimport Playlist from \"./components/playlist/Playlist\";\r\nimport Actions from \"./components/playlist/Actions\";\r\nimport Controls from \"./components/Controls\";\r\nimport classes from \"./audio.module.css\";\r\n\r\n\r\n\r\n\r\nconst Audio = () => {\r\n\r\n    return <div  className={classes.main}>\r\n        <div className={classes.top}>\r\n\r\n            <Header />\r\n            <Actions />\r\n            <Playlist />\r\n        </div>\r\n        <Controls />\r\n    </div>\r\n        }\r\n\r\nexport default Audio;","import {Route, Switch} from \"react-router-dom\";\r\nimport {ChatPage} from \"../pages/Chat/ChatPage\";\r\nimport ProfileContainer from \"../pages/Profile/ProfileContainer\";\r\nimport NewsContainer from \"../pages/News/NewsContainer\";\r\nimport React, {Suspense} from \"react\";\r\nimport Friends from \"../pages/Friends/Friends\";\r\nimport {UsersPage} from \"../pages/Users/UsersContainer\";\r\nimport {Login} from \"../pages/Login/Login\";\r\nimport DiallogsContainer from \"../pages/Diallogs/DiallogsContainer\";\r\nimport {WeatherContainer} from \"../pages/Weather/WeatherContainer\";\r\nimport {FilmsContainer} from \"../pages/Films/FilmsContainer\";\r\nimport Books from \"../pages/Books/Books\";\r\nimport {MainPage} from \"../pages/TestRoute/mainPage\";\r\nimport {ProfilePage} from \"../pages/TestRoute/ProfilePage\";\r\nimport PopUpSlider from \"../pages/PopUpSlider/PopUpSlider\";\r\nimport {AnimeContainer} from \"../pages/Anime/AnimeContainer\";\r\nimport GenaProfile from \"../pages/ProfileGena/GenaProfile\";\r\nimport NikitaProfile from \"../components/NikitaProfile\";\r\nimport MusicContainer from \"../pages/Music/MusicContainer\";\r\nimport {BeerInt} from \"../pages/NewProject/BeerInt\";\r\n\r\nimport {TestContainer} from \"../pages/Test/TestContainer\";\r\nimport DataPicker from \"../pages/DataPicker/DatePicker\";\r\nimport FavCats from \"../pages/Cats/FavCats\";\r\nimport {Cats} from \"../pages/Cats/Cats\";\r\nimport Audio from \"../pages/Audio/Audio\";\r\n\r\nexport const AllRoutes = () => {\r\n\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path='/chat'\r\n                   render={() => <ChatPage />}/>\r\n\r\n            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n\r\n            <Route path='/news' render={() => <NewsContainer/>}/>\r\n            <Route path='/music'\r\n                   render={() => {\r\n                       return <Suspense fallback={<div>loading...</div>}>\r\n                           <MusicContainer/>\r\n                       </Suspense>\r\n                   }}/>\r\n            <Route path='/friends'\r\n                   render={() => <Friends/>}/>\r\n            <Route path='/users'\r\n                   render={() => <UsersPage/>}/>\r\n            <Route path='/login'\r\n                   render={() => <Login/>}/>\r\n            <Route path='/diallogs' render={() => <DiallogsContainer/>}/>\r\n            <Route path='/weather' render={() => <WeatherContainer />}/>\r\n\r\n            <Route path='/films' render={() => <FilmsContainer />}/>\r\n            <Route path='/books' render={() => <Books />}/>\r\n\r\n\r\n            <Route path='/maintest' render={() => <MainPage />}/>\r\n            <Route path='/profiletest' render={() => <ProfilePage />}/>\r\n            <Route path='/PopUpSlider' render={() => <PopUpSlider />}/>\r\n\r\n            <Route path='/Anime' render={() => <AnimeContainer />}/>\r\n            <Route path='/https://vk.com/dank_af' render={() => <GenaProfile/>}/>\r\n            <Route path='/https://vk.com/id153839551' render={() => <NikitaProfile/>}/>\r\n            <Route path='/BeerTernational' render={() => <BeerInt />}/>\r\n\r\n            <Route path='/Test' render={() => <TestContainer />}/>\r\n            <Route path='/DataPicker' render={() => <DataPicker />}/>\r\n            <Route path='/Cats' render={() => <Cats />}/>\r\n            <Route path='/FavoriteCats' render={() => <FavCats />}/>\r\n            <Route path='/Audio' render={() => <Audio />}/>\r\n        </Switch>\r\n    );\r\n}","import React from 'react';\nimport './App.module.css';\nimport 'antd/dist/antd.css';\nimport {HashRouter, Link, withRouter} from 'react-router-dom'\nimport classes from './App.module.css'\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialiseApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloder/Preloader\";\nimport store, {AppStateType} from \"./redux/reduxStore\";\n\n\nimport {Layout, Menu} from 'antd';\nimport {\n    SoundOutlined, UserOutlined, VideoCameraOutlined, CloudOutlined,\n    WechatOutlined, SearchOutlined, BookOutlined, ZhihuOutlined, ReadOutlined, FireOutlined,\n    CalendarOutlined, GithubOutlined\n} from '@ant-design/icons';\n\nimport {HeaderComponent} from \"./components/Header/Header\";\n\nimport {WeatherContainer} from \"./pages/Weather/WeatherContainer\";\n\nimport {AllRoutes} from \"./Routes/AllRoutes\";\n\n\nconst {Header, Content, Sider} = Layout;\n\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n    initialiseApp: () => void\n}\n\ntype PropsType = MapPropsType & DispatchPropsType\n\nclass App extends React.Component<PropsType> {\n\n    state = {\n        needWeather: true\n    }\n\n    componentDidMount() {\n        this.props.initialiseApp()\n        window.onerror = function myErrorHandler(errorMsg) {\n            alert(\"Error occured: \" + errorMsg);//or any message\n            return false;\n        }\n    }\n\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n\n        return (\n            <Layout>\n                <Sider\n                    style={{background: '#98bfad', height: '500px'}}\n                    className=\"menuShadow\"\n                    breakpoint=\"lg\"\n                    collapsedWidth=\"0\"\n                    onBreakpoint={broken => {\n                        console.log(broken);\n                    }}\n                    onCollapse={(collapsed, type) => {\n                        console.log(collapsed, type);\n                    }}\n                >\n\n\n                    <div className={classes.logo}>\n                        <img className={classes.logo1}\n                             src='https://sun9-3.userapi.com/impf/sbA1-MxKfR9FziylJZeSfg-hNv9DwySyt8Qn1Q/pp_Bmo1uZ7I.jpg?size=237x173&quality=95&sign=ceafa2f1a605e6f8ea3539cd4bac2fa0&type=album'\n                             alt={'logo'}/>\n                    </div>\n\n\n                    <Menu mode=\"inline\" defaultSelectedKeys={['1']}\n                          style={{background: \"linear-gradient(#98bfad, #ff907c)\",}}>\n\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                            <Link to=\"/profile\">My page (locked)</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"13\" icon={<FireOutlined />}>\n                            <Link to=\"/BeerTernational\">Beerternational</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<BookOutlined/>}>\n                            <Link to='/news'>News</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<WechatOutlined/>}>\n                            <Link to='/chat'>Chat (locked)</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"4\" icon={<UserOutlined/>}>\n                            <Link to='/friends'> Friends</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"5\" icon={<SearchOutlined/>}>\n                            <Link to='/users'> Пользователи</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"6\" icon={<SoundOutlined/>}>\n                            <Link to='/music'>Music</Link>\n                        </Menu.Item>\n                        {/*<Menu.Item key=\"7\" icon={<MessageOutlined />}>*/}\n                        {/*    <Link to = '/diallogs'>Messages (locked)</Link>*/}\n                        {/*</Menu.Item>*/}\n                        <Menu.Item key=\"8\" icon={<VideoCameraOutlined/>}>\n                            <Link to='/films'>Films</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"9\" icon={<ReadOutlined/>}>\n                            <Link to='/books'>Books</Link>\n                        </Menu.Item>\n                        {/*<Menu.Item key=\"10\" icon={<MessageOutlined />}>*/}\n                        {/*    <Link to = '/maintest'>Main (locked)    </Link>*/}\n                        {/*</Menu.Item>*/}\n                        <Menu.Item key=\"11\" icon={<ZhihuOutlined/>}>\n                            <Link to='/anime'>Anime</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"12\" icon={<ZhihuOutlined/>}>\n                            <Link to='/PopUpSlider'>PopUpSlider</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"18\" icon={<ZhihuOutlined/>}>\n                            <Link to='/Test'>Test</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"19\" icon={<CalendarOutlined />}>\n                            <Link to='/DataPicker'>DataPicker</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"20\" icon={<GithubOutlined />}>\n                            <Link to='/Cats'>Cats</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"21\" icon={<GithubOutlined />}>\n                            <Link to='/Audio'>Audio</Link>\n                        </Menu.Item>\n                        {!this.state.needWeather && <div className={classes.weather} onClick={() => {\n                            this.setState({needWeather: true})\n                        }}>\n                            <WeatherContainer/>\n                        </div>}\n                        {this.state.needWeather && <Menu.Item key=\"15\" icon={<CloudOutlined/>} onClick={() => {\n                            this.setState({needWeather: false})\n\n                        }}>\n                            Weather\n                        </Menu.Item>}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header className=\"site-layout-sub-header-background\"\n                            style={{padding: 0, height: 68, background: \"linear-gradient(to right, #98bfad, #ffc4b2)\"}}>\n                        <HeaderComponent/>\n                    </Header>\n                    <Content>\n                        <div className=\"site-layout-background\" style={{padding: 0, minHeight: 360}}>\n                            <AllRoutes/>\n                        </div>\n                    </Content>\n                    {/*<Footer style={{textAlign: 'center'}}>Social-network 2.0 ©2021 Created by Ruslan SSS Ghoul</Footer>*/}\n                </Layout>\n            </Layout>\n\n            //     <NavBarContainer/>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initialiseApp}\n    ))(App)\n\n\nconst AppAllTree: React.FC = () => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n\n}\n\nexport default AppAllTree","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom'\nimport AppAllTree from \"./App\";\n\n\n\n\n\nReactDOM.render(<AppAllTree/>, document.getElementById('root'))\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"png\":\"Anime_png__2S9lL\",\"eachAnime\":\"Anime_eachAnime__2LtzO\",\"rating\":\"Anime_rating__2xrRk\",\"des\":\"Anime_des__2kUG3\",\"dislike\":\"Anime_dislike__2CtnE\",\"like\":\"Anime_like__9V2Nt\",\"delete\":\"Anime_delete__UwHUI\",\"name\":\"Anime_name__VEDdW\",\"form\":\"Anime_form__2d5W7\",\"paginator\":\"Anime_paginator__20ozy\",\"all\":\"Anime_all__3aRzQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__35PTF\",\"userInfo\":\"users_userInfo__6HjsU\",\"city\":\"users_city__29lyc\",\"country\":\"users_country__3ThGE\",\"fullname\":\"users_fullname__2_35g\",\"status\":\"users_status__1jh0g\",\"userInfoShort\":\"users_userInfoShort__3ffLZ\",\"buttons\":\"users_buttons__3wUPf\",\"newUsers\":\"users_newUsers__3rRsd\",\"selectedPage\":\"users_selectedPage__39OFZ\",\"page\":\"users_page__3oKs2\",\"all\":\"users_all__3kOBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"DataPicker_all__29JFM\",\"date\":\"DataPicker_date__2-8id\",\"vse\":\"DataPicker_vse__2dozS\",\"allDays\":\"DataPicker_allDays__2_xRn\",\"selectedDay\":\"DataPicker_selectedDay__3RJys\",\"prev\":\"DataPicker_prev__2dpsq\",\"next\":\"DataPicker_next__bDotO\",\"month\":\"DataPicker_month__1pHbg\",\"exactDate\":\"DataPicker_exactDate__3Yh7V\",\"days\":\"DataPicker_days__3hwV8\",\"page\":\"DataPicker_page__2sSzB\",\"allDates\":\"DataPicker_allDates__1-6qR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cat\":\"Cats_cat__33h8l\",\"all\":\"Cats_all__2MUbD\",\"eachCat\":\"Cats_eachCat__21Hwk\",\"fav\":\"Cats_fav__1paQX\",\"goToFav\":\"Cats_goToFav__27ad_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateNewPost\":\"MyPosts_CreateNewPost__2w-iG\",\"button\":\"MyPosts_button__WYiBD\",\"text\":\"MyPosts_text__2Nx_E\",\"MyPostsAll\":\"MyPosts_MyPostsAll__1ihEn\",\"posts\":\"MyPosts_posts__3ffAH\",\"error\":\"MyPosts_error__2Z2Hr\",\"fieldPosts\":\"MyPosts_fieldPosts__1pycc\",\"textarea\":\"MyPosts_textarea__Vwbse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"png\":\"Films_png__1DEDb\",\"eachFilm\":\"Films_eachFilm__1Vk5-\",\"rating\":\"Films_rating__3ZOis\",\"des\":\"Films_des__3P0ia\",\"dislike\":\"Films_dislike__2X11V\",\"like\":\"Films_like__2fnrF\",\"delete\":\"Films_delete__1ieEl\",\"all\":\"Films_all__1B3kE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full\":\"books_full__1ADj2\",\"form\":\"books_form__D4hIm\",\"ava\":\"books_ava__-hVX7\",\"info\":\"books_info__ff2ST\",\"eachBook\":\"books_eachBook__2wvHt\",\"all\":\"books_all__soaK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"open\":\"PopUpSlider_open__2AYWL\",\"dialog\":\"PopUpSlider_dialog__3Eqf1\",\"btnClose\":\"PopUpSlider_btnClose__2zmLE\",\"btnOpen\":\"PopUpSlider_btnOpen__iNEkv\",\"btnHide\":\"PopUpSlider_btnHide__1a3o6\",\"banner\":\"PopUpSlider_banner__1sQRy\",\"png\":\"PopUpSlider_png__3eYbu\",\"btnNext\":\"PopUpSlider_btnNext__2hUBe\",\"btnBack\":\"PopUpSlider_btnBack__1VRLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"temp\":\"Weather_temp__MB2CF\",\"halfContainer\":\"Weather_halfContainer__275B9\",\"title\":\"Weather_title__3bisI\",\"subTitle\":\"Weather_subTitle__3fA0W\",\"text1\":\"Weather_text1__3cXyT\",\"loading\":\"Weather_loading__2MrPO\",\"close\":\"Weather_close__2OPq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__3pWdf\",\"All\":\"Login_All__1bzfL\",\"field\":\"Login_field__3fYly\",\"button\":\"Login_button__3tyc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3MNZj\",\"nick\":\"Post_nick___6JKq\",\"mes\":\"Post_mes__YOpiv\",\"newsName\":\"Post_newsName__3t1jC\",\"ava\":\"Post_ava__3Iaod\",\"news\":\"Post_news__3gcXZ\",\"picture\":\"Post_picture__3v-vf\",\"user\":\"Post_user__ubfqR\",\"time\":\"Post_time__2xzW3\",\"content\":\"Post_content__2y3Kf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsName\":\"EachNew_newsName__3zAdp\",\"mes\":\"EachNew_mes__1eA6g\",\"ava\":\"EachNew_ava__uetFQ\",\"news\":\"EachNew_news__2CjDd\",\"picture\":\"EachNew_picture__Kn1pT\",\"user\":\"EachNew_user__1JRRM\",\"time\":\"EachNew_time__3mIkm\",\"content\":\"EachNew_content__3kmeg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Test_all__1wyTu\",\"allSend\":\"Test_allSend__2AxJz\",\"buttons\":\"Test_buttons__2Jgoo\",\"inputs\":\"Test_inputs__QrAqB\",\"input\":\"Test_input__SIKMh\",\"sendNew\":\"Test_sendNew__7J6Ut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1RVtS\",\"button1\":\"Header_button1__2l1z5\",\"logo\":\"Header_logo__3K_R9\",\"track\":\"Header_track__1pSx7\",\"signIn\":\"Header_signIn__1oU2N\",\"loginBlock\":\"Header_loginBlock__2NkwO\",\"userAvatar\":\"Header_userAvatar__3JqNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable\":\"audio_draggable__39ODm\",\"no_drag\":\"audio_no_drag__mAi1I\",\"hide\":\"audio_hide__2fY7n\",\"main\":\"audio_main__2eq2I\",\"windowCtr\":\"audio_windowCtr__1Wbce\",\"appName\":\"audio_appName__2Z2k9\",\"closeW\":\"audio_closeW__20P00\",\"minW\":\"audio_minW__1NjUI\",\"top\":\"audio_top__24iuc\",\"left\":\"audio_left__2B2CP\",\"right\":\"audio_right__jtllM\",\"graphics\":\"audio_graphics__VPY95\",\"header_h3\":\"audio_header_h3__1HxI1\",\"actions\":\"audio_actions__3_HNw\",\"actions_button\":\"audio_actions_button__DoNqC\",\"action_btns\":\"audio_action_btns__1IjCH\",\"album_meta\":\"audio_album_meta__3DkS8\",\"alb\":\"audio_alb__1Iq5k\",\"alb_label\":\"audio_alb_label__2raKw\",\"playlist\":\"audio_playlist__gy1Cn\",\"selected\":\"audio_selected__eSjD5\",\"header\":\"audio_header__1A0ii\",\"songContainer\":\"audio_songContainer__2_ZVS\",\"songContainerSelected\":\"audio_songContainerSelected__33RCl\",\"pltext\":\"audio_pltext__3sv_t\",\"loi\":\"audio_loi__Fr4KF\",\"tmbn_song\":\"audio_tmbn_song__6kc6e\",\"tmbn_song1\":\"audio_tmbn_song1__3Ey4y\",\"songlist\":\"audio_songlist__1D3_1\",\"songmeta\":\"audio_songmeta__enTAy\",\"songname\":\"audio_songname__34Ny-\",\"songauthors\":\"audio_songauthors__2g2wM\",\"song_duration\":\"audio_song_duration__yMuHl\",\"fav_song\":\"audio_fav_song__2iWkf\",\"controls\":\"audio_controls__1HLi_\",\"vlme\":\"audio_vlme__e2sVD\",\"volum\":\"audio_volum__2Hwat\",\"volBar\":\"audio_volBar__HaeFc\",\"musicControls\":\"audio_musicControls__49Sui\",\"play\":\"audio_play__QJh-G\",\"prev\":\"audio_prev__3Jsts\",\"next\":\"audio_next__2qEdv\",\"progressb\":\"audio_progressb__3Jh2f\",\"songMeta\":\"audio_songMeta__12TnC\",\"songtitle\":\"audio_songtitle__1inwV\",\"songartistName\":\"audio_songartistName__3K4yd\",\"prgbar\":\"audio_prgbar__2Drja\",\"plsoptions\":\"audio_plsoptions__3QhMY\",\"active\":\"audio_active__2mKyw\",\"currentT\":\"audio_currentT__2IOM3\",\"totalT\":\"audio_totalT__2t3Rs\",\"bttn\":\"audio_bttn__1X7p3\",\"bttn1\":\"audio_bttn1__35J7z\",\"bttn2\":\"audio_bttn2__24JAf\",\"bttn3\":\"audio_bttn3__3QZSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__YzqfS\",\"pageNumber\":\"Paginator_pageNumber__5NoqJ\",\"selectedPage\":\"Paginator_selectedPage__2wd_y\",\"back\":\"Paginator_back__1ULLP\",\"last\":\"Paginator_last__wvt4R\",\"next\":\"Paginator_next__35rpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Diallogs_dialogs__H3JZU\",\"dialogsitem\":\"Diallogs_dialogsitem__oXHad\",\"massages1\":\"Diallogs_massages1__2wppl\",\"but\":\"Diallogs_but__3Bk3y\",\"text\":\"Diallogs_text__1y5lD\",\"seacrh\":\"Diallogs_seacrh__cqIsn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"mainAndProfilePages_input___Y4Yi\",\"button\":\"mainAndProfilePages_button__1dETJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"All_all__3youM\",\"but\":\"All_but__3K-3M\",\"textare\":\"All_textare__b3dIY\",\"seacrh\":\"All_seacrh__xZt8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"All\":\"EachUser_All__2kfcU\",\"info\":\"EachUser_info__2UnA6\",\"ava\":\"EachUser_ava__2AIhy\",\"name\":\"EachUser_name__1PdOl\",\"message\":\"EachUser_message__1mKMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-wrapper\":\"App_app-wrapper__2UNO-\",\"app-wrapper-content\":\"App_app-wrapper-content__3foEi\",\"menuShadow\":\"App_menuShadow__3E3Rx\",\"logo1\":\"App_logo1__K3TCc\",\"weather\":\"App_weather__EiRvj\"};"],"sourceRoot":""}